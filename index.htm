<!DOCTYPE HTML>
<!-- saved from url=(0039)http://wiki.eclipse.org/EGit/User_Guide -->
<!DOCTYPE html PUBLIC "" ""><HTML class="client-nojs" lang="en" 
dir="ltr"><HEAD><META content="IE=11.0000" http-equiv="X-UA-Compatible">
 
<META charset="UTF-8"> <TITLE>EGit/User Guide - Eclipsepedia</TITLE> 
<SCRIPT>document.documentElement.className = document.documentElement.className.replace( /(^|\s)client-nojs(\s|$)/, "$1client-js$2" );</SCRIPT>
 
<SCRIPT>window.RLQ = window.RLQ || []; window.RLQ.push( function () {
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":!1,"wgNamespaceNumber":0,"wgPageName":"EGit/User_Guide","wgTitle":"EGit/User Guide","wgCurRevisionId":392614,"wgRevisionId":392614,"wgArticleId":20966,"wgIsArticle":!0,"wgIsRedirect":!1,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":[],"wgBreakFrames":!1,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"EGit/User_Guide","wgRelevantArticleId":20966,"wgIsProbablyEditable":!1,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgWikiEditorEnabledModules":{"toolbar":!1,"dialogs":!1,"preview":!1,"publish":!1},
"wgCategoryTreePageCategoryOptions":"{\"mode\":0,\"hideprefix\":20,\"showcount\":true,\"namespaces\":false}"});mw.loader.implement("user.options",function($,jQuery){mw.user.options.set({"variant":"en"});});mw.loader.implement("user.tokens",function($,jQuery){mw.user.tokens.set({"editToken":"+\\","patrolToken":"+\\","watchToken":"+\\"});});mw.loader.load(["mediawiki.page.startup","mediawiki.legacy.wikibits"]);
} );</SCRIPT>
 <LINK href="index.files/load.css" rel="stylesheet"> <LINK href="index.files/styles.min.css" 
rel="stylesheet" media="screen, print"> 
<META name="ResourceLoaderDynamicStyles" content=""> 
<STYLE>a:lang(ar),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}</STYLE>
 
<SCRIPT src="index.files/load.js" async=""></SCRIPT>
 
<META name="GENERATOR" content="MSHTML 11.00.9600.18315"> <LINK href="/eclipse.org-common/themes/solstice/public/images/favicon.ico" 
rel="shortcut icon"> <LINK title="Eclipsepedia (en)" href="/opensearch_desc.php" 
rel="search" type="application/opensearchdescription+xml"> <LINK href="http://wiki.eclipse.org/api.php?action=rsd" 
rel="EditURI" type="application/rsd+xml"> <LINK title="Eclipsepedia Atom feed" 
href="/index.php?title=Special:RecentChanges&amp;feed=atom" rel="alternate" 
type="application/atom+xml"> 
<META name="viewport" content="width=device-width, initial-scale=1.0"> </HEAD> 
<BODY class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-EGit_User_Guide skin-solstice action-view" 
id="solstice"><A class="sr-only" href="http://wiki.eclipse.org/EGit/User_Guide#content">Skip 
to main content</A> <HEADER class="thin-header hidden-print" id="header-wrapper" 
role="banner">
<DIV class="container-fluid reset">
<DIV class="row-fluid" id="header-row">
<DIV class="col-sm-6 col-md-6 col-lg-5" id="header-left">
<DIV class="wrapper-logo-default"><A href="https://www.eclipse.org/"><IMG class="logo-eclipse-default img-responsive hidden-xs padding-top-10" 
alt="logo" src="index.files/eclipse-426x100.png"></A></DIV></DIV>
<DIV class="col-sm-18 col-md-18 col-lg-19" id="main-menu-wrapper">
<DIV class="navbar yamm navbar-right" id="main-menu">
<DIV class="navbar-collapse collapse" id="navbar-collapse-1">
<UL class="nav navbar-nav">
  <LI class="visible-thin"><A href="https://www.eclipse.org/downloads/" target="_self">Download</A></LI>
  <LI><A href="https://www.eclipse.org/users/" target="_self">Getting 
  Started</A></LI>
  <LI><A href="https://www.eclipse.org/membership/" 
  target="_self">Members</A></LI>
  <LI><A href="https://www.eclipse.org/projects/" 
  target="_self">Projects</A></LI>
  <LI class="dropdown visible-xs"><A class="dropdown-toggle" href="http://wiki.eclipse.org/EGit/User_Guide#" 
  data-toggle="dropdown">Community <B class="caret"></B></A>
  <UL class="dropdown-menu">
    <LI><A href="http://marketplace.eclipse.org/">Marketplace</A></LI>
    <LI><A href="http://events.eclipse.org/">Events</A></LI>
    <LI><A href="http://www.planeteclipse.org/">Planet Eclipse</A></LI>
    <LI><A 
    href="https://www.eclipse.org/community/eclipse_newsletter/">Newsletter</A></LI>
    <LI><A 
href="https://www.youtube.com/user/EclipseFdn">Videos</A></LI></UL></LI>
  <LI class="dropdown visible-xs"><A class="dropdown-toggle" href="http://wiki.eclipse.org/EGit/User_Guide#" 
  data-toggle="dropdown">Participate <B class="caret"></B></A>
  <UL class="dropdown-menu">
    <LI><A href="https://bugs.eclipse.org/bugs/">Report a Bug</A></LI>
    <LI><A href="https://www.eclipse.org/forums/">Forums</A></LI>
    <LI><A href="https://www.eclipse.org/mail/">Mailing Lists</A></LI>
    <LI><A href="https://wiki.eclipse.org/">Wiki</A></LI>
    <LI><A href="https://wiki.eclipse.org/IRC">IRC</A></LI>
    <LI><A href="https://www.eclipse.org/contribute/">How to 
  Contribute</A></LI></UL></LI>
  <LI class="dropdown visible-xs"><A class="dropdown-toggle" href="http://wiki.eclipse.org/EGit/User_Guide#" 
  data-toggle="dropdown">Working Groups <B class="caret"></B></A>
  <UL class="dropdown-menu">
    <LI><A href="http://wiki.eclipse.org/Auto_IWG">Automotive</A></LI>
    <LI><A href="http://iot.eclipse.org/">Internet of Things</A></LI>
    <LI><A href="http://locationtech.org/">LocationTech</A></LI>
    <LI><A href="http://lts.eclipse.org/">Long-Term Support</A></LI>
    <LI><A href="http://polarsys.org/">PolarSys</A></LI>
    <LI><A href="http://science.eclipse.org/">Science</A></LI>
    <LI><A href="http://www.openmdm.org/">OpenMDM</A></LI></UL></LI><!-- More -->  
               
  <LI class="dropdown eclipse-more hidden-xs"><A class="dropdown-toggle" 
  data-toggle="dropdown">More<B class="caret"></B></A>
  <UL class="dropdown-menu">
    <LI><!-- Content container to add padding -->                     
    <DIV class="yamm-content">
    <DIV class="row">
    <UL class="col-sm-8 list-unstyled">
      <LI>
      <P><STRONG>Community</STRONG></P></LI>
      <LI><A href="http://marketplace.eclipse.org/">Marketplace</A></LI>
      <LI><A href="http://events.eclipse.org/">Events</A></LI>
      <LI><A href="http://www.planeteclipse.org/">Planet Eclipse</A></LI>
      <LI><A 
      href="https://www.eclipse.org/community/eclipse_newsletter/">Newsletter</A></LI>
      <LI><A href="https://www.youtube.com/user/EclipseFdn">Videos</A></LI></UL>
    <UL class="col-sm-8 list-unstyled">
      <LI>
      <P><STRONG>Participate</STRONG></P></LI>
      <LI><A href="https://bugs.eclipse.org/bugs/">Report a Bug</A></LI>
      <LI><A href="https://www.eclipse.org/forums/">Forums</A></LI>
      <LI><A href="https://www.eclipse.org/mail/">Mailing Lists</A></LI>
      <LI><A href="https://wiki.eclipse.org/">Wiki</A></LI>
      <LI><A href="https://wiki.eclipse.org/IRC">IRC</A></LI>
      <LI><A href="https://www.eclipse.org/contribute/">How to 
      Contribute</A></LI></UL>
    <UL class="col-sm-8 list-unstyled">
      <LI>
      <P><STRONG>Working Groups</STRONG></P></LI>
      <LI><A href="http://wiki.eclipse.org/Auto_IWG">Automotive</A></LI>
      <LI><A href="http://iot.eclipse.org/">Internet of Things</A></LI>
      <LI><A href="http://locationtech.org/">LocationTech</A></LI>
      <LI><A href="http://lts.eclipse.org/">Long-Term Support</A></LI>
      <LI><A href="http://polarsys.org/">PolarSys</A></LI>
      <LI><A href="http://science.eclipse.org/">Science</A></LI>
      <LI><A 
  href="http://www.openmdm.org/">OpenMDM</A></LI></UL></DIV></DIV></LI></UL></LI></UL></DIV>
<DIV class="navbar-header"><BUTTON class="navbar-toggle" type="button" 
data-toggle="collapse" data-target="#navbar-collapse-1"><SPAN 
class="sr-only">Toggle navigation</SPAN>             <SPAN 
class="icon-bar"></SPAN><SPAN class="icon-bar"></SPAN><SPAN 
class="icon-bar"></SPAN><SPAN class="icon-bar"></SPAN></BUTTON>             
<DIV class="wrapper-logo-mobile"><A class="navbar-brand visible-xs" href="https://www.eclipse.org/"><IMG 
class="logo-eclipse-default-mobile img-responsive" alt="logo" src="index.files/eclipse-800x188.png"></A></DIV></DIV></DIV></DIV></DIV></DIV></HEADER><SECTION 
class="hidden-print default-breadcrumbs" id="breadcrumb">
<DIV class="container-fluid">
<H3 class="sr-only">Breadcrumbs</H3>
<DIV class="row-fluid">
<DIV class="col-xs-24">
<OL class="breadcrumb">
  <LI><A href="https://www.eclipse.org/">Home</A></LI>
  <LI><A href="http://wiki.eclipse.org/Main_Page">Eclipse Wiki</A></LI>
  <LI class="active">EGit/User Guide</LI></OL></DIV></DIV></DIV></SECTION><!-- /#breadcrumb --> 
<DIV class="toolbar-menu breadcrumbs-offset noprint hidden-print margin-bottom-0 clearfix">
<DIV class="col-md-24">
<OL class="breadcrumb" role="navigation">
  <LI id="pt-login"><A href="http://wiki.eclipse.org/index.php?title=Special:UserLogin&amp;returnto=EGit%2FUser+Guide"><I 
  class="fa fa-sign-in fa-fw orange"></I> Log in            </A>           
</LI></OL></DIV></DIV><main class="background-grey no-promo" role="main">
<DIV class="container-full"><!-- content -->     <SECTION class="mw-body container-full clearfix 0" 
id="content">
<DIV id="mw-js-message" style="display: none;"></DIV><!-- bodyContent -->       
<DIV id="bodyContent"><!-- jumpto -->         
<DIV class="mw-jump" id="jump-to-nav">          Jump to: <A href="http://wiki.eclipse.org/EGit/User_Guide#mw-head">navigation</A>, 
          <A href="http://wiki.eclipse.org/EGit/User_Guide#p-search">search</A>  
       </DIV><!-- /jumpto -->                   <!-- leftcol -->           
<ASIDE class="col-md-4 noprint hidden-print" id="leftcol">
<FORM class="input-group" id="form-eclipse-search" role="form" action="/index.php"><INPUT name="search" title="Special:Search" class="search-query form-control" id="searchInput" accesskey="f" type="search" placeholder="Search" value=""> 
              <SPAN class="input-group-btn"><BUTTON name="fulltext" title="Search the pages for this text" 
class="btn btn-default" id="mw-searchButton" type="submit" value="search"><I 
class="fa fa-search"></I>                 </BUTTON>               </SPAN>        
     </FORM><SELECT class="form-control margin-top-10 margin-bottom-10 visible-xs visible-sm" 
onchange="this.options[this.selectedIndex].value &amp;&amp; (window.location = this.options[this.selectedIndex].value);"><OPTION 
  class="fw-700 ">---Navigation---</OPTION><OPTION value="/Main_Page">Main 
  Page</OPTION><OPTION value="/Eclipsepedia:Community_portal">Community 
  portal</OPTION><OPTION value="/Eclipsepedia:Current_events">Current 
  events</OPTION><OPTION value="/Special:RecentChanges">Recent 
  changes</OPTION><OPTION value="/Special:Random">Random page</OPTION><OPTION 
  value="https://www.mediawiki.org/wiki/Special:MyLanguage/Help:Contents">Help</OPTION></SELECT>
<UL class="ul-left-nav fa-ul hidden-print leftnav hidden-xs hidden-sm">
  <LI class="separator"><SPAN class="separator">Navigation</SPAN></LI>
  <LI><I class="fa fa-angle-double-right orange fa-fw"></I> <A title="Visit the main page [z]" 
  id="n-mainpage" accesskey="z" href="http://wiki.eclipse.org/Main_Page">Main 
  Page</A></LI>
  <LI><I class="fa fa-angle-double-right orange fa-fw"></I> <A title="About the project, what you can do, where to find things" 
  id="n-portal" 
  href="http://wiki.eclipse.org/Eclipsepedia:Community_portal">Community 
  portal</A></LI>
  <LI><I class="fa fa-angle-double-right orange fa-fw"></I> <A title="Find background information on current events" 
  id="n-currentevents" href="http://wiki.eclipse.org/Eclipsepedia:Current_events">Current 
  events</A></LI>
  <LI><I class="fa fa-angle-double-right orange fa-fw"></I> <A title="A list of recent changes in the wiki [r]" 
  id="n-recentchanges" accesskey="r" href="http://wiki.eclipse.org/Special:RecentChanges">Recent 
  changes</A></LI>
  <LI><I class="fa fa-angle-double-right orange fa-fw"></I> <A title="Load a random page [x]" 
  id="n-randompage" accesskey="x" 
  href="http://wiki.eclipse.org/Special:Random">Random page</A></LI>
  <LI><I class="fa fa-angle-double-right orange fa-fw"></I> <A title="The place to find out" 
  id="n-help" href="https://www.mediawiki.org/wiki/Special:MyLanguage/Help:Contents">Help</A></LI></UL><SELECT 
class="form-control margin-top-10 margin-bottom-10 visible-xs visible-sm" 
onchange="this.options[this.selectedIndex].value &amp;&amp; (window.location = this.options[this.selectedIndex].value);"><OPTION 
  class="fw-700 ">---Toolbox---</OPTION><OPTION value="/index.php?title=EGit/User_Guide&amp;action=info">Page 
  information</OPTION><OPTION value="/index.php?title=EGit/User_Guide&amp;oldid=392614">Permanent 
  link</OPTION><OPTION value="/index.php?title=EGit/User_Guide&amp;printable=yes">Printable 
  version</OPTION><OPTION value="/Special:SpecialPages">Special 
  pages</OPTION><OPTION 
  value="/Special:RecentChangesLinked/EGit/User_Guide">Related 
  changes</OPTION><OPTION value="/Special:WhatLinksHere/EGit/User_Guide">What 
  links here</OPTION></SELECT>
<UL class="ul-left-nav fa-ul hidden-print leftnav hidden-xs hidden-sm">
  <LI class="separator"><SPAN class="separator">Toolbox</SPAN></LI>
  <LI><I class="fa fa-angle-double-right orange fa-fw"></I> <A title="More information about this page" 
  id="t-info" href="http://wiki.eclipse.org/index.php?title=EGit/User_Guide&amp;action=info">Page 
  information</A></LI>
  <LI><I class="fa fa-angle-double-right orange fa-fw"></I> <A title="Permanent link to this revision of the page" 
  id="t-permalink" href="http://wiki.eclipse.org/index.php?title=EGit/User_Guide&amp;oldid=392614">Permanent 
  link</A></LI>
  <LI><I class="fa fa-angle-double-right orange fa-fw"></I> <A title="Printable version of this page [p]" 
  id="t-print" accesskey="p" href="http://wiki.eclipse.org/index.php?title=EGit/User_Guide&amp;printable=yes" 
  rel="alternate">Printable version</A></LI>
  <LI><I class="fa fa-angle-double-right orange fa-fw"></I> <A title="A list of all special pages [q]" 
  id="t-specialpages" accesskey="q" href="http://wiki.eclipse.org/Special:SpecialPages">Special 
  pages</A></LI>
  <LI><I class="fa fa-angle-double-right orange fa-fw"></I> <A title="Recent changes in pages linked from this page [k]" 
  id="t-recentchangeslinked" accesskey="k" href="http://wiki.eclipse.org/Special:RecentChangesLinked/EGit/User_Guide">Related 
  changes</A></LI>
  <LI><I class="fa fa-angle-double-right orange fa-fw"></I> <A title="A list of all wiki pages that link here [j]" 
  id="t-whatlinkshere" accesskey="j" href="http://wiki.eclipse.org/Special:WhatLinksHere/EGit/User_Guide">What 
  links here</A></LI></UL></ASIDE><!-- /leftcol -->           <!-- mainContent --> 
          
<DIV class="col-md-20" id="mainContent">
<UL class="nav nav-tabs noprint hidden-print" role="tablist">
  <LI class="active" id="ca-nstab-main"><A tabindex="-1" title="View the content page [c]" 
  accesskey="c" href="http://wiki.eclipse.org/EGit/User_Guide">Page</A></LI>
  <LI id="ca-talk"><A tabindex="-1" title="Discussion about the content page [t]" 
  accesskey="t" 
  href="http://wiki.eclipse.org/Talk:EGit/User_Guide">Discussion</A></LI>
  <LI id="ca-viewsource"><A tabindex="-1" title="This page is protected.&#10;You can view its source [e]" 
  accesskey="e" href="http://wiki.eclipse.org/index.php?title=EGit/User_Guide&amp;action=edit">View 
  source</A></LI>
  <LI class="collapsible" id="ca-history"><A tabindex="-1" title="Past revisions of this page [h]" 
  accesskey="h" href="http://wiki.eclipse.org/index.php?title=EGit/User_Guide&amp;action=history">History</A></LI></UL>
<DIV class="tab-content background-white">
<DIV class="tab-pane active" id="tab-pane-main-page-content">
<H1 class="firstHeading page-header" id="firstHeading"><SPAN 
dir="auto">EGit/User Guide</SPAN>                 </H1>
<DIV id="main-page-content"><!-- subtitle -->                   
<DIV class="alert alert-small alert-warning" id="contentSub"><SPAN class="subpages">&lt; 
<A title="EGit" href="http://wiki.eclipse.org/EGit">EGit</A></SPAN></DIV><!-- /subtitle --> 
                                                      
<DIV class="mw-content-ltr" id="mw-content-text" lang="en" dir="ltr">
<DIV class="toc" id="toc">
<DIV id="toctitle">
<H2>Contents</H2></DIV>
<UL>
  <LI class="toclevel-1 tocsection-1"><A href="http://wiki.eclipse.org/EGit/User_Guide#Getting_Started"><SPAN 
  class="tocnumber">1</SPAN> <SPAN class="toctext">Getting Started</SPAN></A> 
  <UL>
    <LI class="toclevel-2 tocsection-2"><A href="http://wiki.eclipse.org/EGit/User_Guide#Overview"><SPAN 
    class="tocnumber">1.1</SPAN> <SPAN class="toctext">Overview</SPAN></A></LI>
    <LI class="toclevel-2 tocsection-3"><A href="http://wiki.eclipse.org/EGit/User_Guide#Basic_Tutorial:_Adding_a_project_to_version_control"><SPAN 
    class="tocnumber">1.2</SPAN> <SPAN class="toctext">Basic Tutorial: Adding a 
    project to version control</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-4"><A href="http://wiki.eclipse.org/EGit/User_Guide#Configuration"><SPAN 
      class="tocnumber">1.2.1</SPAN> <SPAN 
      class="toctext">Configuration</SPAN></A> 
      <UL>
        <LI class="toclevel-4 tocsection-5"><A href="http://wiki.eclipse.org/EGit/User_Guide#Identifying_yourself"><SPAN 
        class="tocnumber">1.2.1.1</SPAN> <SPAN class="toctext">Identifying 
        yourself</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-6"><A href="http://wiki.eclipse.org/EGit/User_Guide#Setting_up_the_Home_Directory_on_Windows"><SPAN 
        class="tocnumber">1.2.1.2</SPAN> <SPAN class="toctext">Setting up the 
        Home Directory on Windows</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-7"><A href="http://wiki.eclipse.org/EGit/User_Guide#Pointing_out_the_System_wide_configuration"><SPAN 
        class="tocnumber">1.2.1.3</SPAN> <SPAN class="toctext">Pointing out the 
        System wide configuration</SPAN></A></LI></UL></LI>
      <LI class="toclevel-3 tocsection-8"><A href="http://wiki.eclipse.org/EGit/User_Guide#Create_Repository"><SPAN 
      class="tocnumber">1.2.2</SPAN> <SPAN class="toctext">Create 
      Repository</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-9"><A href="http://wiki.eclipse.org/EGit/User_Guide#Track_Changes"><SPAN 
      class="tocnumber">1.2.3</SPAN> <SPAN class="toctext">Track 
      Changes</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-10"><A href="http://wiki.eclipse.org/EGit/User_Guide#Inspect_History"><SPAN 
      class="tocnumber">1.2.4</SPAN> <SPAN class="toctext">Inspect 
      History</SPAN></A></LI></UL></LI>
    <LI class="toclevel-2 tocsection-11"><A href="http://wiki.eclipse.org/EGit/User_Guide#GitHub_Tutorial"><SPAN 
    class="tocnumber">1.3</SPAN> <SPAN class="toctext">GitHub 
    Tutorial</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-12"><A href="http://wiki.eclipse.org/EGit/User_Guide#Create_Local_Repository"><SPAN 
      class="tocnumber">1.3.1</SPAN> <SPAN class="toctext">Create Local 
      Repository</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-13"><A href="http://wiki.eclipse.org/EGit/User_Guide#Create_Repository_at_GitHub"><SPAN 
      class="tocnumber">1.3.2</SPAN> <SPAN class="toctext">Create Repository at 
      GitHub</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-14"><A href="http://wiki.eclipse.org/EGit/User_Guide#Eclipse_SSH_Configuration"><SPAN 
      class="tocnumber">1.3.3</SPAN> <SPAN class="toctext">Eclipse SSH 
      Configuration</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-15"><A href="http://wiki.eclipse.org/EGit/User_Guide#Push_Upstream"><SPAN 
      class="tocnumber">1.3.4</SPAN> <SPAN class="toctext">Push 
      Upstream</SPAN></A></LI></UL></LI>
    <LI class="toclevel-2 tocsection-16"><A href="http://wiki.eclipse.org/EGit/User_Guide#EclipseCon_2012_Git_Tutorial"><SPAN 
    class="tocnumber">1.4</SPAN> <SPAN class="toctext">EclipseCon 2012 Git 
    Tutorial</SPAN></A></LI></UL></LI>
  <LI class="toclevel-1 tocsection-17"><A href="http://wiki.eclipse.org/EGit/User_Guide#Concepts"><SPAN 
  class="tocnumber">2</SPAN> <SPAN class="toctext">Concepts</SPAN></A> 
  <UL>
    <LI class="toclevel-2 tocsection-18"><A href="http://wiki.eclipse.org/EGit/User_Guide#Repository"><SPAN 
    class="tocnumber">2.1</SPAN> <SPAN 
class="toctext">Repository</SPAN></A></LI>
    <LI class="toclevel-2 tocsection-19"><A href="http://wiki.eclipse.org/EGit/User_Guide#Index"><SPAN 
    class="tocnumber">2.2</SPAN> <SPAN class="toctext">Index</SPAN></A></LI>
    <LI class="toclevel-2 tocsection-20"><A href="http://wiki.eclipse.org/EGit/User_Guide#Branches"><SPAN 
    class="tocnumber">2.3</SPAN> <SPAN class="toctext">Branches</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-21"><A href="http://wiki.eclipse.org/EGit/User_Guide#Local_Branches"><SPAN 
      class="tocnumber">2.3.1</SPAN> <SPAN class="toctext">Local 
      Branches</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-22"><A href="http://wiki.eclipse.org/EGit/User_Guide#Remote_Tracking_Branches"><SPAN 
      class="tocnumber">2.3.2</SPAN> <SPAN class="toctext">Remote Tracking 
      Branches</SPAN></A></LI></UL></LI>
    <LI class="toclevel-2 tocsection-23"><A href="http://wiki.eclipse.org/EGit/User_Guide#Working_Directory"><SPAN 
    class="tocnumber">2.4</SPAN> <SPAN class="toctext">Working 
    Directory</SPAN></A></LI>
    <LI class="toclevel-2 tocsection-24"><A href="http://wiki.eclipse.org/EGit/User_Guide#Recording_Changes_in_the_Repository"><SPAN 
    class="tocnumber">2.5</SPAN> <SPAN class="toctext">Recording Changes in the 
    Repository</SPAN></A></LI></UL></LI>
  <LI class="toclevel-1 tocsection-25"><A href="http://wiki.eclipse.org/EGit/User_Guide#Tasks"><SPAN 
  class="tocnumber">3</SPAN> <SPAN class="toctext">Tasks</SPAN></A> 
  <UL>
    <LI class="toclevel-2 tocsection-26"><A href="http://wiki.eclipse.org/EGit/User_Guide#Creating_Repositories"><SPAN 
    class="tocnumber">3.1</SPAN> <SPAN class="toctext">Creating 
    Repositories</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-27"><A href="http://wiki.eclipse.org/EGit/User_Guide#Considerations_for_Git_Repositories_to_be_used_in_Eclipse"><SPAN 
      class="tocnumber">3.1.1</SPAN> <SPAN class="toctext">Considerations for 
      Git Repositories to be used in Eclipse</SPAN></A> 
      <UL>
        <LI class="toclevel-4 tocsection-28"><A href="http://wiki.eclipse.org/EGit/User_Guide#The_short_story"><SPAN 
        class="tocnumber">3.1.1.1</SPAN> <SPAN class="toctext">The short 
        story</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-29"><A href="http://wiki.eclipse.org/EGit/User_Guide#The_longer_story"><SPAN 
        class="tocnumber">3.1.1.2</SPAN> <SPAN class="toctext">The longer 
        story</SPAN></A> 
        <UL>
          <LI class="toclevel-5 tocsection-30"><A href="http://wiki.eclipse.org/EGit/User_Guide#Eclipse_Workspace_and_Repository_working_directory"><SPAN 
          class="tocnumber">3.1.1.2.1</SPAN> <SPAN class="toctext">Eclipse 
          Workspace and Repository working directory</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-31"><A href="http://wiki.eclipse.org/EGit/User_Guide#Implications"><SPAN 
          class="tocnumber">3.1.1.2.2</SPAN> <SPAN 
          class="toctext">Implications</SPAN></A></LI></UL></LI></UL></LI>
      <LI class="toclevel-3 tocsection-32"><A href="http://wiki.eclipse.org/EGit/User_Guide#Creating_a_new_empty_Git_Repository"><SPAN 
      class="tocnumber">3.1.2</SPAN> <SPAN class="toctext">Creating a new empty 
      Git Repository</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-33"><A href="http://wiki.eclipse.org/EGit/User_Guide#Creating_a_Git_Repository_for_multiple_Projects"><SPAN 
      class="tocnumber">3.1.3</SPAN> <SPAN class="toctext">Creating a Git 
      Repository for multiple Projects</SPAN></A></LI></UL></LI>
    <LI class="toclevel-2 tocsection-34"><A href="http://wiki.eclipse.org/EGit/User_Guide#Starting_from_existing_Git_Repositories"><SPAN 
    class="tocnumber">3.2</SPAN> <SPAN class="toctext">Starting from existing 
    Git Repositories</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-35"><A href="http://wiki.eclipse.org/EGit/User_Guide#Starting_the_import_wizard"><SPAN 
      class="tocnumber">3.2.1</SPAN> <SPAN class="toctext">Starting the import 
      wizard</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-36"><A href="http://wiki.eclipse.org/EGit/User_Guide#Cloning_or_adding_Repositories"><SPAN 
      class="tocnumber">3.2.2</SPAN> <SPAN class="toctext">Cloning or adding 
      Repositories</SPAN></A> 
      <UL>
        <LI class="toclevel-4 tocsection-37"><A href="http://wiki.eclipse.org/EGit/User_Guide#Cloning_a_Repository"><SPAN 
        class="tocnumber">3.2.2.1</SPAN> <SPAN class="toctext">Cloning a 
        Repository</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-38"><A href="http://wiki.eclipse.org/EGit/User_Guide#Adding_a_Repository"><SPAN 
        class="tocnumber">3.2.2.2</SPAN> <SPAN class="toctext">Adding a 
        Repository</SPAN></A></LI></UL></LI>
      <LI class="toclevel-3 tocsection-39"><A href="http://wiki.eclipse.org/EGit/User_Guide#Selecting_a_Repository_from_the_List"><SPAN 
      class="tocnumber">3.2.3</SPAN> <SPAN class="toctext">Selecting a 
      Repository from the List</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-40"><A href="http://wiki.eclipse.org/EGit/User_Guide#Importing_projects"><SPAN 
      class="tocnumber">3.2.4</SPAN> <SPAN class="toctext">Importing 
      projects</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-41"><A href="http://wiki.eclipse.org/EGit/User_Guide#Wizard_for_project_import"><SPAN 
      class="tocnumber">3.2.5</SPAN> <SPAN class="toctext">Wizard for project 
      import</SPAN></A> 
      <UL>
        <LI class="toclevel-4 tocsection-42"><A href="http://wiki.eclipse.org/EGit/User_Guide#Import_Existing_Projects"><SPAN 
        class="tocnumber">3.2.5.1</SPAN> <SPAN class="toctext">Import Existing 
        Projects</SPAN></A> 
        <UL>
          <LI class="toclevel-5 tocsection-43"><A href="http://wiki.eclipse.org/EGit/User_Guide#Limiting_the_Scope_for_Project_Import"><SPAN 
          class="tocnumber">3.2.5.1.1</SPAN> <SPAN class="toctext">Limiting the 
          Scope for Project Import</SPAN></A></LI></UL></LI>
        <LI class="toclevel-4 tocsection-44"><A href="http://wiki.eclipse.org/EGit/User_Guide#Use_the_New_Projects_Wizard"><SPAN 
        class="tocnumber">3.2.5.2</SPAN> <SPAN class="toctext">Use the New 
        Projects Wizard</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-45"><A href="http://wiki.eclipse.org/EGit/User_Guide#Import_as_General_Project"><SPAN 
        class="tocnumber">3.2.5.3</SPAN> <SPAN class="toctext">Import as General 
        Project</SPAN></A></LI></UL></LI></UL></LI>
    <LI class="toclevel-2 tocsection-46"><A href="http://wiki.eclipse.org/EGit/User_Guide#Working_with_remote_Repositories"><SPAN 
    class="tocnumber">3.3</SPAN> <SPAN class="toctext">Working with remote 
    Repositories</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-47"><A href="http://wiki.eclipse.org/EGit/User_Guide#Cloning_Remote_Repositories"><SPAN 
      class="tocnumber">3.3.1</SPAN> <SPAN class="toctext">Cloning Remote 
      Repositories</SPAN></A> 
      <UL>
        <LI class="toclevel-4 tocsection-48"><A href="http://wiki.eclipse.org/EGit/User_Guide#Repository_Selection"><SPAN 
        class="tocnumber">3.3.1.1</SPAN> <SPAN class="toctext">Repository 
        Selection</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-49"><A href="http://wiki.eclipse.org/EGit/User_Guide#Branch_Selection"><SPAN 
        class="tocnumber">3.3.1.2</SPAN> <SPAN class="toctext">Branch 
        Selection</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-50"><A href="http://wiki.eclipse.org/EGit/User_Guide#Local_Destination"><SPAN 
        class="tocnumber">3.3.1.3</SPAN> <SPAN class="toctext">Local 
        Destination</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-51"><A href="http://wiki.eclipse.org/EGit/User_Guide#Cloning_from_specific_locations"><SPAN 
        class="tocnumber">3.3.1.4</SPAN> <SPAN class="toctext">Cloning from 
        specific locations</SPAN></A></LI></UL></LI>
      <LI class="toclevel-3 tocsection-52"><A href="http://wiki.eclipse.org/EGit/User_Guide#Pushing_to_other_Repositories"><SPAN 
      class="tocnumber">3.3.2</SPAN> <SPAN class="toctext">Pushing to other 
      Repositories</SPAN></A> 
      <UL>
        <LI class="toclevel-4 tocsection-53"><A href="http://wiki.eclipse.org/EGit/User_Guide#Pushing_to_upstream"><SPAN 
        class="tocnumber">3.3.2.1</SPAN> <SPAN class="toctext">Pushing to 
        upstream</SPAN></A> 
        <UL>
          <LI class="toclevel-5 tocsection-54"><A href="http://wiki.eclipse.org/EGit/User_Guide#Configuring_upstream_push"><SPAN 
          class="tocnumber">3.3.2.1.1</SPAN> <SPAN class="toctext">Configuring 
          upstream push</SPAN></A></LI></UL></LI>
        <LI class="toclevel-4 tocsection-55"><A href="http://wiki.eclipse.org/EGit/User_Guide#Direct_Push"><SPAN 
        class="tocnumber">3.3.2.2</SPAN> <SPAN class="toctext">Direct 
        Push</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-56"><A href="http://wiki.eclipse.org/EGit/User_Guide#Push_Wizard"><SPAN 
        class="tocnumber">3.3.2.3</SPAN> <SPAN class="toctext">Push 
        Wizard</SPAN></A> 
        <UL>
          <LI class="toclevel-5 tocsection-57"><A href="http://wiki.eclipse.org/EGit/User_Guide#Push_URI"><SPAN 
          class="tocnumber">3.3.2.3.1</SPAN> <SPAN class="toctext">Push 
          URI</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-58"><A href="http://wiki.eclipse.org/EGit/User_Guide#Push_Ref_Specifications"><SPAN 
          class="tocnumber">3.3.2.3.2</SPAN> <SPAN class="toctext">Push Ref 
          Specifications</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-59"><A href="http://wiki.eclipse.org/EGit/User_Guide#Delete_Ref_Specifications"><SPAN 
          class="tocnumber">3.3.2.3.3</SPAN> <SPAN class="toctext">Delete Ref 
          Specifications</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-60"><A href="http://wiki.eclipse.org/EGit/User_Guide#Conflicting_Push_Ref_Specifications"><SPAN 
          class="tocnumber">3.3.2.3.4</SPAN> <SPAN class="toctext">Conflicting 
          Push Ref Specifications</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-61"><A href="http://wiki.eclipse.org/EGit/User_Guide#Push_Confirmation"><SPAN 
          class="tocnumber">3.3.2.3.5</SPAN> <SPAN class="toctext">Push 
          Confirmation</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-62"><A href="http://wiki.eclipse.org/EGit/User_Guide#Push_Result_Report"><SPAN 
          class="tocnumber">3.3.2.3.6</SPAN> <SPAN class="toctext">Push Result 
          Report</SPAN></A></LI></UL></LI></UL></LI>
      <LI class="toclevel-3 tocsection-63"><A href="http://wiki.eclipse.org/EGit/User_Guide#Fetching_from_other_Repositories"><SPAN 
      class="tocnumber">3.3.3</SPAN> <SPAN class="toctext">Fetching from other 
      Repositories</SPAN></A> 
      <UL>
        <LI class="toclevel-4 tocsection-64"><A href="http://wiki.eclipse.org/EGit/User_Guide#Fetching_from_upstream"><SPAN 
        class="tocnumber">3.3.3.1</SPAN> <SPAN class="toctext">Fetching from 
        upstream</SPAN></A> 
        <UL>
          <LI class="toclevel-5 tocsection-65"><A href="http://wiki.eclipse.org/EGit/User_Guide#Configuring_fetch_from_upstream"><SPAN 
          class="tocnumber">3.3.3.1.1</SPAN> <SPAN class="toctext">Configuring 
          fetch from upstream</SPAN></A></LI></UL></LI>
        <LI class="toclevel-4 tocsection-66"><A href="http://wiki.eclipse.org/EGit/User_Guide#Direct_Fetch"><SPAN 
        class="tocnumber">3.3.3.2</SPAN> <SPAN class="toctext">Direct 
        Fetch</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-67"><A href="http://wiki.eclipse.org/EGit/User_Guide#Fetch_Wizard"><SPAN 
        class="tocnumber">3.3.3.3</SPAN> <SPAN class="toctext">Fetch 
        Wizard</SPAN></A> 
        <UL>
          <LI class="toclevel-5 tocsection-68"><A href="http://wiki.eclipse.org/EGit/User_Guide#Fetch_Ref_Specifications"><SPAN 
          class="tocnumber">3.3.3.3.1</SPAN> <SPAN class="toctext">Fetch Ref 
          Specifications</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-69"><A href="http://wiki.eclipse.org/EGit/User_Guide#Fetch_Result_Report"><SPAN 
          class="tocnumber">3.3.3.3.2</SPAN> <SPAN class="toctext">Fetch Result 
          Report</SPAN></A></LI></UL></LI></UL></LI>
      <LI class="toclevel-3 tocsection-70"><A href="http://wiki.eclipse.org/EGit/User_Guide#Pulling_New_Changes_from_Upstream_Branch"><SPAN 
      class="tocnumber">3.3.4</SPAN> <SPAN class="toctext">Pulling New Changes 
      from Upstream Branch</SPAN></A></LI></UL></LI>
    <LI class="toclevel-2 tocsection-71"><A href="http://wiki.eclipse.org/EGit/User_Guide#Working_with_Gerrit"><SPAN 
    class="tocnumber">3.4</SPAN> <SPAN class="toctext">Working with 
    Gerrit</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-72"><A href="http://wiki.eclipse.org/EGit/User_Guide#Enabling_Gerrit_for_a_repository"><SPAN 
      class="tocnumber">3.4.1</SPAN> <SPAN class="toctext">Enabling Gerrit for a 
      repository</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-73"><A href="http://wiki.eclipse.org/EGit/User_Guide#Pushing_a_change_to_a_Gerrit_Code_Review_Server"><SPAN 
      class="tocnumber">3.4.2</SPAN> <SPAN class="toctext">Pushing a change to a 
      Gerrit Code Review Server</SPAN></A> 
      <UL>
        <LI class="toclevel-4 tocsection-74"><A href="http://wiki.eclipse.org/EGit/User_Guide#Editing_a_change"><SPAN 
        class="tocnumber">3.4.2.1</SPAN> <SPAN class="toctext">Editing a 
        change</SPAN></A></LI></UL></LI>
      <LI class="toclevel-3 tocsection-75"><A href="http://wiki.eclipse.org/EGit/User_Guide#Fetching_a_change_from_a_Gerrit_Code_Review_Server"><SPAN 
      class="tocnumber">3.4.3</SPAN> <SPAN class="toctext">Fetching a change 
      from a Gerrit Code Review Server</SPAN></A></LI></UL></LI>
    <LI class="toclevel-2 tocsection-76"><A href="http://wiki.eclipse.org/EGit/User_Guide#Working_with_Gitflow"><SPAN 
    class="tocnumber">3.5</SPAN> <SPAN class="toctext">Working with 
    Gitflow</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-77"><A href="http://wiki.eclipse.org/EGit/User_Guide#Enabling_Gitflow_for_a_repository"><SPAN 
      class="tocnumber">3.5.1</SPAN> <SPAN class="toctext">Enabling Gitflow for 
      a repository</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-78"><A href="http://wiki.eclipse.org/EGit/User_Guide#Starting_a_feature.2Frelease.2Fhotfix"><SPAN 
      class="tocnumber">3.5.2</SPAN> <SPAN class="toctext">Starting a 
      feature/release/hotfix</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-79"><A href="http://wiki.eclipse.org/EGit/User_Guide#Starting_release_from_a_commit_other_than_HEAD"><SPAN 
      class="tocnumber">3.5.3</SPAN> <SPAN class="toctext">Starting release from 
      a commit other than HEAD</SPAN></A></LI></UL></LI>
    <LI class="toclevel-2 tocsection-80"><A href="http://wiki.eclipse.org/EGit/User_Guide#Inspecting_the_state_of_the_Repository"><SPAN 
    class="tocnumber">3.6</SPAN> <SPAN class="toctext">Inspecting the state of 
    the Repository</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-81"><A href="http://wiki.eclipse.org/EGit/User_Guide#Label_Decorations"><SPAN 
      class="tocnumber">3.6.1</SPAN> <SPAN class="toctext">Label 
      Decorations</SPAN></A> 
      <UL>
        <LI class="toclevel-4 tocsection-82"><A href="http://wiki.eclipse.org/EGit/User_Guide#Text_Decorations"><SPAN 
        class="tocnumber">3.6.1.1</SPAN> <SPAN class="toctext">Text 
        Decorations</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-83"><A href="http://wiki.eclipse.org/EGit/User_Guide#Icon_Decorations"><SPAN 
        class="tocnumber">3.6.1.2</SPAN> <SPAN class="toctext">Icon 
        Decorations</SPAN></A></LI></UL></LI>
      <LI class="toclevel-3 tocsection-84"><A href="http://wiki.eclipse.org/EGit/User_Guide#Commit_Dialog"><SPAN 
      class="tocnumber">3.6.2</SPAN> <SPAN class="toctext">Commit 
      Dialog</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-85"><A href="http://wiki.eclipse.org/EGit/User_Guide#Comparing_Content"><SPAN 
      class="tocnumber">3.6.3</SPAN> <SPAN class="toctext">Comparing 
      Content</SPAN></A> 
      <UL>
        <LI class="toclevel-4 tocsection-86"><A href="http://wiki.eclipse.org/EGit/User_Guide#Compare_editor_and_Synchronize_View"><SPAN 
        class="tocnumber">3.6.3.1</SPAN> <SPAN class="toctext">Compare editor 
        and Synchronize View</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-87"><A href="http://wiki.eclipse.org/EGit/User_Guide#Compare_working_tree_with_last_commit"><SPAN 
        class="tocnumber">3.6.3.2</SPAN> <SPAN class="toctext">Compare working 
        tree with last commit</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-88"><A href="http://wiki.eclipse.org/EGit/User_Guide#Comparing_Working_Tree_with_Index"><SPAN 
        class="tocnumber">3.6.3.3</SPAN> <SPAN class="toctext">Comparing Working 
        Tree with Index</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-89"><A href="http://wiki.eclipse.org/EGit/User_Guide#Comparing_Working_Tree_with_a_branch.2C_a_tag_or_a_reference"><SPAN 
        class="tocnumber">3.6.3.4</SPAN> <SPAN class="toctext">Comparing Working 
        Tree with a branch, a tag or a reference</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-90"><A href="http://wiki.eclipse.org/EGit/User_Guide#Comparing_Working_Tree_with_Any_Commit"><SPAN 
        class="tocnumber">3.6.3.5</SPAN> <SPAN class="toctext">Comparing Working 
        Tree with Any Commit</SPAN></A> 
        <UL>
          <LI class="toclevel-5 tocsection-91"><A href="http://wiki.eclipse.org/EGit/User_Guide#From_the_project_explorer:"><SPAN 
          class="tocnumber">3.6.3.5.1</SPAN> <SPAN class="toctext">From the 
          project explorer:</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-92"><A href="http://wiki.eclipse.org/EGit/User_Guide#From_the_history_view_.28files_only.29:"><SPAN 
          class="tocnumber">3.6.3.5.2</SPAN> <SPAN class="toctext">From the 
          history view (files only):</SPAN></A></LI></UL></LI>
        <LI class="toclevel-4 tocsection-93"><A href="http://wiki.eclipse.org/EGit/User_Guide#Comparing_Two_Commits"><SPAN 
        class="tocnumber">3.6.3.6</SPAN> <SPAN class="toctext">Comparing Two 
        Commits</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-94"><A href="http://wiki.eclipse.org/EGit/User_Guide#Comparing_Index_with_HEAD_or_Any_Other_Commit"><SPAN 
        class="tocnumber">3.6.3.7</SPAN> <SPAN class="toctext">Comparing Index 
        with HEAD or Any Other Commit</SPAN></A></LI></UL></LI>
      <LI class="toclevel-3 tocsection-95"><A href="http://wiki.eclipse.org/EGit/User_Guide#Comparing_with_Branches_.28Synchronize.29"><SPAN 
      class="tocnumber">3.6.4</SPAN> <SPAN class="toctext">Comparing with 
      Branches (Synchronize)</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-96"><A href="http://wiki.eclipse.org/EGit/User_Guide#Quickdiff"><SPAN 
      class="tocnumber">3.6.5</SPAN> <SPAN 
      class="toctext">Quickdiff</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-97"><A href="http://wiki.eclipse.org/EGit/User_Guide#Inspecting_Commits"><SPAN 
      class="tocnumber">3.6.6</SPAN> <SPAN class="toctext">Inspecting 
      Commits</SPAN></A> 
      <UL>
        <LI class="toclevel-4 tocsection-98"><A href="http://wiki.eclipse.org/EGit/User_Guide#View_Diff_for_a_Commit"><SPAN 
        class="tocnumber">3.6.6.1</SPAN> <SPAN class="toctext">View Diff for a 
        Commit</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-99"><A href="http://wiki.eclipse.org/EGit/User_Guide#Showing_the_contents_of_a_Commit"><SPAN 
        class="tocnumber">3.6.6.2</SPAN> <SPAN class="toctext">Showing the 
        contents of a Commit</SPAN></A></LI></UL></LI></UL></LI>
    <LI class="toclevel-2 tocsection-100"><A href="http://wiki.eclipse.org/EGit/User_Guide#Committing_Changes"><SPAN 
    class="tocnumber">3.7</SPAN> <SPAN class="toctext">Committing 
    Changes</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-101"><A href="http://wiki.eclipse.org/EGit/User_Guide#Modifying_the_content"><SPAN 
      class="tocnumber">3.7.1</SPAN> <SPAN class="toctext">Modifying the 
      content</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-102"><A href="http://wiki.eclipse.org/EGit/User_Guide#Committing"><SPAN 
      class="tocnumber">3.7.2</SPAN> <SPAN class="toctext">Committing</SPAN></A> 
      <UL>
        <LI class="toclevel-4 tocsection-103"><A href="http://wiki.eclipse.org/EGit/User_Guide#Committing_with_the_Staging_View"><SPAN 
        class="tocnumber">3.7.2.1</SPAN> <SPAN class="toctext">Committing with 
        the Staging View</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-104"><A href="http://wiki.eclipse.org/EGit/User_Guide#Committing_using_Commit_Dialog"><SPAN 
        class="tocnumber">3.7.2.2</SPAN> <SPAN class="toctext">Committing using 
        Commit Dialog</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-105"><A href="http://wiki.eclipse.org/EGit/User_Guide#Commit_Message"><SPAN 
        class="tocnumber">3.7.2.3</SPAN> <SPAN class="toctext">Commit 
        Message</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-106"><A href="http://wiki.eclipse.org/EGit/User_Guide#Amending_Commits"><SPAN 
        class="tocnumber">3.7.2.4</SPAN> <SPAN class="toctext">Amending 
        Commits</SPAN></A></LI></UL></LI></UL></LI>
    <LI class="toclevel-2 tocsection-107"><A href="http://wiki.eclipse.org/EGit/User_Guide#Reverting_Changes"><SPAN 
    class="tocnumber">3.8</SPAN> <SPAN class="toctext">Reverting 
    Changes</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-108"><A href="http://wiki.eclipse.org/EGit/User_Guide#Reverting_changes_in_the_working_tree"><SPAN 
      class="tocnumber">3.8.1</SPAN> <SPAN class="toctext">Reverting changes in 
      the working tree</SPAN></A> 
      <UL>
        <LI class="toclevel-4 tocsection-109"><A href="http://wiki.eclipse.org/EGit/User_Guide#Replace_with_File_in_Git_Index"><SPAN 
        class="tocnumber">3.8.1.1</SPAN> <SPAN class="toctext">Replace with File 
        in Git Index</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-110"><A href="http://wiki.eclipse.org/EGit/User_Guide#Replace_with_HEAD"><SPAN 
        class="tocnumber">3.8.1.2</SPAN> <SPAN class="toctext">Replace with 
        HEAD</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-111"><A href="http://wiki.eclipse.org/EGit/User_Guide#Replace_with_Branch.2C_Tag_or_Reference"><SPAN 
        class="tocnumber">3.8.1.3</SPAN> <SPAN class="toctext">Replace with 
        Branch, Tag or Reference</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-112"><A href="http://wiki.eclipse.org/EGit/User_Guide#Replace_with_Commit"><SPAN 
        class="tocnumber">3.8.1.4</SPAN> <SPAN class="toctext">Replace with 
        Commit</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-113"><A href="http://wiki.eclipse.org/EGit/User_Guide#Replace_with_Previous_Revision"><SPAN 
        class="tocnumber">3.8.1.5</SPAN> <SPAN class="toctext">Replace with 
        Previous Revision</SPAN></A></LI></UL></LI>
      <LI class="toclevel-3 tocsection-114"><A href="http://wiki.eclipse.org/EGit/User_Guide#Revert_using_quickdiff"><SPAN 
      class="tocnumber">3.8.2</SPAN> <SPAN class="toctext">Revert using 
      quickdiff</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-115"><A href="http://wiki.eclipse.org/EGit/User_Guide#Reverting_changes_introduced_by_a_specific_commit"><SPAN 
      class="tocnumber">3.8.3</SPAN> <SPAN class="toctext">Reverting changes 
      introduced by a specific commit</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-116"><A href="http://wiki.eclipse.org/EGit/User_Guide#Resetting_your_current_HEAD"><SPAN 
      class="tocnumber">3.8.4</SPAN> <SPAN class="toctext">Resetting your 
      current HEAD</SPAN></A> 
      <UL>
        <LI class="toclevel-4 tocsection-117"><A href="http://wiki.eclipse.org/EGit/User_Guide#Reset_to_specific_branch_or_tag"><SPAN 
        class="tocnumber">3.8.4.1</SPAN> <SPAN class="toctext">Reset to specific 
        branch or tag</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-118"><A href="http://wiki.eclipse.org/EGit/User_Guide#Reset_to_a_specific_commit"><SPAN 
        class="tocnumber">3.8.4.2</SPAN> <SPAN class="toctext">Reset to a 
        specific commit</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-119"><A href="http://wiki.eclipse.org/EGit/User_Guide#Revert_all_local_and_staged_changes"><SPAN 
        class="tocnumber">3.8.4.3</SPAN> <SPAN class="toctext">Revert all local 
        and staged changes</SPAN></A></LI></UL></LI></UL></LI>
    <LI class="toclevel-2 tocsection-120"><A href="http://wiki.eclipse.org/EGit/User_Guide#Branching"><SPAN 
    class="tocnumber">3.9</SPAN> <SPAN class="toctext">Branching</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-121"><A href="http://wiki.eclipse.org/EGit/User_Guide#General_remarks_about_branches"><SPAN 
      class="tocnumber">3.9.1</SPAN> <SPAN class="toctext">General remarks about 
      branches</SPAN></A> 
      <UL>
        <LI class="toclevel-4 tocsection-122"><A href="http://wiki.eclipse.org/EGit/User_Guide#Upstream_configuration"><SPAN 
        class="tocnumber">3.9.1.1</SPAN> <SPAN class="toctext">Upstream 
        configuration</SPAN></A></LI></UL></LI>
      <LI class="toclevel-3 tocsection-123"><A href="http://wiki.eclipse.org/EGit/User_Guide#Checking_out_an_existing_Branch"><SPAN 
      class="tocnumber">3.9.2</SPAN> <SPAN class="toctext">Checking out an 
      existing Branch</SPAN></A> 
      <UL>
        <LI class="toclevel-4 tocsection-124"><A href="http://wiki.eclipse.org/EGit/User_Guide#From_the_team_menu_on_a_project_node:"><SPAN 
        class="tocnumber">3.9.2.1</SPAN> <SPAN class="toctext">From the team 
        menu on a project node:</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-125"><A href="http://wiki.eclipse.org/EGit/User_Guide#From_the_Git_Repositories_View"><SPAN 
        class="tocnumber">3.9.2.2</SPAN> <SPAN class="toctext">From the Git 
        Repositories View</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-126"><A href="http://wiki.eclipse.org/EGit/User_Guide#From_the_History_View"><SPAN 
        class="tocnumber">3.9.2.3</SPAN> <SPAN class="toctext">From the History 
        View</SPAN></A></LI></UL></LI>
      <LI class="toclevel-3 tocsection-127"><A href="http://wiki.eclipse.org/EGit/User_Guide#Creating_a_New_Local_Branch"><SPAN 
      class="tocnumber">3.9.3</SPAN> <SPAN class="toctext">Creating a New Local 
      Branch</SPAN></A> 
      <UL>
        <LI class="toclevel-4 tocsection-128"><A href="http://wiki.eclipse.org/EGit/User_Guide#From_the_team_menu"><SPAN 
        class="tocnumber">3.9.3.1</SPAN> <SPAN class="toctext">From the team 
        menu</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-129"><A href="http://wiki.eclipse.org/EGit/User_Guide#From_the_Repositories_View"><SPAN 
        class="tocnumber">3.9.3.2</SPAN> <SPAN class="toctext">From the 
        Repositories View</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-130"><A href="http://wiki.eclipse.org/EGit/User_Guide#From_the_History_View_2"><SPAN 
        class="tocnumber">3.9.3.3</SPAN> <SPAN class="toctext">From the History 
        View</SPAN></A></LI></UL></LI>
      <LI class="toclevel-3 tocsection-131"><A href="http://wiki.eclipse.org/EGit/User_Guide#Renaming_an_Existing_Branch"><SPAN 
      class="tocnumber">3.9.4</SPAN> <SPAN class="toctext">Renaming an Existing 
      Branch</SPAN></A> 
      <UL>
        <LI class="toclevel-4 tocsection-132"><A href="http://wiki.eclipse.org/EGit/User_Guide#From_the_Team_menu_on_a_Project_node"><SPAN 
        class="tocnumber">3.9.4.1</SPAN> <SPAN class="toctext">From the Team 
        menu on a Project node</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-133"><A href="http://wiki.eclipse.org/EGit/User_Guide#From_the_Repositories_View_2"><SPAN 
        class="tocnumber">3.9.4.2</SPAN> <SPAN class="toctext">From the 
        Repositories View</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-134"><A href="http://wiki.eclipse.org/EGit/User_Guide#From_the_History_View_3"><SPAN 
        class="tocnumber">3.9.4.3</SPAN> <SPAN class="toctext">From the History 
        View</SPAN></A></LI></UL></LI>
      <LI class="toclevel-3 tocsection-135"><A href="http://wiki.eclipse.org/EGit/User_Guide#Deleting_a_Branch"><SPAN 
      class="tocnumber">3.9.5</SPAN> <SPAN class="toctext">Deleting a 
      Branch</SPAN></A> 
      <UL>
        <LI class="toclevel-4 tocsection-136"><A href="http://wiki.eclipse.org/EGit/User_Guide#From_the_Team_Menu_on_a_Project_node_2"><SPAN 
        class="tocnumber">3.9.5.1</SPAN> <SPAN class="toctext">From the Team 
        Menu on a Project node</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-137"><A href="http://wiki.eclipse.org/EGit/User_Guide#From_the_Repositories_View_3"><SPAN 
        class="tocnumber">3.9.5.2</SPAN> <SPAN class="toctext">From the 
        Repositories View</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-138"><A href="http://wiki.eclipse.org/EGit/User_Guide#From_the_History_View_4"><SPAN 
        class="tocnumber">3.9.5.3</SPAN> <SPAN class="toctext">From the History 
        View</SPAN></A></LI></UL></LI>
      <LI class="toclevel-3 tocsection-139"><A href="http://wiki.eclipse.org/EGit/User_Guide#Branch_Creation_Dialog"><SPAN 
      class="tocnumber">3.9.6</SPAN> <SPAN class="toctext">Branch Creation 
      Dialog</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-140"><A href="http://wiki.eclipse.org/EGit/User_Guide#Configure_Branch_Dialog"><SPAN 
      class="tocnumber">3.9.7</SPAN> <SPAN class="toctext">Configure Branch 
      Dialog</SPAN></A></LI></UL></LI>
    <LI class="toclevel-2 tocsection-141"><A href="http://wiki.eclipse.org/EGit/User_Guide#Merging"><SPAN 
    class="tocnumber">3.10</SPAN> <SPAN class="toctext">Merging</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-142"><A href="http://wiki.eclipse.org/EGit/User_Guide#Merging_a_branch_or_a_tag_into_the_current_branch"><SPAN 
      class="tocnumber">3.10.1</SPAN> <SPAN class="toctext">Merging a branch or 
      a tag into the current branch</SPAN></A> 
      <UL>
        <LI class="toclevel-4 tocsection-143"><A href="http://wiki.eclipse.org/EGit/User_Guide#Starting_merge_from_the_History_View"><SPAN 
        class="tocnumber">3.10.1.1</SPAN> <SPAN class="toctext">Starting merge 
        from the History View</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-144"><A href="http://wiki.eclipse.org/EGit/User_Guide#Starting_merge_from_the_Team_menu"><SPAN 
        class="tocnumber">3.10.1.2</SPAN> <SPAN class="toctext">Starting merge 
        from the Team menu</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-145"><A href="http://wiki.eclipse.org/EGit/User_Guide#Starting_merge_from_the_Git_Repositories_View"><SPAN 
        class="tocnumber">3.10.1.3</SPAN> <SPAN class="toctext">Starting merge 
        from the Git Repositories View</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-146"><A href="http://wiki.eclipse.org/EGit/User_Guide#Merge_options"><SPAN 
        class="tocnumber">3.10.1.4</SPAN> <SPAN class="toctext">Merge 
        options</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-147"><A href="http://wiki.eclipse.org/EGit/User_Guide#Possible_merge_results"><SPAN 
        class="tocnumber">3.10.1.5</SPAN> <SPAN class="toctext">Possible merge 
        results</SPAN></A> 
        <UL>
          <LI class="toclevel-5 tocsection-148"><A href="http://wiki.eclipse.org/EGit/User_Guide#Merge_Result_dialog"><SPAN 
          class="tocnumber">3.10.1.5.1</SPAN> <SPAN class="toctext">Merge Result 
          dialog</SPAN></A></LI></UL></LI></UL></LI>
      <LI class="toclevel-3 tocsection-149"><A href="http://wiki.eclipse.org/EGit/User_Guide#Resolving_a_merge_conflict"><SPAN 
      class="tocnumber">3.10.2</SPAN> <SPAN class="toctext">Resolving a merge 
      conflict</SPAN></A> 
      <UL>
        <LI class="toclevel-4 tocsection-150"><A href="http://wiki.eclipse.org/EGit/User_Guide#Using_Merge_Tool"><SPAN 
        class="tocnumber">3.10.2.1</SPAN> <SPAN class="toctext">Using Merge 
        Tool</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-151"><A href="http://wiki.eclipse.org/EGit/User_Guide#Manual_conflict_resolution"><SPAN 
        class="tocnumber">3.10.2.2</SPAN> <SPAN class="toctext">Manual conflict 
        resolution</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-152"><A href="http://wiki.eclipse.org/EGit/User_Guide#Finding_conflicting_files"><SPAN 
        class="tocnumber">3.10.2.3</SPAN> <SPAN class="toctext">Finding 
        conflicting files</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-153"><A href="http://wiki.eclipse.org/EGit/User_Guide#Editing_conflicting_files"><SPAN 
        class="tocnumber">3.10.2.4</SPAN> <SPAN class="toctext">Editing 
        conflicting files</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-154"><A href="http://wiki.eclipse.org/EGit/User_Guide#Adding_conflict_resolution_to_the_git_index"><SPAN 
        class="tocnumber">3.10.2.5</SPAN> <SPAN class="toctext">Adding conflict 
        resolution to the git index</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-155"><A href="http://wiki.eclipse.org/EGit/User_Guide#Committing_a_merge"><SPAN 
        class="tocnumber">3.10.2.6</SPAN> <SPAN class="toctext">Committing a 
        merge</SPAN></A></LI></UL></LI>
      <LI class="toclevel-3 tocsection-156"><A href="http://wiki.eclipse.org/EGit/User_Guide#Aborting_Merge"><SPAN 
      class="tocnumber">3.10.3</SPAN> <SPAN class="toctext">Aborting 
      Merge</SPAN></A></LI></UL></LI>
    <LI class="toclevel-2 tocsection-157"><A href="http://wiki.eclipse.org/EGit/User_Guide#Rebasing"><SPAN 
    class="tocnumber">3.11</SPAN> <SPAN class="toctext">Rebasing</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-158"><A href="http://wiki.eclipse.org/EGit/User_Guide#Rebase_Introduction"><SPAN 
      class="tocnumber">3.11.1</SPAN> <SPAN class="toctext">Rebase 
      Introduction</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-159"><A href="http://wiki.eclipse.org/EGit/User_Guide#Rebase.2C_A_Simple_Example"><SPAN 
      class="tocnumber">3.11.2</SPAN> <SPAN class="toctext">Rebase, A Simple 
      Example</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-160"><A href="http://wiki.eclipse.org/EGit/User_Guide#The_Real_World:_Rebase_Conflicts"><SPAN 
      class="tocnumber">3.11.3</SPAN> <SPAN class="toctext">The Real World: 
      Rebase Conflicts</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-161"><A href="http://wiki.eclipse.org/EGit/User_Guide#Starting_Rebase"><SPAN 
      class="tocnumber">3.11.4</SPAN> <SPAN class="toctext">Starting 
      Rebase</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-162"><A href="http://wiki.eclipse.org/EGit/User_Guide#Rebase_Confirmation_Dialog"><SPAN 
      class="tocnumber">3.11.5</SPAN> <SPAN class="toctext">Rebase Confirmation 
      Dialog</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-163"><A href="http://wiki.eclipse.org/EGit/User_Guide#Rebase_Conflicts"><SPAN 
      class="tocnumber">3.11.6</SPAN> <SPAN class="toctext">Rebase 
      Conflicts</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-164"><A href="http://wiki.eclipse.org/EGit/User_Guide#Aborting_Rebase"><SPAN 
      class="tocnumber">3.11.7</SPAN> <SPAN class="toctext">Aborting 
      Rebase</SPAN></A></LI></UL></LI>
    <LI class="toclevel-2 tocsection-165"><A href="http://wiki.eclipse.org/EGit/User_Guide#Interactive_Rebase"><SPAN 
    class="tocnumber">3.12</SPAN> <SPAN class="toctext">Interactive 
    Rebase</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-166"><A href="http://wiki.eclipse.org/EGit/User_Guide#Synopsis"><SPAN 
      class="tocnumber">3.12.1</SPAN> <SPAN 
      class="toctext">Synopsis</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-167"><A href="http://wiki.eclipse.org/EGit/User_Guide#Starting_interactive_rebase"><SPAN 
      class="tocnumber">3.12.2</SPAN> <SPAN class="toctext">Starting interactive 
      rebase</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-168"><A href="http://wiki.eclipse.org/EGit/User_Guide#Planning_rebase"><SPAN 
      class="tocnumber">3.12.3</SPAN> <SPAN class="toctext">Planning 
      rebase</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-169"><A href="http://wiki.eclipse.org/EGit/User_Guide#Executing_interactive_rebase"><SPAN 
      class="tocnumber">3.12.4</SPAN> <SPAN class="toctext">Executing 
      interactive rebase</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-170"><A href="http://wiki.eclipse.org/EGit/User_Guide#Safety_Instructions"><SPAN 
      class="tocnumber">3.12.5</SPAN> <SPAN class="toctext">Safety 
      Instructions</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-171"><A href="http://wiki.eclipse.org/EGit/User_Guide#Rebase_with_auto-stashing"><SPAN 
      class="tocnumber">3.12.6</SPAN> <SPAN class="toctext">Rebase with 
      auto-stashing</SPAN></A></LI></UL></LI>
    <LI class="toclevel-2 tocsection-172"><A href="http://wiki.eclipse.org/EGit/User_Guide#Cherry_Picking"><SPAN 
    class="tocnumber">3.13</SPAN> <SPAN class="toctext">Cherry 
    Picking</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-173"><A href="http://wiki.eclipse.org/EGit/User_Guide#Cherry-pick_Introduction"><SPAN 
      class="tocnumber">3.13.1</SPAN> <SPAN class="toctext">Cherry-pick 
      Introduction</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-174"><A href="http://wiki.eclipse.org/EGit/User_Guide#Cherry-pick_Example"><SPAN 
      class="tocnumber">3.13.2</SPAN> <SPAN class="toctext">Cherry-pick 
      Example</SPAN></A></LI></UL></LI>
    <LI class="toclevel-2 tocsection-175"><A href="http://wiki.eclipse.org/EGit/User_Guide#Tagging"><SPAN 
    class="tocnumber">3.14</SPAN> <SPAN class="toctext">Tagging</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-176"><A href="http://wiki.eclipse.org/EGit/User_Guide#Creating_a_Tag"><SPAN 
      class="tocnumber">3.14.1</SPAN> <SPAN class="toctext">Creating a 
      Tag</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-177"><A href="http://wiki.eclipse.org/EGit/User_Guide#Replacing_an_Existing_Tag"><SPAN 
      class="tocnumber">3.14.2</SPAN> <SPAN class="toctext">Replacing an 
      Existing Tag</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-178"><A href="http://wiki.eclipse.org/EGit/User_Guide#Deletion_of_tags"><SPAN 
      class="tocnumber">3.14.3</SPAN> <SPAN class="toctext">Deletion of 
      tags</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-179"><A href="http://wiki.eclipse.org/EGit/User_Guide#Light-weight_and_Signed_Tags"><SPAN 
      class="tocnumber">3.14.4</SPAN> <SPAN class="toctext">Light-weight and 
      Signed Tags</SPAN></A></LI></UL></LI>
    <LI class="toclevel-2 tocsection-180"><A href="http://wiki.eclipse.org/EGit/User_Guide#Patches"><SPAN 
    class="tocnumber">3.15</SPAN> <SPAN class="toctext">Patches</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-181"><A href="http://wiki.eclipse.org/EGit/User_Guide#Creating_Patches"><SPAN 
      class="tocnumber">3.15.1</SPAN> <SPAN class="toctext">Creating 
      Patches</SPAN></A> 
      <UL>
        <LI class="toclevel-4 tocsection-182"><A href="http://wiki.eclipse.org/EGit/User_Guide#Create_a_Patch_from_a_Commit"><SPAN 
        class="tocnumber">3.15.1.1</SPAN> <SPAN class="toctext">Create a Patch 
        from a Commit</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-183"><A href="http://wiki.eclipse.org/EGit/User_Guide#Patch_Wizard"><SPAN 
        class="tocnumber">3.15.1.2</SPAN> <SPAN class="toctext">Patch 
        Wizard</SPAN></A></LI></UL></LI>
      <LI class="toclevel-3 tocsection-184"><A href="http://wiki.eclipse.org/EGit/User_Guide#Applying_Patches"><SPAN 
      class="tocnumber">3.15.2</SPAN> <SPAN class="toctext">Applying 
      Patches</SPAN></A></LI></UL></LI>
    <LI class="toclevel-2 tocsection-185"><A href="http://wiki.eclipse.org/EGit/User_Guide#Managing_Repositories"><SPAN 
    class="tocnumber">3.16</SPAN> <SPAN class="toctext">Managing 
    Repositories</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-186"><A href="http://wiki.eclipse.org/EGit/User_Guide#Adding_Repositories_to_the_Git_Repositories_View"><SPAN 
      class="tocnumber">3.16.1</SPAN> <SPAN class="toctext">Adding Repositories 
      to the Git Repositories View</SPAN></A> 
      <UL>
        <LI class="toclevel-4 tocsection-187"><A href="http://wiki.eclipse.org/EGit/User_Guide#Adding_a_Repository_manually"><SPAN 
        class="tocnumber">3.16.1.1</SPAN> <SPAN class="toctext">Adding a 
        Repository manually</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-188"><A href="http://wiki.eclipse.org/EGit/User_Guide#Cloning_a_Repository_2"><SPAN 
        class="tocnumber">3.16.1.2</SPAN> <SPAN class="toctext">Cloning a 
        Repository</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-189"><A href="http://wiki.eclipse.org/EGit/User_Guide#Creating_a_Repository"><SPAN 
        class="tocnumber">3.16.1.3</SPAN> <SPAN class="toctext">Creating a 
        Repository</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-190"><A href="http://wiki.eclipse.org/EGit/User_Guide#Adding_a_Repository_using_Copy_and_Paste"><SPAN 
        class="tocnumber">3.16.1.4</SPAN> <SPAN class="toctext">Adding a 
        Repository using Copy and Paste</SPAN></A></LI></UL></LI>
      <LI class="toclevel-3 tocsection-191"><A href="http://wiki.eclipse.org/EGit/User_Guide#Removing_Repositories"><SPAN 
      class="tocnumber">3.16.2</SPAN> <SPAN class="toctext">Removing 
      Repositories</SPAN></A> 
      <UL>
        <LI class="toclevel-4 tocsection-192"><A href="http://wiki.eclipse.org/EGit/User_Guide#Removing_a_Repository_from_the_Repositories_View"><SPAN 
        class="tocnumber">3.16.2.1</SPAN> <SPAN class="toctext">Removing a 
        Repository from the Repositories View</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-193"><A href="http://wiki.eclipse.org/EGit/User_Guide#Deleting_a_Repository"><SPAN 
        class="tocnumber">3.16.2.2</SPAN> <SPAN class="toctext">Deleting a 
        Repository</SPAN></A></LI></UL></LI>
      <LI class="toclevel-3 tocsection-194"><A href="http://wiki.eclipse.org/EGit/User_Guide#Structure_of_the_Git_Repositories_View"><SPAN 
      class="tocnumber">3.16.3</SPAN> <SPAN class="toctext">Structure of the Git 
      Repositories View</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-195"><A href="http://wiki.eclipse.org/EGit/User_Guide#Functions_of_the_Git_Repositories_View"><SPAN 
      class="tocnumber">3.16.4</SPAN> <SPAN class="toctext">Functions of the Git 
      Repositories View</SPAN></A> 
      <UL>
        <LI class="toclevel-4 tocsection-196"><A href="http://wiki.eclipse.org/EGit/User_Guide#Project_Import"><SPAN 
        class="tocnumber">3.16.4.1</SPAN> <SPAN class="toctext">Project 
        Import</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-197"><A href="http://wiki.eclipse.org/EGit/User_Guide#Branch_and_Tag_Support"><SPAN 
        class="tocnumber">3.16.4.2</SPAN> <SPAN class="toctext">Branch and Tag 
        Support</SPAN></A> 
        <UL>
          <LI class="toclevel-5 tocsection-198"><A href="http://wiki.eclipse.org/EGit/User_Guide#Check-out_of_Branches_and_Tags"><SPAN 
          class="tocnumber">3.16.4.2.1</SPAN> <SPAN class="toctext">Check-out of 
          Branches and Tags</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-199"><A href="http://wiki.eclipse.org/EGit/User_Guide#Creation_and_Deletion_of_Branches"><SPAN 
          class="tocnumber">3.16.4.2.2</SPAN> <SPAN class="toctext">Creation and 
          Deletion of Branches</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-200"><A href="http://wiki.eclipse.org/EGit/User_Guide#Rebasing_2"><SPAN 
          class="tocnumber">3.16.4.2.3</SPAN> <SPAN 
          class="toctext">Rebasing</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-201"><A href="http://wiki.eclipse.org/EGit/User_Guide#Merging_a_Branch_or_a_Tag"><SPAN 
          class="tocnumber">3.16.4.2.4</SPAN> <SPAN class="toctext">Merging a 
          Branch or a Tag</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-202"><A href="http://wiki.eclipse.org/EGit/User_Guide#Synchronizing_with_a_Branch_or_a_Tag"><SPAN 
          class="tocnumber">3.16.4.2.5</SPAN> <SPAN 
          class="toctext">Synchronizing with a Branch or a Tag</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-203"><A href="http://wiki.eclipse.org/EGit/User_Guide#Determining_the_Checked-out_Branch"><SPAN 
          class="tocnumber">3.16.4.2.6</SPAN> <SPAN class="toctext">Determining 
          the Checked-out Branch</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-204"><A href="http://wiki.eclipse.org/EGit/User_Guide#Resetting_to_a_Branch_or_a_Tag"><SPAN 
          class="tocnumber">3.16.4.2.7</SPAN> <SPAN class="toctext">Resetting to 
          a Branch or a Tag</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-205"><A href="http://wiki.eclipse.org/EGit/User_Guide#.22Detached.22_HEAD"><SPAN 
          class="tocnumber">3.16.4.2.8</SPAN> <SPAN class="toctext">"Detached" 
          HEAD</SPAN></A></LI></UL></LI>
        <LI class="toclevel-4 tocsection-206"><A href="http://wiki.eclipse.org/EGit/User_Guide#Inspecting_References"><SPAN 
        class="tocnumber">3.16.4.3</SPAN> <SPAN class="toctext">Inspecting 
        References</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-207"><A href="http://wiki.eclipse.org/EGit/User_Guide#Browsing_the_Working_Directory"><SPAN 
        class="tocnumber">3.16.4.4</SPAN> <SPAN class="toctext">Browsing the 
        Working Directory</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-208"><A href="http://wiki.eclipse.org/EGit/User_Guide#Repository_Configuration"><SPAN 
        class="tocnumber">3.16.4.5</SPAN> <SPAN class="toctext">Repository 
        Configuration</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-209"><A href="http://wiki.eclipse.org/EGit/User_Guide#Remote_Repositories"><SPAN 
        class="tocnumber">3.16.4.6</SPAN> <SPAN class="toctext">Remote 
        Repositories</SPAN></A> 
        <UL>
          <LI class="toclevel-5 tocsection-210"><A href="http://wiki.eclipse.org/EGit/User_Guide#Direct_Fetch_and_Push_Support"><SPAN 
          class="tocnumber">3.16.4.6.1</SPAN> <SPAN class="toctext">Direct Fetch 
          and Push Support</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-211"><A href="http://wiki.eclipse.org/EGit/User_Guide#Adding_a_Remote_Configuration"><SPAN 
          class="tocnumber">3.16.4.6.2</SPAN> <SPAN class="toctext">Adding a 
          Remote Configuration</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-212"><A href="http://wiki.eclipse.org/EGit/User_Guide#Changing_Remote_Configurations"><SPAN 
          class="tocnumber">3.16.4.6.3</SPAN> <SPAN class="toctext">Changing 
          Remote Configurations</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-213"><A href="http://wiki.eclipse.org/EGit/User_Guide#Gerrit_Configuration"><SPAN 
          class="tocnumber">3.16.4.6.4</SPAN> <SPAN class="toctext">Gerrit 
          Configuration</SPAN></A></LI></UL></LI></UL></LI>
      <LI class="toclevel-3 tocsection-214"><A href="http://wiki.eclipse.org/EGit/User_Guide#Refresh"><SPAN 
      class="tocnumber">3.16.5</SPAN> <SPAN 
      class="toctext">Refresh</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-215"><A href="http://wiki.eclipse.org/EGit/User_Guide#Link_with_Selection"><SPAN 
      class="tocnumber">3.16.6</SPAN> <SPAN class="toctext">Link with 
      Selection</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-216"><A href="http://wiki.eclipse.org/EGit/User_Guide#Link_with_Editor"><SPAN 
      class="tocnumber">3.16.7</SPAN> <SPAN class="toctext">Link with 
      Editor</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-217"><A href="http://wiki.eclipse.org/EGit/User_Guide#Hierarchical_Branch_Layout"><SPAN 
      class="tocnumber">3.16.8</SPAN> <SPAN class="toctext">Hierarchical Branch 
      Layout</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-218"><A href="http://wiki.eclipse.org/EGit/User_Guide#Bare_Repositories"><SPAN 
      class="tocnumber">3.16.9</SPAN> <SPAN class="toctext">Bare 
      Repositories</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-219"><A href="http://wiki.eclipse.org/EGit/User_Guide#Removing_Repositories_from_the_Git_Repositories_View"><SPAN 
      class="tocnumber">3.16.10</SPAN> <SPAN class="toctext">Removing 
      Repositories from the Git Repositories View</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-220"><A href="http://wiki.eclipse.org/EGit/User_Guide#Showing_Repository_in_Related_Views"><SPAN 
      class="tocnumber">3.16.11</SPAN> <SPAN class="toctext">Showing Repository 
      in Related Views</SPAN></A> 
      <UL>
        <LI class="toclevel-4 tocsection-221"><A href="http://wiki.eclipse.org/EGit/User_Guide#Show_in_History"><SPAN 
        class="tocnumber">3.16.11.1</SPAN> <SPAN class="toctext">Show in 
        History</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-222"><A href="http://wiki.eclipse.org/EGit/User_Guide#Show_in_Reflog"><SPAN 
        class="tocnumber">3.16.11.2</SPAN> <SPAN class="toctext">Show in 
        Reflog</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-223"><A href="http://wiki.eclipse.org/EGit/User_Guide#Show_in_Properties"><SPAN 
        class="tocnumber">3.16.11.3</SPAN> <SPAN class="toctext">Show in 
        Properties</SPAN></A></LI></UL></LI></UL></LI>
    <LI class="toclevel-2 tocsection-224"><A href="http://wiki.eclipse.org/EGit/User_Guide#Working_with_Tasks"><SPAN 
    class="tocnumber">3.17</SPAN> <SPAN class="toctext">Working with 
    Tasks</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-225"><A href="http://wiki.eclipse.org/EGit/User_Guide#Installation"><SPAN 
      class="tocnumber">3.17.1</SPAN> <SPAN 
      class="toctext">Installation</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-226"><A href="http://wiki.eclipse.org/EGit/User_Guide#Commit_Message_Template"><SPAN 
      class="tocnumber">3.17.2</SPAN> <SPAN class="toctext">Commit Message 
      Template</SPAN></A></LI></UL></LI>
    <LI class="toclevel-2 tocsection-227"><A href="http://wiki.eclipse.org/EGit/User_Guide#Viewing_Commits"><SPAN 
    class="tocnumber">3.18</SPAN> <SPAN class="toctext">Viewing 
    Commits</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-228"><A href="http://wiki.eclipse.org/EGit/User_Guide#Tagging_a_commit"><SPAN 
      class="tocnumber">3.18.1</SPAN> <SPAN class="toctext">Tagging a 
      commit</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-229"><A href="http://wiki.eclipse.org/EGit/User_Guide#Creating_a_branch_from_a_commit"><SPAN 
      class="tocnumber">3.18.2</SPAN> <SPAN class="toctext">Creating a branch 
      from a commit</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-230"><A href="http://wiki.eclipse.org/EGit/User_Guide#Checking_out_a_commit"><SPAN 
      class="tocnumber">3.18.3</SPAN> <SPAN class="toctext">Checking out a 
      commit</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-231"><A href="http://wiki.eclipse.org/EGit/User_Guide#Cherry_picking_a_commit"><SPAN 
      class="tocnumber">3.18.4</SPAN> <SPAN class="toctext">Cherry picking a 
      commit</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-232"><A href="http://wiki.eclipse.org/EGit/User_Guide#Opening_the_commit_viewer"><SPAN 
      class="tocnumber">3.18.5</SPAN> <SPAN class="toctext">Opening the commit 
      viewer</SPAN></A></LI></UL></LI>
    <LI class="toclevel-2 tocsection-233"><A href="http://wiki.eclipse.org/EGit/User_Guide#Searching_for_commits"><SPAN 
    class="tocnumber">3.19</SPAN> <SPAN class="toctext">Searching for 
    commits</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-234"><A href="http://wiki.eclipse.org/EGit/User_Guide#Git_Search_page"><SPAN 
      class="tocnumber">3.19.1</SPAN> <SPAN class="toctext">Git Search 
      page</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-235"><A href="http://wiki.eclipse.org/EGit/User_Guide#Browsing_Search_Results"><SPAN 
      class="tocnumber">3.19.2</SPAN> <SPAN class="toctext">Browsing Search 
      Results</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-236"><A href="http://wiki.eclipse.org/EGit/User_Guide#Launching_Git_Search"><SPAN 
      class="tocnumber">3.19.3</SPAN> <SPAN class="toctext">Launching Git 
      Search</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-237"><A href="http://wiki.eclipse.org/EGit/User_Guide#Open_commit_dialog"><SPAN 
      class="tocnumber">3.19.4</SPAN> <SPAN class="toctext">Open commit 
      dialog</SPAN></A></LI></UL></LI>
    <LI class="toclevel-2 tocsection-238"><A href="http://wiki.eclipse.org/EGit/User_Guide#Finding_the_author_of_each_line_in_a_file"><SPAN 
    class="tocnumber">3.20</SPAN> <SPAN class="toctext">Finding the author of 
    each line in a file</SPAN></A></LI>
    <LI class="toclevel-2 tocsection-239"><A href="http://wiki.eclipse.org/EGit/User_Guide#Working_with_Submodules"><SPAN 
    class="tocnumber">3.21</SPAN> <SPAN class="toctext">Working with 
    Submodules</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-240"><A href="http://wiki.eclipse.org/EGit/User_Guide#Cloning_Repositories_with_Submodules"><SPAN 
      class="tocnumber">3.21.1</SPAN> <SPAN class="toctext">Cloning Repositories 
      with Submodules</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-241"><A href="http://wiki.eclipse.org/EGit/User_Guide#Browsing_Submodules"><SPAN 
      class="tocnumber">3.21.2</SPAN> <SPAN class="toctext">Browsing 
      Submodules</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-242"><A href="http://wiki.eclipse.org/EGit/User_Guide#Adding_a_Submodule"><SPAN 
      class="tocnumber">3.21.3</SPAN> <SPAN class="toctext">Adding a 
      Submodule</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-243"><A href="http://wiki.eclipse.org/EGit/User_Guide#Updating_Submodules"><SPAN 
      class="tocnumber">3.21.4</SPAN> <SPAN class="toctext">Updating 
      Submodules</SPAN></A></LI></UL></LI>
    <LI class="toclevel-2 tocsection-244"><A href="http://wiki.eclipse.org/EGit/User_Guide#Team_Project_Sets"><SPAN 
    class="tocnumber">3.22</SPAN> <SPAN class="toctext">Team Project 
    Sets</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-245"><A href="http://wiki.eclipse.org/EGit/User_Guide#Import"><SPAN 
      class="tocnumber">3.22.1</SPAN> <SPAN 
      class="toctext">Import</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-246"><A href="http://wiki.eclipse.org/EGit/User_Guide#Export"><SPAN 
      class="tocnumber">3.22.2</SPAN> <SPAN 
      class="toctext">Export</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-247"><A href="http://wiki.eclipse.org/EGit/User_Guide#Format"><SPAN 
      class="tocnumber">3.22.3</SPAN> <SPAN 
      class="toctext">Format</SPAN></A></LI></UL></LI></UL></LI>
  <LI class="toclevel-1 tocsection-248"><A href="http://wiki.eclipse.org/EGit/User_Guide#Reference"><SPAN 
  class="tocnumber">4</SPAN> <SPAN class="toctext">Reference</SPAN></A> 
  <UL>
    <LI class="toclevel-2 tocsection-249"><A href="http://wiki.eclipse.org/EGit/User_Guide#Menus"><SPAN 
    class="tocnumber">4.1</SPAN> <SPAN class="toctext">Menus</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-250"><A href="http://wiki.eclipse.org/EGit/User_Guide#Project_Context_Menu"><SPAN 
      class="tocnumber">4.1.1</SPAN> <SPAN class="toctext">Project Context 
      Menu</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-251"><A href="http://wiki.eclipse.org/EGit/User_Guide#Resource_Context_Menu"><SPAN 
      class="tocnumber">4.1.2</SPAN> <SPAN class="toctext">Resource Context 
      Menu</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-252"><A href="http://wiki.eclipse.org/EGit/User_Guide#Repositories_View_Menus"><SPAN 
      class="tocnumber">4.1.3</SPAN> <SPAN class="toctext">Repositories View 
      Menus</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-253"><A href="http://wiki.eclipse.org/EGit/User_Guide#History_View_Menus"><SPAN 
      class="tocnumber">4.1.4</SPAN> <SPAN class="toctext">History View 
      Menus</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-254"><A href="http://wiki.eclipse.org/EGit/User_Guide#Git_Workbench_Toolbar_and_Git_Workbench_Menu"><SPAN 
      class="tocnumber">4.1.5</SPAN> <SPAN class="toctext">Git Workbench Toolbar 
      and Git Workbench Menu</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-255"><A href="http://wiki.eclipse.org/EGit/User_Guide#Menu_Actions"><SPAN 
      class="tocnumber">4.1.6</SPAN> <SPAN class="toctext">Menu 
      Actions</SPAN></A></LI></UL></LI>
    <LI class="toclevel-2 tocsection-256"><A href="http://wiki.eclipse.org/EGit/User_Guide#Git_Perspective_and_Views"><SPAN 
    class="tocnumber">4.2</SPAN> <SPAN class="toctext">Git Perspective and 
    Views</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-257"><A href="http://wiki.eclipse.org/EGit/User_Guide#Git_Perspective"><SPAN 
      class="tocnumber">4.2.1</SPAN> <SPAN class="toctext">Git 
      Perspective</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-258"><A href="http://wiki.eclipse.org/EGit/User_Guide#Git_Repositories_View"><SPAN 
      class="tocnumber">4.2.2</SPAN> <SPAN class="toctext">Git Repositories 
      View</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-259"><A href="http://wiki.eclipse.org/EGit/User_Guide#History_View"><SPAN 
      class="tocnumber">4.2.3</SPAN> <SPAN class="toctext">History 
      View</SPAN></A> 
      <UL>
        <LI class="toclevel-4 tocsection-260"><A href="http://wiki.eclipse.org/EGit/User_Guide#Overview_2"><SPAN 
        class="tocnumber">4.2.3.1</SPAN> <SPAN 
        class="toctext">Overview</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-261"><A href="http://wiki.eclipse.org/EGit/User_Guide#Opening_the_History_View"><SPAN 
        class="tocnumber">4.2.3.2</SPAN> <SPAN class="toctext">Opening the 
        History View</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-262"><A href="http://wiki.eclipse.org/EGit/User_Guide#Organization_of_the_History_View"><SPAN 
        class="tocnumber">4.2.3.3</SPAN> <SPAN class="toctext">Organization of 
        the History View</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-263"><A href="http://wiki.eclipse.org/EGit/User_Guide#Using_the_History_View"><SPAN 
        class="tocnumber">4.2.3.4</SPAN> <SPAN class="toctext">Using the History 
        View</SPAN></A> 
        <UL>
          <LI class="toclevel-5 tocsection-264"><A href="http://wiki.eclipse.org/EGit/User_Guide#Inspecting_the_Commit_Graph"><SPAN 
          class="tocnumber">4.2.3.4.1</SPAN> <SPAN class="toctext">Inspecting 
          the Commit Graph</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-265"><A href="http://wiki.eclipse.org/EGit/User_Guide#Displaying_and_Comparing_versions_of_a_File"><SPAN 
          class="tocnumber">4.2.3.4.2</SPAN> <SPAN class="toctext">Displaying 
          and Comparing versions of a File</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-266"><A href="http://wiki.eclipse.org/EGit/User_Guide#Working_with_the_Filter_Settings"><SPAN 
          class="tocnumber">4.2.3.4.3</SPAN> <SPAN class="toctext">Working with 
          the Filter Settings</SPAN></A></LI></UL></LI>
        <LI class="toclevel-4 tocsection-267"><A href="http://wiki.eclipse.org/EGit/User_Guide#Toolbar_actions"><SPAN 
        class="tocnumber">4.2.3.5</SPAN> <SPAN class="toctext">Toolbar 
        actions</SPAN></A> 
        <UL>
          <LI class="toclevel-5 tocsection-268"><A href="http://wiki.eclipse.org/EGit/User_Guide#Find"><SPAN 
          class="tocnumber">4.2.3.5.1</SPAN> <SPAN 
          class="toctext">Find</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-269"><A href="http://wiki.eclipse.org/EGit/User_Guide#Filter_settings"><SPAN 
          class="tocnumber">4.2.3.5.2</SPAN> <SPAN class="toctext">Filter 
          settings</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-270"><A href="http://wiki.eclipse.org/EGit/User_Guide#Compare_Mode"><SPAN 
          class="tocnumber">4.2.3.5.3</SPAN> <SPAN class="toctext">Compare 
          Mode</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-271"><A href="http://wiki.eclipse.org/EGit/User_Guide#All_Branches"><SPAN 
          class="tocnumber">4.2.3.5.4</SPAN> <SPAN class="toctext">All 
          Branches</SPAN></A></LI></UL></LI>
        <LI class="toclevel-4 tocsection-272"><A href="http://wiki.eclipse.org/EGit/User_Guide#View_Menu_actions"><SPAN 
        class="tocnumber">4.2.3.6</SPAN> <SPAN class="toctext">View Menu 
        actions</SPAN></A> 
        <UL>
          <LI class="toclevel-5 tocsection-273"><A href="http://wiki.eclipse.org/EGit/User_Guide#Configuring_the_View"><SPAN 
          class="tocnumber">4.2.3.6.1</SPAN> <SPAN class="toctext">Configuring 
          the View</SPAN></A></LI></UL></LI>
        <LI class="toclevel-4 tocsection-274"><A href="http://wiki.eclipse.org/EGit/User_Guide#Context_Menu_actions"><SPAN 
        class="tocnumber">4.2.3.7</SPAN> <SPAN class="toctext">Context Menu 
        actions</SPAN></A> 
        <UL>
          <LI class="toclevel-5 tocsection-275"><A href="http://wiki.eclipse.org/EGit/User_Guide#Compare_with_working_tree"><SPAN 
          class="tocnumber">4.2.3.7.1</SPAN> <SPAN class="toctext">Compare with 
          working tree</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-276"><A href="http://wiki.eclipse.org/EGit/User_Guide#Compare_with_each_other"><SPAN 
          class="tocnumber">4.2.3.7.2</SPAN> <SPAN class="toctext">Compare with 
          each other</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-277"><A href="http://wiki.eclipse.org/EGit/User_Guide#Open"><SPAN 
          class="tocnumber">4.2.3.7.3</SPAN> <SPAN 
          class="toctext">Open</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-278"><A href="http://wiki.eclipse.org/EGit/User_Guide#Checkout"><SPAN 
          class="tocnumber">4.2.3.7.4</SPAN> <SPAN 
          class="toctext">Checkout</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-279"><A href="http://wiki.eclipse.org/EGit/User_Guide#Create_Branch..."><SPAN 
          class="tocnumber">4.2.3.7.5</SPAN> <SPAN class="toctext">Create 
          Branch...</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-280"><A href="http://wiki.eclipse.org/EGit/User_Guide#Delete_Branch"><SPAN 
          class="tocnumber">4.2.3.7.6</SPAN> <SPAN class="toctext">Delete 
          Branch</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-281"><A href="http://wiki.eclipse.org/EGit/User_Guide#Create_Tag..."><SPAN 
          class="tocnumber">4.2.3.7.7</SPAN> <SPAN class="toctext">Create 
          Tag...</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-282"><A href="http://wiki.eclipse.org/EGit/User_Guide#Create_Patch..."><SPAN 
          class="tocnumber">4.2.3.7.8</SPAN> <SPAN class="toctext">Create 
          Patch...</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-283"><A href="http://wiki.eclipse.org/EGit/User_Guide#Cherry_Pick"><SPAN 
          class="tocnumber">4.2.3.7.9</SPAN> <SPAN class="toctext">Cherry 
          Pick</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-284"><A href="http://wiki.eclipse.org/EGit/User_Guide#Revert_Commit"><SPAN 
          class="tocnumber">4.2.3.7.10</SPAN> <SPAN class="toctext">Revert 
          Commit</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-285"><A href="http://wiki.eclipse.org/EGit/User_Guide#Merge"><SPAN 
          class="tocnumber">4.2.3.7.11</SPAN> <SPAN 
          class="toctext">Merge</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-286"><A href="http://wiki.eclipse.org/EGit/User_Guide#Rebase_on_top_of"><SPAN 
          class="tocnumber">4.2.3.7.12</SPAN> <SPAN class="toctext">Rebase on 
          top of</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-287"><A href="http://wiki.eclipse.org/EGit/User_Guide#Reset_.3E_Soft.2FMixed.2FHard"><SPAN 
          class="tocnumber">4.2.3.7.13</SPAN> <SPAN class="toctext">Reset &gt; 
          Soft/Mixed/Hard</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-288"><A href="http://wiki.eclipse.org/EGit/User_Guide#Quickdiff_.3E_Reset_Quickdiff_Basline_to_HEAD"><SPAN 
          class="tocnumber">4.2.3.7.14</SPAN> <SPAN class="toctext">Quickdiff 
          &gt; Reset Quickdiff Basline to HEAD</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-289"><A href="http://wiki.eclipse.org/EGit/User_Guide#Quickdiff_.3E_Reset_Quickdiff_Basline_to_first_parent_of_HEAD"><SPAN 
          class="tocnumber">4.2.3.7.15</SPAN> <SPAN class="toctext">Quickdiff 
          &gt; Reset Quickdiff Basline to first parent of HEAD</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-290"><A href="http://wiki.eclipse.org/EGit/User_Guide#Quickdiff_.3E_Set_as_Baseline"><SPAN 
          class="tocnumber">4.2.3.7.16</SPAN> <SPAN class="toctext">Quickdiff 
          &gt; Set as Baseline</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-291"><A href="http://wiki.eclipse.org/EGit/User_Guide#Copy"><SPAN 
          class="tocnumber">4.2.3.7.17</SPAN> <SPAN 
          class="toctext">Copy</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-292"><A href="http://wiki.eclipse.org/EGit/User_Guide#Show_Revision_Comment"><SPAN 
          class="tocnumber">4.2.3.7.18</SPAN> <SPAN class="toctext">Show 
          Revision Comment</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-293"><A href="http://wiki.eclipse.org/EGit/User_Guide#Show_Revision_Details"><SPAN 
          class="tocnumber">4.2.3.7.19</SPAN> <SPAN class="toctext">Show 
          Revision Details</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-294"><A href="http://wiki.eclipse.org/EGit/User_Guide#Wrap_Comments"><SPAN 
          class="tocnumber">4.2.3.7.20</SPAN> <SPAN class="toctext">Wrap 
          Comments</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-295"><A href="http://wiki.eclipse.org/EGit/User_Guide#Fill_Paragraphs"><SPAN 
          class="tocnumber">4.2.3.7.21</SPAN> <SPAN class="toctext">Fill 
          Paragraphs</SPAN></A></LI></UL></LI>
        <LI class="toclevel-4 tocsection-296"><A href="http://wiki.eclipse.org/EGit/User_Guide#Drag_and_Drop_Support"><SPAN 
        class="tocnumber">4.2.3.8</SPAN> <SPAN class="toctext">Drag and Drop 
        Support</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-297"><A href="http://wiki.eclipse.org/EGit/User_Guide#Working_with_the_Revision_Details_Area"><SPAN 
        class="tocnumber">4.2.3.9</SPAN> <SPAN class="toctext">Working with the 
        Revision Details Area</SPAN></A></LI></UL></LI>
      <LI class="toclevel-3 tocsection-298"><A href="http://wiki.eclipse.org/EGit/User_Guide#Synchronize_View"><SPAN 
      class="tocnumber">4.2.4</SPAN> <SPAN class="toctext">Synchronize 
      View</SPAN></A> 
      <UL>
        <LI class="toclevel-4 tocsection-299"><A href="http://wiki.eclipse.org/EGit/User_Guide#Synchronization_State"><SPAN 
        class="tocnumber">4.2.4.1</SPAN> <SPAN class="toctext">Synchronization 
        State</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-300"><A href="http://wiki.eclipse.org/EGit/User_Guide#Mode"><SPAN 
        class="tocnumber">4.2.4.2</SPAN> <SPAN 
        class="toctext">Mode</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-301"><A href="http://wiki.eclipse.org/EGit/User_Guide#Models"><SPAN 
        class="tocnumber">4.2.4.3</SPAN> <SPAN 
        class="toctext">Models</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-302"><A href="http://wiki.eclipse.org/EGit/User_Guide#Navigation"><SPAN 
        class="tocnumber">4.2.4.4</SPAN> <SPAN 
        class="toctext">Navigation</SPAN></A></LI></UL></LI>
      <LI class="toclevel-3 tocsection-303"><A href="http://wiki.eclipse.org/EGit/User_Guide#Git_Tree_Compare_View"><SPAN 
      class="tocnumber">4.2.5</SPAN> <SPAN class="toctext">Git Tree Compare 
      View</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-304"><A href="http://wiki.eclipse.org/EGit/User_Guide#Git_Staging_View"><SPAN 
      class="tocnumber">4.2.6</SPAN> <SPAN class="toctext">Git Staging 
      View</SPAN></A> 
      <UL>
        <LI class="toclevel-4 tocsection-305"><A href="http://wiki.eclipse.org/EGit/User_Guide#Partial_Staging"><SPAN 
        class="tocnumber">4.2.6.1</SPAN> <SPAN class="toctext">Partial 
        Staging</SPAN></A></LI></UL></LI>
      <LI class="toclevel-3 tocsection-306"><A href="http://wiki.eclipse.org/EGit/User_Guide#Git_Reflog_View"><SPAN 
      class="tocnumber">4.2.7</SPAN> <SPAN class="toctext">Git Reflog 
      View</SPAN></A></LI></UL></LI>
    <LI class="toclevel-2 tocsection-307"><A href="http://wiki.eclipse.org/EGit/User_Guide#Git_URLs"><SPAN 
    class="tocnumber">4.3</SPAN> <SPAN class="toctext">Git URLs</SPAN></A></LI>
    <LI class="toclevel-2 tocsection-308"><A href="http://wiki.eclipse.org/EGit/User_Guide#Git_References"><SPAN 
    class="tocnumber">4.4</SPAN> <SPAN class="toctext">Git 
    References</SPAN></A></LI>
    <LI class="toclevel-2 tocsection-309"><A href="http://wiki.eclipse.org/EGit/User_Guide#Refspecs"><SPAN 
    class="tocnumber">4.5</SPAN> <SPAN class="toctext">Refspecs</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-310"><A href="http://wiki.eclipse.org/EGit/User_Guide#Push_Refspecs"><SPAN 
      class="tocnumber">4.5.1</SPAN> <SPAN class="toctext">Push 
      Refspecs</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-311"><A href="http://wiki.eclipse.org/EGit/User_Guide#Fetch_Refspecs"><SPAN 
      class="tocnumber">4.5.2</SPAN> <SPAN class="toctext">Fetch 
      Refspecs</SPAN></A></LI></UL></LI>
    <LI class="toclevel-2 tocsection-312"><A href="http://wiki.eclipse.org/EGit/User_Guide#Remotes"><SPAN 
    class="tocnumber">4.6</SPAN> <SPAN class="toctext">Remotes</SPAN></A></LI>
    <LI class="toclevel-2 tocsection-313"><A href="http://wiki.eclipse.org/EGit/User_Guide#Git_Ignore"><SPAN 
    class="tocnumber">4.7</SPAN> <SPAN class="toctext">Git 
Ignore</SPAN></A></LI>
    <LI class="toclevel-2 tocsection-314"><A href="http://wiki.eclipse.org/EGit/User_Guide#Git_Fetch_Factory_for_PDE_Build"><SPAN 
    class="tocnumber">4.8</SPAN> <SPAN class="toctext">Git Fetch Factory for PDE 
    Build</SPAN></A></LI></UL></LI></UL></DIV>
<H1><SPAN class="mw-headline" id="Getting_Started">Getting Started</SPAN></H1>
<H2><SPAN class="mw-headline" id="Overview">Overview</SPAN></H2>
<P>If you're new to Git or distributed version control systems generally, then 
you might want to read <A title="EGit/Git For Eclipse Users" href="http://wiki.eclipse.org/EGit/Git_For_Eclipse_Users">Git 
for Eclipse Users</A> first. More background and details can be found in the 
on-line book <A class="external text" href="http://progit.org/book/" rel="nofollow">Pro 
Git</A>. </P>
<P>If you are coming from CVS, you can find common CVS workflows for Git <A 
title="Platform-releng/Git Workflows" href="http://wiki.eclipse.org/Platform-releng/Git_Workflows">Platform-releng/Git 
Workflows</A>. </P>
<H2><SPAN class="mw-headline" id="Basic_Tutorial:_Adding_a_project_to_version_control">Basic 
Tutorial: Adding a project to version control</SPAN></H2>
<H3><SPAN class="mw-headline" id="Configuration">Configuration</SPAN></H3>
<H4><SPAN class="mw-headline" id="Identifying_yourself">Identifying 
yourself</SPAN></H4>
<P>Whenever the history of the repository is changed (technically, whenever a 
commit is created), Git keeps track of the user who created that commit. The 
identification consists of a name (typically a person's name) and an e-mail 
address. This information is stored in file <CODE>~/.gitconfig</CODE> under 
dedicated keys.<BR></P>
<P>EGit will ask you for this information when you create your first commit. By 
default, this dialog is shown only once until you create a new workspace or tick 
the checkbox "Show initial configuration dialog" on the Git Preference page: 
</P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.11-initialConfigurationDialog.png"><IMG 
width="535" height="291" alt="Egit-0.11-initialConfigurationDialog.png" src="index.files/Egit-0.11-initialConfigurationDialog.png"></A> 
</P>
<P>You can also untick "Don't show this dialog again" if you want to see it 
again later. </P>
<P>Instead of using this dialog, you can always change this information using 
the Git configuration:<BR></P>
<UL>
  <LI>Click <B>Preferences &gt; Team &gt; Git &gt; Configuration</B></LI>
  <LI>Click <B>New Entry</B> and enter the key value pairs 
  <CODE>user.email</CODE> and <CODE>user.name</CODE><BR></LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-getstarted-email.png"><IMG 
width="529" height="274" alt="Egit-0.9-getstarted-email.png" src="index.files/Egit-0.9-getstarted-email.png"></A> 
</P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-getstarted-name.png"><IMG 
width="523" height="273" alt="Egit-0.9-getstarted-name.png" src="index.files/Egit-0.9-getstarted-name.png"></A> 
</P>
<H4><SPAN class="mw-headline" 
id="Setting_up_the_Home_Directory_on_Windows">Setting up the Home Directory on 
Windows</SPAN></H4>
<P>Add the environment variable <CODE>HOME</CODE> to your environment variables. 
</P>
<OL>
  <LI>In Windows 7, type "environment" at the start menu.</LI>
  <LI>Select "Edit environment variables for your account".</LI>
  <LI>Under "User Variables", click the "New" button.</LI>
  <LI>Enter "HOME" in the name field.</LI>
  <LI>Enter "%USERPROFILE%" or some other path in the value field.</LI>
  <LI>Click OK, and OK again. You have just added the Home directory on 
  Windows.<BR></LI>
  <LI>File &gt; Exit, then restart the application.</LI></OL>
<P>Note that if you use <A class="external text" href="http://www.cygwin.com/" 
rel="nofollow">Cygwin</A>, you should already have <CODE>HOME</CODE> set. For 
example, if you installed Cygwin to <CODE>C:\cygwin</CODE> and your username is 
Fred, then Cygwin should have already set <CODE>HOME</CODE> to 
<CODE>C:\cygwin\home\Fred</CODE> (or something similar). You can verify this by 
entering <CODE>echo&nbsp;%HOME%</CODE> in the Windows command prompt, or 
<CODE>echo $HOME</CODE> in the Cygwin shell. </P>
<P>EGit needs this path for looking up the user configuration (.gitconfig). 
<CODE>HOME</CODE> should point to your home directory e.g. 
<CODE>C:\Users\Tom</CODE>. <B>Ensure correct case!</B> E.g. 
<CODE>C:\users</CODE> instead of <CODE>C:\Users</CODE> may cause problems! </P>
<P>If the <CODE>HOME</CODE> variable is not defined the home directory will be 
calculated by concatenating <CODE>HOMEDRIVE</CODE> and <CODE>HOMEPATH</CODE>. 
</P>
<P>If both <CODE>HOME</CODE> and <CODE>HOMEDRIVE</CODE> are not defined 
<CODE>HOMESHARE</CODE> will be used. </P>
<P>EGit shows a warning if <CODE>HOME</CODE> is not defined explicitly. Keep in 
mind that if you set the HOME environment variable while Eclipse is running, you 
will still see following warning. You will have to restart Eclipse for it to 
recognize the HOME value. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit_no_home.png"><IMG 
width="532" height="186" alt="Egit no home.png" src="index.files/Egit_no_home.png"></A> 
</P>
<H4><SPAN class="mw-headline" 
id="Pointing_out_the_System_wide_configuration">Pointing out the System wide 
configuration</SPAN></H4>
<P>If you use Git for Windows as a companion to EGit, make sure EGit knows where 
Git is installed so it can find the "system wide settings", e.g. how 
core.autocrlf is set. Go to the settings and look under 
Team&gt;Git&gt;Configuration and then the System Settings tab.  </P>
<P>If you selected one of the options to use Git from the Command Line Prompt 
when you installed Git for Windows, then the location of the system wide 
settings is filled in with a path and everything is fine. If not, use the Browse 
button to locate where Git is installed, e.g. C:\Program Files(x86)\Git.  </P>
<P>This advice also applies to users of other Git packagings, e.g. Git under 
Cygwin or TortoiseGit. </P>
<P>Non-Windows users should in theory check this setting, but the system wide 
settings are usually not used on non-Windows platforms. </P>
<H3><SPAN class="mw-headline" id="Create_Repository">Create 
Repository</SPAN></H3>
<UL>
  <LI> Create a new Java project <CODE>HelloWorld</CODE>. (In this case, the 
  project was built outside of your Eclipse Workspace.)</LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-getstarted-project.png"><IMG 
width="223" height="115" alt="Egit-0.9-getstarted-project.png" src="index.files/Egit-0.9-getstarted-project.png"></A> 
</P>
<UL>
  <LI> Select the project, click <B>File &gt; Team &gt; Share Project</B>.</LI>
  <LI> Select repository type <B>Git</B> and click <B>Next</B>.</LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-getstarted-share.png"><IMG 
width="457" height="299" alt="Egit-0.9-getstarted-share.png" src="index.files/Egit-0.9-getstarted-share.png"></A> 
</P>
<UL>
  <LI> To configure the Git repository select the new project 
  <CODE>HelloWorld</CODE>.</LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-getstarted-create-project.png"><IMG 
width="484" height="336" alt="Egit-0.9-getstarted-create-project.png" src="index.files/Egit-0.9-getstarted-create-project.png"></A> 
</P>
<UL>
  <LI> Click <B>Create Repository</B> to initialize a new Git repository for the 
  <CODE>HelloWorld</CODE> project. If your project already resides in the 
  working tree of an existing Git repository the repository is chosen 
  automatically.</LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-getstarted-project-created.png"><IMG 
width="484" height="336" alt="Egit-0.9-getstarted-project-created.png" src="index.files/Egit-0.9-getstarted-project-created.png"></A> 
</P>
<UL>
  <LI> Click <B>Finish</B> to close the wizard.</LI>
  <LI> The decorator text "[master]" behind the project shows that this project 
  is tracked in a repository on the <I>master</I> branch and the question mark 
  decorators show that the <CODE>.classpath</CODE> and <CODE>.project</CODE> and 
  the <CODE>.settings</CODE> files are not yet under version control.</LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-getstarted-shared-project.png"><IMG 
width="226" height="148" alt="Egit-0.9-getstarted-shared-project.png" src="index.files/Egit-0.9-getstarted-shared-project.png"></A> 
</P>
<H3><SPAN class="mw-headline" id="Track_Changes">Track Changes</SPAN></H3>
<UL>
  <LI>Click <B>Team &gt; Add to Index</B> on the project node. (This menu item 
  is named <B>Add</B> on older versions of Egit.)</LI>
  <LI>The <I>+</I> decorators show that now the project's files have been added 
  to version control.</LI>
  <LI>Mark the "bin" folder as "ignored by Git", either by right-clicking on it 
  and selecting <B>Team &gt; Ignore</B> or by creating a file 
  <CODE>.gitignore</CODE> in the project folder with the following 
content:</LI></UL>
<PRE>/bin
</PRE>
<UL>
  <LI>This excludes the <CODE>bin</CODE> folder from Git's list of tracked 
  files.</LI>
  <LI>Add <CODE>.gitignore</CODE> to version control (<B>Team &gt; 
Add</B>):</LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.11-getstarted-ignore-added.png"><IMG 
width="373" height="219" alt="Egit-0.11-getstarted-ignore-added.png" src="index.files/Egit-0.11-getstarted-ignore-added.png"></A> 
</P>
<UL>
  <LI> You may have to set your Package Explorer filters in order to see 
  <CODE>.gitignore</CODE> displayed in the Package Explorer. To access filters, 
  select the down arrow on the right edge of the Package Explorer tab to display 
  View Menu.</LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Pe_downarrow1.png"><IMG 
width="321" height="82" alt="Pe downarrow1.png" src="index.files/Pe_downarrow1.png"></A> 
</P>
<UL>
  <LI> Select <B>Filters...</B> from the View Menu and you will be presented 
  with the Java Element Filters dialog. Unselect the top entry to display files 
  that begin with . (period) such as <CODE>.gitignore</CODE>.</LI></UL>
<UL>
  <LI>Click <B>Team &gt; Commit</B> in the project context menu.</LI>
  <LI>Enter a commit message explaining your change, the first line (followed by 
  an empty line) will become the short log for this commit. By default the 
  author and committer are taken from the <CODE>.gitconfig</CODE> file in your 
  home directory.</LI>
  <LI>You may click <B>Add Signed-off-by</B> to add a <I>Signed-off-by:</I> 
  tag.</LI>
  <LI>If you are committing the change of another author you may alter the 
  author field to give the name and email address of the author.</LI>
  <LI>Click <B>Commit</B> to commit your first change.</LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-getstarted-commit.png"><IMG 
width="446" height="401" alt="Egit-0.9-getstarted-commit.png" src="index.files/Egit-0.9-getstarted-commit.png"></A> 
</P>
<UL>
  <LI>Note that the decorators of the committed files have changed as a result 
  of your commit.</LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-getstarted-commited.png"><IMG 
width="210" height="155" alt="Egit-0.9-getstarted-commited.png" src="index.files/Egit-0.9-getstarted-commited.png"></A> 
</P>
<H3><SPAN class="mw-headline" id="Inspect_History">Inspect History</SPAN></H3>
<UL>
  <LI>Click <B>Team &gt; Show in History</B> from the context menu to inspect 
  the history of a resource:</LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.11-getstarted-history1.png"><IMG 
width="750" height="338" alt="Egit-0.11-getstarted-history1.png" src="index.files/Egit-0.11-getstarted-history1.png"></A> 
</P>
<UL>
  <LI>Create a new Java class <CODE>Hello.java</CODE> and implement it.</LI>
  <LI>Add it to version control and commit your change.</LI>
  <LI>Improve your implementation and commit the improved class.</LI>
  <LI>The resource history should now show 2 commits for this class.</LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-getstarted-application.png"><IMG 
width="570" height="304" alt="Egit-0.9-getstarted-application.png" src="index.files/Egit-0.9-getstarted-application.png"></A> 
</P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.11-getstarted-history2.png"><IMG 
width="755" height="338" alt="Egit-0.11-getstarted-history2.png" src="index.files/Egit-0.11-getstarted-history2.png"></A> 
</P>
<UL>
  <LI>Click the <B>Compare Mode</B> toggle button in the History View.</LI>
  <LI>Double click <CODE>src/Hello.java</CODE> in the Resource list of the 
  History View to open your last committed change in the Compare View.</LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.11-getstarted-compare.png"><IMG 
width="910" height="650" alt="Egit-0.11-getstarted-compare.png" src="index.files/Egit-0.11-getstarted-compare.png"></A> 
</P>
<P><BR><B>Congratulations, you just have mastered your first project using 
Git&nbsp;!</B> <BR><BR></P>
<H2><SPAN class="mw-headline" id="GitHub_Tutorial">GitHub Tutorial</SPAN></H2>
<H3><SPAN class="mw-headline" id="Create_Local_Repository">Create Local 
Repository</SPAN></H3>
<UL>
  <LI>follow <A title="EGit/User Guide/Getting Started" href="http://wiki.eclipse.org/EGit/User_Guide/Getting_Started">EGit/User 
  Guide/Getting Started</A> to create a new local repository (with your content 
  instead of the demo project).</LI></UL>
<H3><SPAN class="mw-headline" id="Create_Repository_at_GitHub">Create Repository 
at GitHub</SPAN></H3>
<UL>
  <LI>create a new repository at GitHub:</LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.10-github-create-repo.png"><IMG 
width="500" height="408" alt="Egit-0.10-github-create-repo.png" src="index.files/Egit-0.10-github-create-repo.png"></A> 
</P>
<P>On the next screen you can see the URLs you may use to access your fresh new 
repository: </P>
<UL>
  <LI>click <B>SSH</B> to choose the <I>SSH protocol</I>. It can be used for 
  read and write access.</LI>
  <LI>click <B>HTTP</B> to choose the <I>HTTP protocol</I>. It can also be used 
  for read and write access.</LI>
  <LI>click <B>Git Read-Only</B> to choose the anonymous <I>git protocol</I> for 
  cloning. It's the most efficient protocol git supports. Since the <I>git 
  protocol</I> doesn't support authentication it's usually used to provide 
  efficient read-only access to public repositories.</LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.10-github-cloneurl.png"><IMG 
width="700" height="201" alt="Egit-0.10-github-cloneurl.png" src="index.files/Egit-0.10-github-cloneurl.png"></A> 
</P>
<H3><SPAN class="mw-headline" id="Eclipse_SSH_Configuration">Eclipse SSH 
Configuration</SPAN></H3>
<UL>
  <LI>Open the Eclipse <B>Preferences</B>.  Navigate to and expand the Network 
  Connections option and select SSH. Ensure that your SSH2 home is configured 
  correctly (usually this is <TT>~/.ssh</TT>) and contains your SSH2 
keys:</LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.10-ssh-preferences.png"><IMG 
width="650" height="464" alt="Egit-0.10-ssh-preferences.png" src="index.files/Egit-0.10-ssh-preferences.png"></A> 
</P>
<UL>
  <LI>if you don't have SSH keys yet you may generate them on the second tab of 
  this dialog (<B>Key Management</B>). Use a good pass phrase to protect your 
  private key, for more details see <A class="external text" href="http://help.github.com/working-with-key-passphrases/" 
  rel="nofollow">"working with key passphrases"</A>.</LI>
  <LI>upload your public SSH key to your <A class="external text" href="https://github.com/account" 
  rel="nofollow">GitHub account settings</A>.</LI></UL>
<P>Further information about advanced SSH configuration (such as using Putty or 
another SSH agent with EGit) is available in the <A title="EGit/FAQ" href="http://wiki.eclipse.org/EGit/FAQ#SSH_config">EGit 
FAQ (section SSH)</A>. </P>
<H3><SPAN class="mw-headline" id="Push_Upstream">Push Upstream</SPAN></H3>
<UL>
  <LI>Click <B>Team &gt; Remote &gt; Push...</B> and copy and paste the SSH URL 
  of your new GitHub repository.</LI>
  <LI>If you are behind a firewall which doesn't allow SSH traffic, use the 
  GitHub HTTPS URL instead and provide your GitHub user and password instead of 
  using the uploaded public SSH key. To store your credentials into the Eclipse 
  secure store click <B>Store in Secure Store</B>.</LI>
  <LI><B>Note:</B> many HTTP proxies are configured to block HTTP URLs 
  containing a user name, since disclosing a user name in an HTTP URL is 
  considered a security risk. In that case remove the user name from the HTTP 
  URL and only provide it in the user field. It will be sent as an HTTP 
  header.</LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.10-github-pushurl.png"><IMG 
width="500" height="472" alt="Egit-0.10-github-pushurl.png" src="index.files/Egit-0.10-github-pushurl.png"></A> 
</P>
<UL>
  <LI>Click <B>Next</B> and on first connection accept GitHub's host 
key.</LI></UL>
<UL>
  <LI>Enter your SSH key's passphrase and click <B>OK</B>.</LI></UL>
<UL>
  <LI>On the next wizard page click <B>Add all branches spec</B> to map your 
  local branch names to the same branch names in the destination repository (on 
  a one-to-one basis).</LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.10-github-push-refspec.png"><IMG 
width="500" height="540" alt="Egit-0.10-github-push-refspec.png" src="index.files/Egit-0.10-github-push-refspec.png"></A> 
</P>
<UL>
  <LI>Click <B>Next</B>. The push confirmation dialog will show a preview of the 
  changes that will be pushed to the destination repository.</LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.10-github-push-preview.png"><IMG 
width="500" height="426" alt="Egit-0.10-github-push-preview.png" src="index.files/Egit-0.10-github-push-preview.png"></A> 
</P>
<UL>
  <LI>Click <B>Finish</B> to confirm that you want to push these 
changes.</LI></UL>
<UL>
  <LI>The next dialog reports the result of the push operation.</LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.10-github-pushresult.png"><IMG 
width="500" height="412" alt="Egit-0.10-github-pushresult.png" src="index.files/Egit-0.10-github-pushresult.png"></A> 
</P>
<UL>
  <LI>Point your browser at your GitHub repository to see that your new 
  repository content has arrived.</LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.10-github-pushed-repo.png"><IMG 
width="500" height="395" alt="Egit-0.10-github-pushed-repo.png" src="index.files/Egit-0.10-github-pushed-repo.png"></A> 
</P>
<P><BR></P>
<H2><SPAN class="mw-headline" id="EclipseCon_2012_Git_Tutorial">EclipseCon 2012 
Git Tutorial</SPAN></H2>
<P>Find all exercises and the slides <A class="external text" href="https://docs.google.com/open?id=0B4F_gjXVrHZVRXkydE0xVFBRRkc1WUpEcXdwQ2I1dw" 
rel="nofollow">here</A>. </P>
<P>Follow the <A class="external text" href="https://docs.google.com/document/d/1UCbNCvljiInc6-vwBsHHzOQ1ItC10f1bFAOi8T30DJ8/edit" 
rel="nofollow">exercise #1</A> to prepare for the Git Tutorial. </P>
<H1><SPAN class="mw-headline" id="Concepts">Concepts</SPAN></H1>
<P>Git is built on a few simple and very powerful ideas. Knowing them helps to 
understand more easily how git works. </P>
<H2><SPAN class="mw-headline" id="Repository">Repository</SPAN></H2>
<P>The Repository or Object Database stores all objects which make up the 
history of the project. All objects in this database are identified through a 
secure 20 byte <A class="external text" href="http://en.wikipedia.org/wiki/SHA-1" 
rel="nofollow">SHA-1 hash</A> of the object content. This has several 
advantages: </P>
<UL>
  <LI> comparing two objects boils down to comparing two SHA-1 hashes.</LI>
  <LI> since object names are computed from the object content in the same way 
  in every git repository, the same object will be stored under the same name in 
  all repositories which happen to contain this object.</LI>
  <LI> an object never changes once created (obvious since changing the contents 
  means a new hash must be calculated and a new name assigned).</LI>
  <LI> repository corruption can easily be detected by checking if the SHA-1 
  object name still is the secure hash of the object's content.</LI></UL>
<P>Git has four object types&nbsp;: </P>
<UL>
  <LI> A <B>Blob object</B> stores file content.</LI>
  <LI> A <B>Tree object</B> stores the directory structure and contains <B>Blob 
  objects</B> and other <B>Tree objects</B> together with their file system 
  names and modes.</LI>
  <LI> A <B>Commit object</B> represents a snapshot of the directory structure 
  at the time of the commit and has a link to its predecessor <B>Commit 
  object</B> which form an acyclic graph of the repository revisions forming the 
  repository history.</LI>
  <LI> A <B>Tag object</B> is a symbolic named link to another repository object 
  which contains the object's name and type. Optionally, it also contains 
  information about who created the tag and other signing information.</LI></UL>
<P>The object database is stored in the <CODE>.git/objects</CODE> directory. 
Objects are either stored as loose objects or in a single-file packed format for 
efficient storage and transport. </P>
<P><B>Trust</B> </P>
<P>Git provides a built-in trust chain through secure SHA-1 hashes which allows 
it to verify if objects obtained from a (potentially untrusted) source are 
correct and have not been modified since they have been created. </P>
<P>If you get the signed tag for e.g. a project release which you can verify 
with e.g. the tagger's (the project lead's) public signing key, git ensures that 
the chain of trust covers the following: </P>
<UL>
  <LI> the signed tag identifies a commit object.</LI>
  <LI> the commit object represents exactly one project revision including its 
  content and history.</LI>
  <LI> the commit object contains the tree of blob objects and other tree 
  objects representing the directory structure of the project revision.</LI>
  <LI> the blob objects contain the file contents for this project 
revision.</LI></UL>
<P>All of the involved object names can be checked for consistency using the 
SHA-1 algorithm to ensure the correctness of the project revision and that the 
entire history can be trusted. </P>
<H2><SPAN class="mw-headline" id="Index">Index</SPAN></H2>
<P>The <B>Git Index</B> is a binary file stored in the <CODE>.git/index</CODE> 
directory containing a sorted list of file names, file modes, and file meta data 
used to efficiently detect file modifications. It also contains the SHA-1 object 
names of blob objects. </P>
<P>It has the following important properties: </P>
<UL>
  <LI> The index contains all information necessary to generate a single 
  uniquely defined tree object. E.g. a commit operation generates this tree, 
  stores it in the object database and associates it with the commit.</LI>
  <LI> The index enables fast comparison of the tree it defines with the current 
  working directory. This is achieved by storing additional meta data about the 
  involved files in the index data.</LI>
  <LI> The index can efficiently store information about merge conflicts between 
  the trees involved in the merge so that for each pathname there is enough 
  information about the involved trees to enable a three-way merge.</LI></UL>
<H2><SPAN class="mw-headline" id="Branches">Branches</SPAN></H2>
<P>A branch in Git is a named reference to a commit. There are two types of 
branches, namely "Local" and "Remote Tracking" branches which serve different 
purposes. </P>
<H3><SPAN class="mw-headline" id="Local_Branches">Local Branches</SPAN></H3>
<P>Whenever a change to a (local) Repository is committed, a new commit object 
is created. Without any other means, it would be very difficult to keep track of 
the changes in the Repository, in particular when other commits are added to the 
Repository, for example due to an update from the remote Repository or when 
checking out another commit. </P>
<P>A local branch helps with this task by providing a (local) name by which the 
"current" commit can be found. When changes are committed to the local 
repository, the branch is automatically updated to point to the newly created 
commit. </P>
<P>In addition, it is possible to add a so-called upstream configuration to a 
local branch which can be helpful when synchronizing with a remote repository. 
</P>
<H3><SPAN class="mw-headline" id="Remote_Tracking_Branches">Remote Tracking 
Branches</SPAN></H3>
<P>Remote tracking branches are created automatically when cloning and fetching 
from remote repositories. A remote tracking branch in the local repository 
always corresponds to a (local) branch in the remote repository. The name of 
such a branch follows certain conventions. </P>
<P>The remote tracking branch points to the same commit as the corresponding 
branch in the remote repository (at the time of the clone/fetch). </P>
<P>Remote tracking branches can be used for automated creation of upstream 
configuration for local branches. </P>
<H2><SPAN class="mw-headline" id="Working_Directory">Working 
Directory</SPAN></H2>
<P>The working directory is the directory used to modify files for the next 
commit. By default it is located one level above the .git directory. Making a 
new commit typically involves the following steps: </P>
<UL>
  <LI> Check out the branch the new commit shall be based on. This changes the 
  working directory so that it reflects the <I>HEAD</I> revision of the 
  branch.</LI>
  <LI> Do modifications in the working directory.</LI>
  <LI> Tell git about these modifications (add modified files). This transfers 
  the modified file contents into the object database and prepares the tree to 
  be committed in the index.</LI>
  <LI> Commit the tree prepared in the index into the object database.</LI>
  <LI> The result is a new commit object and the <I>HEAD</I> of the current 
  branch moves to the new commit.</LI></UL>
<H2><SPAN class="mw-headline" id="Recording_Changes_in_the_Repository">Recording 
Changes in the Repository</SPAN></H2>
<P>You start from a fresh checkout of a branch of a local repository. You want 
to do some changes and record snapshots of these changes in the repository 
whenever you reach a state you want to record. </P>
<P>Each file in the working directory can either be <I>tracked</I> or 
<I>untracked</I>: </P>
<UL>
  <LI><B>Tracked</B> files are those which were in the last snapshot or files 
  which have been newly staged into the <I>index</I>. They can be 
  <I>unmodified</I>, <I>modified</I>, or <I>staged</I>.</LI>
  <LI><B>Untracked</B> files are all other files (they were not in the last 
  snapshot and have not yet been added to the <I>index</I>).</LI></UL>
<P>When you first clone a repository, all files in the working directory will be 
<I>tracked</I> and <I>unmodified</I> since they have been freshly checked out 
and you haven't started editing them yet. </P>
<P>As you edit files, git will recognize they are <I>modified</I> with respect 
to the last commit. You <I>stage</I> the modified files into the index and then 
<I>commit</I> the staged changes. The cycle can then repeat. </P>
<P>This lifecycle is illustrated here: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-lifecycle-file.png"><IMG 
width="492" height="222" alt="Egit-0.9-lifecycle-file.png" src="index.files/Egit-0.9-lifecycle-file.png"></A> 
</P>
<H1><SPAN class="mw-headline" id="Tasks">Tasks</SPAN></H1>
<H2><SPAN class="mw-headline" id="Creating_Repositories">Creating 
Repositories</SPAN></H2>
<H3><SPAN class="mw-headline" id="Considerations_for_Git_Repositories_to_be_used_in_Eclipse">Considerations 
for Git Repositories to be used in Eclipse</SPAN></H3>
<H4><SPAN class="mw-headline" id="The_short_story">The short story</SPAN></H4>
<P>When setting up Git Repositories with EGit, there are two recommendations for 
the creation of "productive" (as opposed to "playground") Repositories: </P>
<UL>
  <LI> Don't create the Repository within the Eclipse workspace. 
  <UL>
    <LI> Be careful when cloning or creating a Repository.</LI>
    <LI> Make sure to use the Git Sharing Wizard correctly.</LI></UL></LI>
  <LI> Don't create a Repository with an Eclipse project as root. 
  <UL>
    <LI> Make sure to use the Git Sharing Wizard correctly.</LI></UL></LI></UL>
<P>The first mistake happens when you specify a workspace folder during cloning 
or creation of a Repository. </P>
<P>Both mistakes will happen when you use the Git Sharing Wizard from an Eclipse 
project that you have created manually in your workspace without taking 
precautions (the wizard has been fixed in the latest version). </P>
<P>Below you will find some motivation for these recommendations. </P>
<H4><SPAN class="mw-headline" id="The_longer_story">The longer story</SPAN></H4>
<H5><SPAN class="mw-headline" id="Eclipse_Workspace_and_Repository_working_directory">Eclipse 
Workspace and Repository working directory</SPAN></H5>
<P>Git Repositories can be created in different ways, for example by cloning 
from an existing Repository, by creating one from scratch, or by using the EGit 
Sharing wizard. </P>
<P>In any case (unless you create a "bare" Repository, but that's not discussed 
here), the new Repository is essentially a folder on the local hard disk which 
contains the "working directory" and the metadata folder. The metadata folder is 
a dedicated child folder named ".git" and often referred to as ".git-folder". It 
contains the actual repository (i.e. the Commits, the References, the logs and 
such). </P>
<P>The metadata folder is totally transparent to the Git client, while the 
working directory is used to expose the currently checked out Repository content 
as files for tools and editors. </P>
<P>Typically, if these files are to be used in Eclipse, they must be imported 
into the Eclipse workspace in one way or another. In order to do so, the easiest 
way would be to check in .project files from which the "Import Existing 
Projects" wizard can create the projects easily. Thus in most cases, the 
structure of a Repository containing Eclipse projects would look similar to 
something like this: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:EGit-0.12-SetupRepo-RepoStructureTwoProjects.jpg"><IMG 
width="215" height="223" alt="EGit-0.12-SetupRepo-RepoStructureTwoProjects.jpg" 
src="index.files/EGit-0.12-SetupRepo-RepoStructureTwoProjects.jpg"></A> </P>
<H5><SPAN class="mw-headline" id="Implications">Implications</SPAN></H5>
<P>The above has the following implications: </P>
<UL>
  <LI> It is probably not a good idea to make a project the root folder of your 
  Repository.</LI></UL>
<DL>
  <DD> The reason is that you will never be able to add another project to this 
  Repository, as the .project file will occupy the root folder; you could still 
  add projects as sub-folders, but this kind of project nesting is known to 
  cause lots of problems all over the place. In order to add another project, 
  you would have to move the project to a sub-folder in the Repository and add 
  the second project as another sub-folder before you could commit this 
  change.</DD></DL>
<UL>
  <LI> It is a good idea to keep your Repository outside of your Eclipse 
  Workspace.</LI></UL>
<DL>
  <DD> There are several reasons for this:</DD></DL>
<DL>
  <DD> The new Repository will consider the complete folder structure of the 
  Eclipse workspace as (potential) content. This can result in performance 
  issues, for example when calculating the changes before committing (which will 
  scan the complete .metadata folder, for example); more often than not, the 
  workspace will contain dead folders (e.g. deleted projects) which semantically 
  are not relevant for EGit but cannot be excluded easily.</DD></DL>
<DL>
  <DD> The metadata (.git-) folder will be a child of the Eclipse Workspace. It 
  is unclear whether this might cause unwanted folder traversals by 
Eclipse.</DD></DL>
<DL>
  <DD> You can easily destroy your Repository by destroying your Eclipse 
  Workspace.</DD></DL>
<H3><SPAN class="mw-headline" id="Creating_a_new_empty_Git_Repository">Creating 
a new empty Git Repository</SPAN></H3>
<P>You can create a project first and share it afterwards. The Share Project 
Wizard supports creation of Git repositories  (see <A title="EGit/User Guide/Sharing" 
href="http://wiki.eclipse.org/EGit/User_Guide/Sharing#Adding_a_project_to_version_control">Adding 
a project to version control</A>). </P>
<P>You can also create a new empty Git Repository from the Git Repositories View 
(see <A title="EGit/User Guide" href="http://wiki.eclipse.org/EGit/User_Guide#Creating_a_Repository">Creating 
a Repository</A>). </P>
<H3><SPAN class="mw-headline" id="Creating_a_Git_Repository_for_multiple_Projects">Creating 
a Git Repository for multiple Projects</SPAN></H3>
<P>You may create multiple projects under a common directory and then create a 
common repository for all projects in one go: </P>
<UL>
  <LI>create the Eclipse projects (e.g. a, b, c) under a common directory (e.g. 
  <SPAN style="font-family: monospace;">/repos/examples/</SPAN>)</LI>
  <LI>select all projects (a, b, c), and in the contextual menu click <B>Team 
  &gt; Share Project &gt; Git</B></LI>
  <LI>press <B>Next</B></LI>
  <LI>select all projects (a, b, c)</LI>
  <LI>the wizard automatically moves up the default repository location to the 
  parent folder <SPAN style="font-family: monospace;">/repos/examples/</SPAN> 
  since multiple projects have been selected</LI>
  <LI>click <B>Create Repository</B> and <B>Finish</B></LI></UL>
<P><BR></P>
<H2><SPAN class="mw-headline" 
id="Starting_from_existing_Git_Repositories">Starting from existing Git 
Repositories</SPAN></H2>
<P>In order to work with the content of a Git repository in the Eclipse 
workbench, the contained files and folders must be imported as projects. In 
principle, this import can be done using the generic "New Project" or 
"Import..." wizards, since the working directory of a Git Repository is just a 
normal directory in the local file system. However, the newly created projects 
would still have to be shared manually with Git. The "Import Projects from Git" 
wizard integrates project import and sharing and also offers some extra 
convenience. </P>
<H3><SPAN class="mw-headline" id="Starting_the_import_wizard">Starting the 
import wizard</SPAN></H3>
<P>To start the wizard click <B>Import &gt; Git &gt; Projects from Git</B>. </P>
<P>If you started in a clean workspace, the first page will display an empty 
list: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-import-projects-select-repository.png"><IMG 
width="474" height="313" alt="Egit-0.9-import-projects-select-repository.png" 
src="index.files/Egit-0.9-import-projects-select-repository.png"></A> </P>
<P>Before you can continue, you need to add one or several Git repositories to 
the list. If you already have repositories in the list, this step is optional. 
</P>
<H3><SPAN class="mw-headline" id="Cloning_or_adding_Repositories">Cloning or 
adding Repositories</SPAN></H3>
<P>There are two ways to add Git repositories to the list: </P>
<OL>
  <LI>Clone a remote repository</LI>
  <LI>Add an existing repository from your local file system</LI></OL>
<H4><SPAN class="mw-headline" id="Cloning_a_Repository">Cloning a 
Repository</SPAN></H4>
<P>The first option is used if you start with a remote repository. The clone 
operation will copy that repository to your local file system. To start the 
Clone Wizard click <B>Clone...</B>. The Clone Wizard is described in more detail 
in <A title="EGit/User Guide" href="http://wiki.eclipse.org/EGit/User_Guide#Cloning_Remote_Repositories">Cloning 
Remote Repositories</A>. Upon successful completion of the clone operation, the 
newly cloned repository appears in the list automatically. </P>
<H4><SPAN class="mw-headline" id="Adding_a_Repository">Adding a 
Repository</SPAN></H4>
<P>The second option is useful if you already have a repository in your local 
file system, for example because you have cloned it earlier, you created it from 
scratch or you copied it from somewhere else. Click <B>Add...</B>; and select a 
directory in the local file system. Press <B>Search</B> to trigger a scan for 
Git repositories contained in this directory. If Git repositories are found, 
they will be listed and you can select repositories to add: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.11-import-projects-add-dialog.png"><IMG 
width="525" height="439" alt="Egit-0.11-import-projects-add-dialog.png" src="index.files/Egit-0.11-import-projects-add-dialog.png"></A> 
</P>
<P>After successful completion, the repository list should contain some 
repositories: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.11-import-projects-filled-list.png"><IMG 
width="525" height="377" alt="Egit-0.11-import-projects-filled-list.png" src="index.files/Egit-0.11-import-projects-filled-list.png"></A> 
</P>
<H3><SPAN class="mw-headline" 
id="Selecting_a_Repository_from_the_List">Selecting a Repository from the 
List</SPAN></H3>
<P>You can now select a repository and click <B>Next</B>. On the following 
wizard page, you will decide how to import projects. </P>
<H3><SPAN class="mw-headline" id="Importing_projects">Importing 
projects</SPAN></H3>
<P>This page offers a group with radio buttons that allows you to select a 
wizard and a directory tree that optionally allows you to select a folder in the 
working directory. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.11-import-projects-select-wizard.png"><IMG 
width="554" height="534" alt="Egit-0.11-import-projects-select-wizard.png" src="index.files/Egit-0.11-import-projects-select-wizard.png"></A> 
</P>
<H3><SPAN class="mw-headline" id="Wizard_for_project_import">Wizard for project 
import</SPAN></H3>
<H4><SPAN class="mw-headline" id="Import_Existing_Projects">Import Existing 
Projects</SPAN></H4>
<P>If this radio button is selected, the wizard will scan the local file system 
for <TT>.project</TT> files and display the projects found. This is the most 
comfortable solution and should be used if <TT>.project</TT> files are checked 
into the Repository. </P>
<H5><SPAN class="mw-headline" 
id="Limiting_the_Scope_for_Project_Import">Limiting the Scope for Project 
Import</SPAN></H5>
<P>In this case, the directory tree at the bottom is active. You can limit the 
search for <TT>.project</TT> files by selecting a folder in this tree, otherwise 
the complete working directory of the repository will be scanned. On the next 
page, a list of the found projects (if any) will be shown. This is very similar 
to the generic <B>Import Existing Projects</B> wizard, but has some additional 
filtering capabilities: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-import-projects-select-projects.png"><IMG 
width="514" height="505" alt="Egit-0.9-import-projects-select-projects.png" src="index.files/Egit-0.9-import-projects-select-projects.png"></A> 
</P>
<H4><SPAN class="mw-headline" id="Use_the_New_Projects_Wizard">Use the New 
Projects Wizard</SPAN></H4>
<P>When this option is chosen, the generic "New Project" wizard will open. After 
completion of the "New Project" wizard, the "Import Projects from Git" wizard 
will resume and assist with sharing the projects you just created. </P>
<P>In this case, the directory tree at the bottom is inactive, as the selection 
is not relevant for the "New Project" wizard. </P>
<H4><SPAN class="mw-headline" id="Import_as_General_Project">Import as General 
Project</SPAN></H4>
<P>This option can be helpful when there are neither <TT>.project</TT> files 
available nor a suitable "New Project" wizard. If chosen, the wizard will 
generate a <TT>.project</TT> file and point the project to a folder of the 
Repository's working directory. The result is a "General Project". </P>
<P>By default, the newly generated project will point to the working directory 
of the Repository. By selecting some folder from the directory tree at the 
bottom, you can have the project generated for that folder. </P>
<P>Click <B>Next</B> to open a simple dialog for entering a name and a directory 
for the new project: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-import-projects-general-project.png"><IMG 
width="549" height="258" alt="Egit-0.9-import-projects-general-project.png" src="index.files/Egit-0.9-import-projects-general-project.png"></A> 
</P>
<P>By default the suggested project name matches the name of the 
directory.<BR></P>
<H2><SPAN class="mw-headline" id="Working_with_remote_Repositories">Working with 
remote Repositories</SPAN></H2>
<H3><SPAN class="mw-headline" id="Cloning_Remote_Repositories">Cloning Remote 
Repositories</SPAN></H3>
<P>Using the Git Clone Wizard you may clone remote repositories using different 
transport protocols. </P>
<P>The wizard can be started from the "Import Projects from Git" wizard using 
<BR><B>File &gt; Import... &gt; Git &gt; Projects from Git &gt; Next &gt; Clone 
URI &gt; Next</B> </P>
<P>or from the "Git Repositories View" (described in <A title="EGit/User Guide" 
href="http://wiki.eclipse.org/EGit/User_Guide#Managing_Repositories">Managing 
Repositories</A>) using the <B>Clone a Git Repository</B> toolbar button or view 
menu. </P>
<H4><SPAN class="mw-headline" id="Repository_Selection">Repository 
Selection</SPAN></H4>
<P>On the first page of the wizard enter the location of the remote repository: 
</P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-clone-wizard-url-page.png"><IMG 
width="468" height="454" alt="Egit-0.9-clone-wizard-url-page.png" src="index.files/Egit-0.9-clone-wizard-url-page.png"></A> 
</P>
<UL>
  <LI><B>URI</B> - The complete URI of the remote repository or the path on the 
  file system. This field is automatically synchronized with the other fields. 
  <BR>Note that you can use the <B>Local file...</B> button to browse for a 
  local directory and that the URI field offers content assist by offering 
  previously used values</LI>
  <LI><B>Host</B> - The name of the remote host or empty if cloning from the 
  file system.</LI>
  <LI><B>Repository Path</B> - Path to the remote repository or on the file 
  system.</LI>
  <LI><B>Protocol</B> - One of the protocols described below.</LI>
  <LI><B>Port</B> - Port number.</LI>
  <LI><B>User</B> - The user name used for authentication.</LI>
  <LI><B>Password</B> The password used for authentication.</LI>
  <LI><B>Store in Secure Store</B> Whether the password is saved in the Eclipse 
  secure store.</LI></UL>
<P>The following protocols are supported: </P>
<UL>
  <LI><B>file</B> - File system access to the repository.</LI>
  <LI><B>ftp</B> - <A class="external text" href="http://tools.ietf.org/html/rfc959" 
  rel="nofollow">File Transfer Protocol</A></LI>
  <LI><B>git</B> - The most efficient built-in git protocol (default port 9418). 
  This protocol doesn't provide authentication. Typically used for anonymous 
  read access to the repository.</LI>
  <LI><B>http</B> - <A class="external text" href="http://tools.ietf.org/html/rfc2616" 
  rel="nofollow">Hypertext Transfer Protocol</A> can be tunneled through 
  firewalls.</LI>
  <LI><B>https</B> - <A class="external text" href="http://tools.ietf.org/html/rfc2818" 
  rel="nofollow">Hypertext Transfer Protocol Secure</A> can be tunneled through 
  firewalls.</LI>
  <LI><B>sftp</B> - <A class="external text" href="http://en.wikipedia.org/wiki/SSH_File_Transfer_Protocol" 
  rel="nofollow">SSH File Transfer Protocol</A></LI>
  <LI><B>ssh</B> - Git over <A class="external text" href="http://tools.ietf.org/html/rfc4251" 
  rel="nofollow">secure shell (SSH)</A> protocol. Typically used for 
  authenticated write access to the repository.</LI></UL>
<P><BR><B>Note:</B> If you are behind a firewall you may need to configure your 
proxy settings (<B>Preferences &gt; General &gt; Network Connections</B>). Many 
HTTP proxies are configured to block URLs containing a username (and/or 
password) like e.g. <A class="external free" href="http://fred:topsecret@egit.eclipse.org/egit.git" 
rel="nofollow">http://fred:topsecret@egit.eclipse.org/egit.git</A> hence it's 
recommended to use the <I>user</I>, <I>password</I> fields at the bottom of the 
wizard page, the credentials will be transmitted as HTTP headers. </P>
<H4><SPAN class="mw-headline" id="Branch_Selection">Branch Selection</SPAN></H4>
<P>On the next page choose which branches shall be cloned from the remote 
repository: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.11-clone-wizard-branch-page.png"><IMG 
width="525" height="520" alt="Egit-0.11-clone-wizard-branch-page.png" src="index.files/Egit-0.11-clone-wizard-branch-page.png"></A> 
</P>
<P>If you are not sure which branches you need, simply hit "Select All". </P>
<P>You can filter the branches by their name by typing using the text control 
above the list. Note, however, that branches that have been checked will always 
be shown in the list, i.e. they will not be filtered. </P>
<H4><SPAN class="mw-headline" id="Local_Destination">Local 
Destination</SPAN></H4>
<P>On the next page define where you want to store the repository on the local 
file system and define some initial settings. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-clone-wizard-destination-page.png"><IMG 
width="492" height="434" alt="Egit-0.9-clone-wizard-destination-page.png" src="index.files/Egit-0.9-clone-wizard-destination-page.png"></A> 
</P>
<UL>
  <LI><B>Directory</B> - The directory which will contain the Git repository. It 
  will be created by the wizard if it does not yet exist.</LI>
  <LI><B>Initial branch</B> - Choose here which local branch will be created and 
  initially checked out.</LI>
  <LI><B>Remote name</B> - Define a name for the remote repository. The default 
  is "origin".</LI></UL>
<P>The default root path for storing Git repositories can be configured in the 
preference <B>Team &gt; Git &gt; Default Repository Folder</B> <BR></P>
<P>You can press <B>Finish</B> on this page or press <B>Next</B> if you are 
working with <A class="external text" href="http://code.google.com/p/gerrit/" 
rel="nofollow">Gerrit Code Review</A> and you want to configure your repository 
accordingly. </P>
<H4><SPAN class="mw-headline" id="Cloning_from_specific_locations">Cloning from 
specific locations</SPAN></H4>
<P>The Clone wizard of EGit can be extended by other plugins in order to search 
for repositories on specific backends which host git repositories. Currently 
such an extension is available for Github and soon will be available for Gerrit. 
For both you need to install the respective Mylyn connectors. The Gerrit Mylyn 
connector extension then will also configure the remote repository for the work 
with Gerrit. This can also be done or changed later from the Git Repositories 
View, see <A 
href="http://wiki.eclipse.org/EGit/User_Guide#Gerrit_Configuration">Gerrit 
Configuration</A>. </P>
<P>When you have installed such an extension, the Clone wizard opens with a 
selection page where you can choose between different sources of the repository 
to clone: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-1.3-CloneSources.png"><IMG 
width="466" height="456" alt="Egit-1.3-CloneSources.png" src="index.files/Egit-1.3-CloneSources.png"></A> 
</P>
<H3><SPAN class="mw-headline" id="Pushing_to_other_Repositories">Pushing to 
other Repositories</SPAN></H3>
<H4><SPAN class="mw-headline" id="Pushing_to_upstream">Pushing to 
upstream</SPAN></H4>
<P>If you are working with a local branch which has a so-called "<A href="http://wiki.eclipse.org/EGit/User_Guide#Upstream_Configuration">Upstream 
Configuration</A>", the most convenient way for pushing relies on this upstream 
configuration. </P>
<P>Typically local branches are created based on a remote tracking branch. Since 
the remote tracking branch is associated with a remote and the remote contains 
the information required to access the corresponding remote repository, it is 
possible to automatically create this upstream configuration while creating the 
local branch (see <A 
href="http://wiki.eclipse.org/EGit/User_Guide#Branching">Branching</A> for more 
information). </P>
<P>When pushing upstream from the local branch, push requires no further 
parameters and hence can be performed without showing another dialog based on 
the stored upstream configuration. </P>
<P>In order to push upstream, right-click on a project and select <B>Team &gt; 
Push to upstream</B> or right-click on a Repository in the Repositories View and 
click <B>Push to upstream</B>. There is also an action available in the <A href="http://wiki.eclipse.org/EGit/User_Guide#Git_Workbench_Toolbar_and_Git_Workbench_Menu">Git 
Command Group</A>.<BR></P>
<P>Push will then be executed immediately after selecting the action. Once 
finished, a confirmation dialog will be shown displaying information about the 
pushed data and/or error messages: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.11-PushResultDialog.png"><IMG 
width="477" height="511" alt="Egit-0.11-PushResultDialog.png" src="index.files/Egit-0.11-PushResultDialog.png"></A> 
</P>
<H5><SPAN class="mw-headline" id="Configuring_upstream_push">Configuring 
upstream push</SPAN></H5>
<P>The upstream push can be configured using the "Configure..." button on the 
confirmation dialog (see above) or by right-clicking a project and selecting 
<B>Team &gt; Remote &gt; Configure push to upstream...</B>. </P>
<P>A configuration dialog will be shown for configuration of push URIs and 
corresponding branch mappings (RefSpecs): </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-ConfigurePushToUpstream.png"><IMG 
width="471" height="473" alt="Egit-3.1-ConfigurePushToUpstream.png" src="index.files/Egit-3.1-ConfigurePushToUpstream.png"></A> 
</P>
<P>The dialog is divided into three main sections. In the upper part, 
information about the currently checked out branch and the remote it's following 
is shown. Usually local branches are created based on a remote tracking branch 
which auto-configures that the local branch tracks this remote tracking branch. 
</P>
<P>In this specific example, there is a warning message that there are several 
branches that use the remote named "origin". This means that changes in the push 
configuration will affect all these branches, not just the branch shown in the 
Branch field. Move your mouse over the warning to display these branches in a 
tooltip. </P>
<P>The URI Group contains two controls, a URI field and a Push URIs list. If the 
list is empty, the URI in the URI field will be used for Push, if at least one 
entry is in the Push URIs list, the URIs in the list will be used instead. It 
should be noted that if the Push URIs list is empty and the URI is changed in 
this dialog, the new URI will also be used for Pull, so care should be taken 
when doing so. </P>
<P>The RefMapping Group allows specification of one or several RefSpecs (see <A 
href="http://wiki.eclipse.org/EGit/User_Guide#Refspecs"> Refspecs</A>) for Push. 
</P>
<P>"Add" will open a small wizard that helps in the creation of the RefSpecs. 
You can also paste a RefSpec from the clipboard into the list. </P>
<P>Clicking on the "Advanced" control will show/hide an "Edit (Advanced...)" 
button that allows for more complex RefSpec editing similar to the <A href="http://wiki.eclipse.org/EGit/User_Guide#Push_Wizard">Push 
Wizard</A> below. </P>
<P>The buttons in the lower button bar allow you to save your changes and do the 
push immediately, save the changes without fetching, dry-run (push without 
saving the configuration), revert your changes, and Cancel. </P>
<H4><SPAN class="mw-headline" id="Direct_Push">Direct Push</SPAN></H4>
<P>Alternatively, you can use <A href="http://wiki.eclipse.org/EGit/User_Guide#Direct_Fetch_and_Push_Support">Direct 
Push Support</A> on a Push Specification of a Remote. </P>
<H4><SPAN class="mw-headline" id="Push_Wizard">Push Wizard</SPAN></H4>
<P>The most powerful (but also most complex) way is using the Push Wizard 
<BR><B>Team &gt; Remote &gt; Push...</B> </P>
<H5><SPAN class="mw-headline" id="Push_URI">Push URI</SPAN></H5>
<UL>
  <LI>If you already configured a Push Specification in the Repositories View 
  you may also select it here using the drop-down list under <B>Configured 
  remote repositories</B>. The <B>Finish</B> button will be enabled if the Push 
  Specification for this remote is configured properly (i.e. has at least one 
  URI and a ref spec.</LI>
  <LI>Otherwise click <B>Custom URI</B> and enter the URI of the upstream 
  repository you want to push to.</LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-push-wizard-destination-page.png"><IMG 
width="496" height="523" alt="Egit-0.9-push-wizard-destination-page.png" src="index.files/Egit-0.9-push-wizard-destination-page.png"></A> 
</P>
<H5><SPAN class="mw-headline" id="Push_Ref_Specifications">Push Ref 
Specifications</SPAN></H5>
<P>See also <A 
href="http://wiki.eclipse.org/EGit/User_Guide#Refspecs">Refspecs</A> for more 
explanations. </P>
<P>Click <B>Next</B> <BR> If this is the first time you connect to this 
repository via ssh you will have to accept the host key of the remote repository 
</P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-push-wizard-accept-hostkey.png"><IMG 
width="518" height="173" alt="Egit-0.9-push-wizard-accept-hostkey.png" src="index.files/Egit-0.9-push-wizard-accept-hostkey.png"></A> 
</P>
<P>If your ssh key is protected by a passphrase (which is recommended) you have 
to enter it here </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-push-wizard-ssh-passphrase.png"><IMG 
width="446" height="170" alt="Egit-0.9-push-wizard-ssh-passphrase.png" src="index.files/Egit-0.9-push-wizard-ssh-passphrase.png"></A> 
</P>
<P>Click <B>Add all branches spec</B> </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-push-wizard-refspec-allbranches.png"><IMG 
width="502" height="557" alt="Egit-0.9-push-wizard-refspec-allbranches.png" src="index.files/Egit-0.9-push-wizard-refspec-allbranches.png"></A> 
</P>
<P>This is a convenient way to declare that you want to map your local branch 
names to the same branch names on the upstream repository you want to push 
changes to. </P>
<P>Click <B>Add all tags spec</B> to map local tags 1:1 to tags in the 
repository you want to push to. </P>
<P>If you want to map local branches to those in the upstream repository in a 
different way you may define more detailed mapping specifications in the 
following way </P>
<UL>
  <LI>enter source and destination ref or select already existing branches from 
  the drop-down lists</LI>
  <LI>click <B>Add Spec</B></LI></UL>
<P>This will transfer the newly defined mapping to the list <B>Specifications 
for push</B> </P>
<P><B>Other common push specs:</B> </P>
<UL>
  <LI>You may e.g. map <TT>refs/heads/*</TT> to <TT>refs/heads/joe/*</TT> if you 
  want to name the branches you push to according to your nickname <I>joe</I>. 
  This is useful if multiple users want to publish their local branches on 
  personal branches in a jointly used public repository.</LI>
  <LI>Another usual mapping is to map the source ref <TT>HEAD</TT> to the 
  destination <TT>refs/heads/master</TT>. This means you want to map your 
  current <TT>HEAD</TT> (which might currently point e.g. to any local topic 
  branch) to the upstream master branch.</LI></UL>
<H5><SPAN class="mw-headline" id="Delete_Ref_Specifications">Delete Ref 
Specifications</SPAN></H5>
<P>To delete a ref in the destination repository select the ref to be deleted 
from the drop-down list <B>Remote ref to delete</B> and click <B>Add Spec</B>. 
This will create a corresponding entry in the <B>Specifications for push</B> 
list. Alternatively you may type in the specification for the refs to be 
deleted, this may also use wildcards. Pushing Delete Ref Specifications will 
delete the matching Refs in the destination repository. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-push-wizard-delete-refspec.png"><IMG 
width="411" height="225" alt="Egit-0.9-push-wizard-delete-refspec.png" src="index.files/Egit-0.9-push-wizard-delete-refspec.png"></A> 
</P>
<H5><SPAN class="mw-headline" 
id="Conflicting_Push_Ref_Specifications">Conflicting Push Ref 
Specifications</SPAN></H5>
<P>If you add multiple conflicting Push Ref Specifications they will be marked 
in red, solve this by removing or editing the conflicting specs. It is also 
possible to edit the specs in-place in the list <B>Specifications for push</B> 
</P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-push-wizard-refspec-conflict.png"><IMG 
width="414" height="116" alt="Egit-0.9-push-wizard-refspec-conflict.png" src="index.files/Egit-0.9-push-wizard-refspec-conflict.png"></A> 
</P>
<H5><SPAN class="mw-headline" id="Push_Confirmation">Push 
Confirmation</SPAN></H5>
<P>Click <B>Next</B> </P>
<P>This will open the Push Confirmation dialog showing a preview which changes 
will be pushed to the destination repository. If this does not match your 
expectation click <B>Back</B> and correct your push specs accordingly. </P>
<UL>
  <LI>For ref updates the range of commits to be pushed will be shown in the 
  format <TT><B>&lt;SHA1-from&gt;..&lt;SHA1-to&gt;</B></TT> e.g. 
  <TT><B>d97f5a2e..adfdbfd2</B></TT> means all commits between 
  <TT><B>d97f5a2e</B></TT> and <TT><B>adfdbfd2</B></TT> will be pushed.</LI>
  <LI>For refs which do not yet exist in the destination repository <TT><B>[new 
  branch]</B></TT> or <TT><B>[new tag]</B></TT> is displayed.</LI>
  <LI>For refs which will be delete <TT><B>[deleted]</B></TT> is shown.</LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-push-wizard-confirm-push.png"><IMG 
width="465" height="403" alt="Egit-0.9-push-wizard-confirm-push.png" src="index.files/Egit-0.9-push-wizard-confirm-push.png"></A> 
</P>
<UL>
  <LI>Select the <B>Push only if remote refs don't change in the mean time</B> 
  check box if you want to be sure that what you see in this preview is also 
  what you get when pushing these changes out.</LI>
  <LI>Select the <B>Show final report dialog only when it differs from this 
  confirmation report</B> check box if you only want to get a report after 
  executing the push if the result differs from this preview.</LI></UL>
<H5><SPAN class="mw-headline" id="Push_Result_Report">Push Result 
Report</SPAN></H5>
<P>Click <B>Finish</B> </P>
<P>Depending on the options you have chosen a push result report dialog is 
shown. It displays the list of commits which are pushed to the remote. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-PushConfirmationDialog.png"><IMG 
width="482" height="477" alt="Egit-3.1-PushConfirmationDialog.png" src="index.files/Egit-3.1-PushConfirmationDialog.png"></A> 
</P>
<P>In the box at the bottom the push confirmation message from the remote server 
is displayed. In case of any errors you will find the error message from the 
remote server here. To see the message for a given list entry simply select it 
in the list. </P>
<P>Click <B>Ok</B> to close the dialog. <BR><BR></P>
<H3><SPAN class="mw-headline" id="Fetching_from_other_Repositories">Fetching 
from other Repositories</SPAN></H3>
<H4><SPAN class="mw-headline" id="Fetching_from_upstream">Fetching from 
upstream</SPAN></H4>
<P>If you are working with a local branch which has a so-called "<A href="http://wiki.eclipse.org/EGit/User_Guide#Upstream_Configuration">Upstream 
Configuration</A>", the most convenient way for fetching relies on this upstream 
configuration. </P>
<P>A local branch is typically created based on a remote tracking branch. Since 
the remote tracking branch is associated with a remote and this remote contains 
the information required to access the remote repository, it is possible to 
automatically create this upstream configuration while creating the local branch 
(see <A href="http://wiki.eclipse.org/EGit/User_Guide#Branching">Branching</A> 
for more information). </P>
<P>When fetching from upstream, this persisted configuration can be used to 
fetch automatically without the need to provide further parameters in a dialog. 
</P>
<P>In order to fetch from upstream, click <B>Team &gt; Fetch from upstream</B> 
on a project or click <B>Fetch from upstream</B> on a Repository in the 
Repositories View. There is also an action available in the <A href="http://wiki.eclipse.org/EGit/User_Guide#Git_Workbench_Toolbar_and_Git_Workbench_Menu">Git 
Command Group</A>. </P>
<P>Fetch will be executed immediately after selecting the action. Once finished, 
a confirmation dialog will be shown displaying information about the fetched 
data and/or error messages: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-FetchResultDialog.png"><IMG 
width="570" height="363" alt="Egit-3.1-FetchResultDialog.png" src="index.files/Egit-3.1-FetchResultDialog.png"></A> 
</P>
<H5><SPAN class="mw-headline" id="Configuring_fetch_from_upstream">Configuring 
fetch from upstream</SPAN></H5>
<P>The upstream fetch can be configured using the "Configure..." button on the 
confirmation dialog (see above) or by clicking <B>Team &gt; Remote &gt; 
Configure fetch from upstream...</B> on a project. </P>
<P>A configuration dialog will be shown for configuring the fetch URI and branch 
mappings (RefSpecs): </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-ConfigureFetchFromUpstream.png"><IMG 
width="554" height="393" alt="Egit-3.1-ConfigureFetchFromUpstream.png" src="index.files/Egit-3.1-ConfigureFetchFromUpstream.png"></A> 
</P>
<P>The dialog is divided into three main sections. In the upper part, 
information about the currently checked out branch and the remote it's following 
is shown. </P>
<P>The URI field can be used to add/change the fetch URI. </P>
<P>The RefMapping Group allows specification of one or several RefSpecs (see <A 
href="http://wiki.eclipse.org/EGit/User_Guide#Refspecs"> Refspecs</A>) for 
Fetch. </P>
<P>The "Add" button will open a small wizard that helps in the creation of the 
RefSpecs. You can also paste a RefSpec from the clipboard into the list. </P>
<P>Clicking on the "Advanced" control will show/hide an "Edit (Advanced...)" 
button that allows for more complex RefSpec editing similar to the <A href="http://wiki.eclipse.org/EGit/User_Guide#Fetch_Wizard">Fetch 
Wizard</A>. </P>
<P>The buttons in the lower button bar allow you to save your changes and do the 
fetch immediately, save the changes without fetching, dry-run (fetch without 
saving the configuration), revert your changes, and Cancel. </P>
<H4><SPAN class="mw-headline" id="Direct_Fetch">Direct Fetch</SPAN></H4>
<P>Another way for fetching is to use <A href="http://wiki.eclipse.org/EGit/User_Guide#Direct_Fetch_and_Push_Support">Direct 
Fetch Support</A> on a Fetch Specification of a Remote. </P>
<H4><SPAN class="mw-headline" id="Fetch_Wizard">Fetch Wizard</SPAN></H4>
<P>The most powerful (but also most complex) way is using the Fetch Wizard 
<BR><B>Team &gt; Fetch...</B> </P>
<UL>
  <LI> If you already configured a Fetch Specification in the Repositories View 
  you may also select it here using the drop-down list under <B>Configured 
  remote repositories</B>. The <B>Finish</B> button will be enabled if the Fetch 
  Specification for this remote is configured properly (i.e. has at least one 
  URI and a ref spec.</LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-fetch-wizard-source-page.png"><IMG 
width="455" height="161" alt="Egit-0.9-fetch-wizard-source-page.png" src="index.files/Egit-0.9-fetch-wizard-source-page.png"></A> 
</P>
<UL>
  <LI> Otherwise click <B>Custom URI</B> and enter the URI of the upstream 
  repository you want to fetch changes from.</LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-fetch-wizard-source-url-page.png"><IMG 
width="462" height="520" alt="Egit-0.9-fetch-wizard-source-url-page.png" src="index.files/Egit-0.9-fetch-wizard-source-url-page.png"></A> 
</P>
<H5><SPAN class="mw-headline" id="Fetch_Ref_Specifications">Fetch Ref 
Specifications</SPAN></H5>
<P>See also <A href="http://wiki.eclipse.org/EGit/User_Guide#Refspecs"> 
Refspecs</A> for more explanations. </P>
<P>Click <B>Next</B> <BR> Click <B>Add all branches spec</B> </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-fetch-wizard-refspec.png"><IMG 
width="533" height="563" alt="Egit-0.9-fetch-wizard-refspec.png" src="index.files/Egit-0.9-fetch-wizard-refspec.png"></A> 
</P>
<P>This is a convenient way to declare that you want to map the branch names in 
the upstream repository you want to fetch changes from 1:1 to the same local 
branch names. </P>
<UL>
  <LI>Click in the edit field <B>Destination Ref</B> and replace the path 
  segment <I>choose_remote_name</I> with a symbolic name for the upstream 
  repository you are going to fetch from.</LI>
  <LI>The default remote name for the repository your repository has been cloned 
  from is <TT><B>origin</B></TT>. The master of this remote maps by default from 
  <TT><B>refs/heads/master</B></TT> to 
  <TT><B>refs/remotes/origin/master</B></TT>.</LI>
  <LI>If you e.g. want to additionally track branches from Joe's repository in 
  your local repository you would map the branch in his repository 
  <TT><B>refs/heads/*</B></TT> to the following tracking branches 
  <TT><B>refs/remotes/joe/*</B></TT>.</LI>
  <LI>Deselect <B>Force Update</B> if you want to allow fast-forward updates 
  only, select this option if you also want to allow non-fast-forward 
  changes.</LI>
  <LI>Click <B>Force Update all Refs</B> to set the force update option on all 
  specs</LI>
  <LI>Click <B>Remove all specs</B> to remove all specs from the list 
  <B>Specifications for fetch</B></LI></UL>
<UL>
  <LI>Click <B>Add all tags spec</B> to map tags tags in the repository you want 
  to fetch from 1:1 to local tags.</LI></UL>
<P>If you want to map branches or tags in the upstream repository to local 
branches in a different way you may define more detailed mapping specifications 
in the following way </P>
<UL>
  <LI>enter source (ref in source repository) and destination ref (tracking 
  branch or tag in local repository) or select already existing branches from 
  the drop-down lists</LI>
  <LI>click <B>Add Spec</B></LI></UL>
<P>This will transfer the newly defined mapping to the list <B>Specifications 
for fetch</B> </P>
<H5><SPAN class="mw-headline" id="Fetch_Result_Report">Fetch Result 
Report</SPAN></H5>
<P>Click <B>Finish</B> </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-FetchWizardResult.png"><IMG 
width="452" height="301" alt="Egit-3.1-FetchWizardResult.png" src="index.files/Egit-3.1-FetchWizardResult.png"></A> 
</P>
<P>A fetch result dialog is shown. </P>
<UL>
  <LI> For ref updates the list commits which have been fetched will be 
  shown.</LI>
  <LI> For refs which didn't exist before in the local repository <TT><B>[new 
  branch]</B></TT> or <TT><B>[new tag]</B></TT> is displayed.</LI>
  <LI> For refs which have been deleted <TT><B>[deleted]</B></TT> is 
shown.</LI></UL>
<P><BR></P>
<H3><SPAN class="mw-headline" 
id="Pulling_New_Changes_from_Upstream_Branch">Pulling New Changes from Upstream 
Branch</SPAN></H3>
<UL>
  <LI> Right-click on a project in the Package Explorer and select <B>Team &gt; 
  Pull</B> or right-click on a repository in the Git Repositories view and 
  select <B>Pull</B> to pull new changes from the upstream branch your local 
  branch is tracking. This also works if resources are selected from more than 
  one repository.</LI>
  <LI>Whenever you create a local branch based on a remote tracking branch EGit 
  can configure a tracking relationship so that subsequent pulls will fetch and 
  then merge or rebase (depending on the configuration of this tracking 
  relationship) the changes from the tracked upstream branch; see <A href="http://wiki.eclipse.org/EGit/User_Guide#Branching">Branching</A> 
  for details.</LI></UL>
<P>Ad-hoc selection of the upstream branch to pull from is not yet supported by 
EGit. </P>
<P>Available alternatives include: </P>
<UL>
  <LI>run <B>git pull</B> from outside eclipse (but <A class="external text" 
  href="http://marc.info/?l=git&amp;m=123924844219075" rel="nofollow">beware on 
  Windows</A>)</LI>
  <LI>if you did no local change or want to discard your local changes, use 
  <B>Team &gt; Reset...</B></LI></UL>
<P><BR><BR></P>
<H2><SPAN class="mw-headline" id="Working_with_Gerrit">Working with 
Gerrit</SPAN></H2>
<P>If you are working with Gerrit (<A class="external free" href="http://code.google.com/p/gerrit/" 
rel="nofollow">http://code.google.com/p/gerrit/</A>), EGit allows you to 
conveniently push and fetch changes to and from the Gerrit servers. </P>
<H3><SPAN class="mw-headline" id="Enabling_Gerrit_for_a_repository">Enabling 
Gerrit for a repository</SPAN></H3>
<P>Gerrit operation will not appear in any menus unless you configure your 
repository first. To do that, open the Git Repositories view and browse down to 
the <B>Remote</B> that represents the Git repository server you want to use and 
select <B>Gerrit Configuration...</B>. </P>
<H3><SPAN class="mw-headline" id="Pushing_a_change_to_a_Gerrit_Code_Review_Server">Pushing 
a change to a Gerrit Code Review Server</SPAN></H3>
<P>Right-click on a project and select <B>Team &gt; Remote &gt; Push to 
Gerrit...</B> or right-click on a Repository node in the Repositories View and 
select <B>Push to Gerrit...</B> </P>
<P>A dialog will appear that lets you select or enter a URI and branch name: 
</P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-PushChangeToGerritDialog.png"><IMG 
width="332" height="231" alt="Egit-3.1-PushChangeToGerritDialog.png" src="index.files/Egit-3.1-PushChangeToGerritDialog.png"></A> 
</P>
<UL>
  <LI>In the URI combo, select or enter the URI that points to your Gerrit 
  instance; the combo will be pre-filled with all URIs defined in any remote of 
  your current Repository; in addition you can type any URI into this field</LI>
  <LI>In the Gerrit Branch field, enter the name of the branch to select the 
  review queue your changes will be be pushed to</LI></UL>
<P>The dialog also offers a content assist for the Gerrit branch. Simply press 
"Ctrl+Space" to activate this (consult the tooltip that appears when hovering 
over the little bulb decorator near the Gerrit Branch field). The remote 
tracking branches for the current repository will be shown. Note that this 
content assist is filtered, so in order to see all proposals, you need to make 
sure to have the Gerrit Branch field empty before requesting the content assist. 
</P>
<P>Upon clicking <B>Finish</B>, the currently checked out commit will be pushed 
to the Gerrit branch specified. Also, the URI and Gerrit Branch values will be 
remembered and suggested again when the dialog is opened again later. </P>
<P>This allows for more flexibility when working with different Gerrit branches 
in parallel (e.g. frequently switching between development and hotfixing). </P>
<H4><SPAN class="mw-headline" id="Editing_a_change">Editing a change</SPAN></H4>
<P>When a change has been pushed to Gerrit and the reviewers suggest to make 
some improvements, a new patch set for the change has to be uploaded. First, 
edit the commit(s): </P>
<UL>
  <LI> In case you have one commit corresponding to one change, you can amend 
  the commit (see <A href="http://wiki.eclipse.org/EGit/User_Guide#Amending_Commits"> 
  Amending Commits</A>).</LI>
  <LI> In case you have multiple dependent commits and need to edit a commit 
  other than the last one, you can do an interactive rebase (see <A href="http://wiki.eclipse.org/EGit/User_Guide#Interactive_Rebase"> 
  Interactive Rebase</A>). Alternatively, check out the commit you want to edit, 
  amend it and then cherry-pick the later commits on top (this is what 
  interactive rebase does for you).</LI></UL>
<P>Then push again to the same branch. Gerrit will detect that you are updating 
existing changes and will add new patch sets. </P>
<H3><SPAN class="mw-headline" id="Fetching_a_change_from_a_Gerrit_Code_Review_Server">Fetching 
a change from a Gerrit Code Review Server</SPAN></H3>
<P>Right-click on a project and select <B>Team &gt; Remote &gt; Fetch from 
Gerrit...</B> or right-click on a Repository node in the Repositories View and 
select <B>Fetch from Gerrit...</B> </P>
<P>A dialog will appear that lets you select or enter a URI and a change as well 
as some additional options: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-FetchChangeFromGerritDialog.png"><IMG 
width="491" height="362" alt="Egit-3.1-FetchChangeFromGerritDialog.png" src="index.files/Egit-3.1-FetchChangeFromGerritDialog.png"></A> 
</P>
<UL>
  <LI>In the URI combo, select or enter the URI that points to your Gerrit 
  instance; the combo will be pre-filled with all URIs defined in any remote of 
  your current Repository; in addition you can type any URI into this field</LI>
  <LI>In the Change field, you must enter the full name of a change; you can 
  either take this value from the Gerrit Web UI, use the content assist 
  described below, or build the name using the following 
  pattern:<BR>"refs/changes/" + (last two digits from change number) + / + 
  (change number) + / + (revision number)</LI>
  <LI>In the "Actions to perform after fetch" you can decide what to do after 
  the change has been fetched; you can either create and checkout a branch 
  pointing to the change, create and checkout a tag pointing to the change, or 
  simply checkout the change (thus making HEAD detached); the last option does 
  nothing after fetch, but you will be able to find the commit pertaining to the 
  change at FETCH_HEAD (go to the Repositories View and find FETCH_HEAD under 
  the References node of your Repository, see <A href="http://wiki.eclipse.org/EGit/User_Guide#Inspecting_References"> 
  Inspecting References </A>).<BR>The name for the branch or tag is suggested by 
  the dialog but can be overwritten as needed.<BR>Since deletion of tags is 
  currently not supported in EGit, we suggest to use local branches rather than 
  tags for the time being. Since the Repositories view allows to group branches 
  hierarchically using "/" as hierarchy separator, the suggested names can come 
  in very handy when dealing with large numbers of changes.</LI></UL>
<P>Instead of the tedious copy-paste or manual entering of the change ID, the 
dialog also offers a content assist for the change. Simply press "Ctrl+Space" to 
activate this (consult the tooltip that appears when hovering over the little 
bulb decorator near the Change field). The Gerrit Server will be contacted and 
all available changes will be fetched and shown in a content assist dialog: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.11-ContentAssistGerritChange.png"><IMG 
width="837" height="430" alt="Egit-0.11-ContentAssistGerritChange.png" src="index.files/Egit-0.11-ContentAssistGerritChange.png"></A> 
</P>
<P>The list will be filtered with your input in the change field. After 
selecting the change in the content assist, the Change field will be filled with 
the correct information. </P>
<P>You can also copy the download command from the Gerrit WebUI to the clipboard 
before opening the <B>Fetch from Gerrit...</B> wizard. This will automatically 
populate the dialog with the values needed to fetch this change. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-GerritDownloadCommand.png"><IMG 
width="838" height="37" alt="Egit-3.1-GerritDownloadCommand.png" src="index.files/Egit-3.1-GerritDownloadCommand.png"></A> 
</P>
<H2><SPAN class="mw-headline" id="Working_with_Gitflow">Working with 
Gitflow</SPAN></H2>
<P>If you are using Gitflow (<A class="external free" href="http://nvie.com/posts/a-successful-git-branching-model/" 
rel="nofollow">http://nvie.com/posts/a-successful-git-branching-model/</A>), 
EGit allows you to work with Gitflow operations, managing feature, release and 
hotfix branches. </P>
<H3><SPAN class="mw-headline" id="Enabling_Gitflow_for_a_repository">Enabling 
Gitflow for a repository</SPAN></H3>
<P>Gitflow operations will not appear unless the selected repository is 
configured for Gitflow. To do that, open the context menu on a repository in the 
Git Repositories view and select <B>Init Git Flow</B>. <A class="image" href="http://wiki.eclipse.org/File:Egit-4.0-git_flow_init-repository_node_right_click.png"><IMG 
width="314" height="41" alt="Egit-4.0-git flow init-repository node right click.png" 
src="index.files/Egit-4.0-git_flow_init-repository_node_right_click.png"></A> 
</P>
<P>You can skip this step if your repository was already configured for Gitflow 
by another client. </P>
<H3><SPAN class="mw-headline" 
id="Starting_a_feature.2Frelease.2Fhotfix">Starting a 
feature/release/hotfix</SPAN></H3>
<P>Right-click on a repository, select <B>Git Flow</B>, and select the 
appropriate start command. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-4.0-git_flow-repository_node_right_click.png"><IMG 
width="314" height="45" alt="Egit-4.0-git flow-repository node right click.png" 
src="index.files/Egit-4.0-git_flow-repository_node_right_click.png"></A> <A 
class="image" href="http://wiki.eclipse.org/File:Egit-4.0-git_flow_submenu-repository_node_right_click.png"><IMG 
width="184" height="286" alt="Egit-4.0-git flow submenu-repository node right click.png" 
src="index.files/Egit-4.0-git_flow_submenu-repository_node_right_click.png"></A> 
</P>
<P>A dialog will appear that lets you enter a name for the Gitflow branch, 
adding the correct prefix automatically. </P>
<H3><SPAN class="mw-headline" id="Starting_release_from_a_commit_other_than_HEAD">Starting 
release from a commit other than HEAD</SPAN></H3>
<P>Go to the EGit History view, and right-click the commit you want to start the 
release from. In the context menu, go to <B>Git Flow</B>, and select <B>Start 
release from commit &lt;sha1&gt;</B>. <A class="image" href="http://wiki.eclipse.org/File:Egit-4.0-git_flow_start_release_from_history_view_context_menu.png"><IMG 
width="537" height="31" alt="Egit-4.0-git flow start release from history view context menu.png" 
src="index.files/Egit-4.0-git_flow_start_release_from_history_view_context_menu.png"></A> 
</P>
<H2><SPAN class="mw-headline" 
id="Inspecting_the_state_of_the_Repository">Inspecting the state of the 
Repository</SPAN></H2>
<H3><SPAN class="mw-headline" id="Label_Decorations">Label 
Decorations</SPAN></H3>
<P>Label decorations show Git-specific information about resources under Git 
version control. They appear in all views showing model objects, like Package 
Explorer, Project Explorer, Navigator, and Hierarchy View. </P>
<P>The Git label decorations can be switched on globally in the Preference Menu 
(<B>Window &gt; Preferences</B>) under <B>General &gt; Appearance &gt; Label 
Decorations</B>, and more detailed settings can be modified in Preferences under 
<B>Team &gt; Git &gt; Label Decorations</B>. </P>
<P>There are two different types of label decorations: text decorations and icon 
decorations. </P>
<H4><SPAN class="mw-headline" id="Text_Decorations">Text Decorations</SPAN></H4>
<P>Text decorations appear on the left or right side of the text label. They can 
be configured on the Preferences dialog under <B>Team &gt; Git &gt; Label 
Decorations</B> on the <B>Text Decorations</B> tab. For example, the default for 
a dirty resource is a <TT><B>&gt;</B></TT> on the left side of its name. </P>
<P>These are the default settings: </P>
<P><A class="image" 
href="http://wiki.eclipse.org/File:01-TextDecorations.png"><IMG width="419" 
height="164" alt="01-TextDecorations.png" src="index.files/01-TextDecorations.png"></A> 
</P>
<P>For files and folders there are the variables <TT>"name"</TT>, 
<TT>"dirty"</TT> and <TT>"staged"</TT>. <TT>"Dirty"</TT> and <TT>"staged"</TT> 
are flags; if they are true, the text after the colon is displayed. </P>
<P>For projects there are the additional variables <TT>"repository"</TT>, 
<TT>"branch"</TT> and <TT>"branch_status"</TT>. The <TT>"repository"</TT> 
variable displays the name of the repository. </P>
<P>The <TT>"branch"</TT> variable displays the name of the currently checked out 
branch. If no branch is checked out, the decoration shows the shortened name of 
the commit (first seven characters followed by ellipsis). If tags and/or remote 
branches are pointing to this commit, a "best guess" heuristic is applied to 
also show this information: tags take precedence over remote branches, and if 
several tags apply, the newest one is displayed. If there are several remote 
branches or tags that have no modification date, then alphabetic sorting is 
applied and the last one is shown. Example: the checked out commit 
<TT><B>e49f576...</B></TT> refers to tag <TT><B>v.0.7.1</B></TT> of repository 
<TT><B>egit</B></TT>:<BR></P>
<P><A class="image" 
href="http://wiki.eclipse.org/File:03-ExampleDecoration.png"><IMG width="342" 
height="22" alt="03-ExampleDecoration.png" src="index.files/03-ExampleDecoration.png"></A> 
</P>
<P>The <TT>"branch_status"</TT> variable shows the status of the local branch 
compared to the remote-tracking branch that is set as upstream: </P>
<UL>
  <LI> ↑N – The local branch has <I>N</I> commits that are not yet on the 
  remote-tracking branch. This can be read as "N commits to push".</LI>
  <LI> ↓M – The remote-tracking branch has <I>M</I> commits that are not on the 
  local branch. This can be read as "M commits to merge/rebase".</LI>
  <LI> ↑N↓M – The local branch and the remote-tracking branch have diverged (the 
  two above apply both).</LI>
  <LI>– Empty if the local branch and the remote-tracking branch have the same 
  state.</LI></UL>
<P>The status variable can be used with a leading space like this: <TT>{ 
branch_status}</TT>. This results in the space being added only when the status 
is not empty. </P>
<H4><SPAN class="mw-headline" id="Icon_Decorations">Icon Decorations</SPAN></H4>
<P>Icon decorations appear on the lower right corner of the icon displayed in 
front of the label. They can be configured on the Preferences dialog under 
<B>Team &gt; Git &gt; Label Decorations</B> on the tab <B>Icon Decorations</B>. 
</P>
<P>These are the default decorations: </P>
<P><A class="image" 
href="http://wiki.eclipse.org/File:02-IconDecorations.png"><IMG width="202" 
height="234" alt="02-IconDecorations.png" src="index.files/02-IconDecorations.png"></A> 
</P>
<UL>
  <LI><B>dirty (folder)</B> - At least one file below the folder is dirty; that 
  means that it has changes in the working tree that are neither in the index 
  nor in the repository.</LI>
  <LI><B>tracked</B> - The resource is known to the Git repository and hence 
  under version control.</LI>
  <LI><B>untracked</B> - The resource is not known to the Git repository and 
  will not be version controlled until it is explicitly added.</LI>
  <LI><B>ignored</B> - The resource is ignored by the Git team provider. The 
  preference settings under <B>Team &gt; Ignored Resources</B>, "derived" flag 
  and settings from <TT>.gitignore</TT> files are taken into account.</LI>
  <LI><B>dirty</B> - The resource has changes in the working tree that are 
  neither in the index nor in the repository.</LI>
  <LI><B>staged</B> - The resource has changes which have been added to the 
  index. Note that adding changes to the index is currently possible only in the 
  commit dialog via the context menu of a resource.</LI>
  <LI><B>partially-staged</B> - The resource has changes which are added to the 
  index and additional changes in the working tree that neither reached the 
  index nor have been committed to the repository. See <A href="http://wiki.eclipse.org/EGit/User_Guide#Partial_Staging">partial 
  staging from the Git Staging view</A> for how to do that.</LI>
  <LI><B>added</B> - The resource has not yet reached any commit in the 
  repository but has been freshly added to the Git repository in order to be 
  tracked in future.</LI>
  <LI><B>removed</B> - The resource is staged for removal from the Git 
  repository.</LI>
  <LI><B>conflict</B> - A merge conflict exists for the file.</LI>
  <LI><B>assume-valid</B> - The resource has the "assume unchanged" flag. This 
  means that Git stops checking the working tree files for possible 
  modifications, so you need to manually unset the bit to tell Git when you 
  change the working tree file. Also see <A href="http://wiki.eclipse.org/EGit/User_Guide#Menu_Actions">Assume 
  unchanged action</A>.</LI></UL>
<H3><SPAN class="mw-headline" id="Commit_Dialog">Commit Dialog</SPAN></H3>
<P>A summary of the status of all modified tracked files is displayed on the 
commit dialog. By double clicking a file the changes to be committed will be 
displayed in a compare dialog. As EGit currently always commits the content of 
the working tree (corresponding to git commit -a on the command line) the 
compare dialog will compare the working tree with the last commit. <BR><BR></P>
<H3><SPAN class="mw-headline" id="Comparing_Content">Comparing 
Content</SPAN></H3>
<P>In daily work you will often want to see the changes between your last 
commit, the index, and the current working tree. In order to do so, select a 
Resource (project, folder, or file) in the project explorer or navigator and 
right-click an action under <B>Compare With</B>. </P>
<P>To analyze the contents of a specific commit you should use the <A href="http://wiki.eclipse.org/EGit/User_Guide#History_View">History 
View</A> which supports this task much better, see task <A href="http://wiki.eclipse.org/EGit/User_Guide#Inspecting_Commits">Inspecting 
Commits</A>. </P>
<H4><SPAN class="mw-headline" id="Compare_editor_and_Synchronize_View">Compare 
editor and Synchronize View</SPAN></H4>
<P>If you use any of the submenu actions of <B>Compare With</B> on a single 
file, a compare editor will be shown, otherwise (since EGit 3.1) the <A href="http://wiki.eclipse.org/EGit/User_Guide#Synchronize_View">Synchronize 
View</A> will be opened that lets you browse the changes; by double-clicking on 
a changed file in this view, a compare editor will be opened for this file. In 
the toolbar of the Synchronize View you can select the Sychronize Model you want 
to use for presenting the changes you are inspecting. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-SynchronizeSwitchModel.png"><IMG 
width="304" height="153" alt="Egit-3.1-SynchronizeSwitchModel.png" src="index.files/Egit-3.1-SynchronizeSwitchModel.png"></A> 
</P>
<H4><SPAN class="mw-headline" id="Compare_working_tree_with_last_commit">Compare 
working tree with last commit</SPAN></H4>
<P>The difference between a resource in the current working directory and in the 
last commit in the current branch can be viewed from the context menu <B>Compare 
With &gt; HEAD revision</B>. This feature is also available in the Commit 
dialog. Double clicking on an entry in the Commit dialog opens a compare dialog. 
</P>
<H4><SPAN class="mw-headline" id="Comparing_Working_Tree_with_Index">Comparing 
Working Tree with Index</SPAN></H4>
<P>The differences between the current working tree and the index (based on the 
currently selected resource) can be viewed from the context menu <B>Compare With 
&gt; Git Index</B>. </P>
<H4><SPAN class="mw-headline" id="Comparing_Working_Tree_with_a_branch.2C_a_tag_or_a_reference">Comparing 
Working Tree with a branch, a tag or a reference</SPAN></H4>
<UL>
  <LI>Select a resource</LI>
  <LI>right-click <B>Compare With &gt; Branch, Tag, or Reference...</B></LI>
  <LI>select a branch, tag or reference</LI></UL>
<H4><SPAN class="mw-headline" 
id="Comparing_Working_Tree_with_Any_Commit">Comparing Working Tree with Any 
Commit</SPAN></H4>
<H5><SPAN class="mw-headline" id="From_the_project_explorer:">From the project 
explorer:</SPAN></H5>
<UL>
  <LI>Select a resource</LI>
  <LI>right-click <B>Compare With &gt; Commit...</B></LI>
  <LI>select a commit from the commit graph</LI></UL>
<H5><SPAN class="mw-headline" id="From_the_history_view_.28files_only.29:">From 
the history view (files only):</SPAN></H5>
<UL>
  <LI>Select a file in the package explorer</LI>
  <LI>right-click <B>Team &gt; Show in History</B> or <B>Compare With &gt; 
  History...</B></LI>
  <LI>in the commit graph select a commit</LI>
  <LI>from the context menu select <B>Compare with working tree</B></LI>
  <LI>this will open a compare dialog showing the changes between the selected 
  commit and the current working tree</LI></UL>
<H4><SPAN class="mw-headline" id="Comparing_Two_Commits">Comparing Two 
Commits</SPAN></H4>
<UL>
  <LI>Select a resource in the Package Explorer</LI>
  <LI>click <B>Team &gt; Show in History</B> or <B>Compare With &gt; 
  History...</B> (the latter for files only)</LI>
  <LI>in the commit graph select two commits</LI>
  <LI>right-click <B>Compare with each other</B></LI>
  <LI>this will open a compare dialog showing the changes between the two 
  selected commits</LI>
  <LI>you can also open a Git Tree Compare view by right-clicking <B>Compare 
  with each other in Tree</B></LI></UL>
<H4><SPAN class="mw-headline" 
id="Comparing_Index_with_HEAD_or_Any_Other_Commit">Comparing Index with HEAD or 
Any Other Commit</SPAN></H4>
<P>You can compare Index with HEAD using the Staging View. Double click a file 
displayed in the "Staged Changes" pane to compare its Index version against the 
HEAD version. Comparison between Index and another commit isn't implemented yet. 
</P>
<P><BR></P>
<H3><SPAN class="mw-headline" 
id="Comparing_with_Branches_.28Synchronize.29">Comparing with Branches 
(Synchronize)</SPAN></H3>
<P>The difference between the working tree (including not committed changes) and 
a branch or tag can be viewed (since EGit 3.1) by selecting the project(s) you 
want to compare and clicking <B>Compare With &gt; Branch, Tag or Reference</B>. 
The result is filtered for the resources you selected before starting the 
comparison. </P>
<P>You can also compare with a branch by clicking the dynamic menu <B>Team &gt; 
Synchronize</B> on a project and selecting the <I>Ref</I> you want to 
synchronize your working tree against. If the Git repository contains multiple 
Eclipse projects it is sufficient to select one project, the <B>Synchronization 
View</B> will also include all other projects. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-1.0-synchronize-dynamic.png"><IMG 
width="431" height="397" alt="Egit-1.0-synchronize-dynamic.png" src="index.files/Egit-1.0-synchronize-dynamic.png"></A> 
</P>
<P>If you want to synchronize with a Ref not listed in the dynamic menu click 
<B>Team &gt; Synchronize &gt; Other...</B>. Then in the Synchronize Wizard click 
into the destination column of the repository you want to synchronize and select 
the Ref you want to compare against. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-1.0-synchronize-custom.png"><IMG 
width="379" height="322" alt="Egit-1.0-synchronize-custom.png" src="index.files/Egit-1.0-synchronize-custom.png"></A> 
</P>
<P>When clicking "Include local uncommitted changes in comparison" also local, 
not yet staged changes and the already staged changes will be shown in 
comparison. </P>
<P>It is also possible to compare multiple repositories at once. In this case in 
the Synchronize Wizard select for each repository the Ref you want to compare 
against. </P>
<H3><SPAN class="mw-headline" id="Quickdiff">Quickdiff</SPAN></H3>
<P>Instead of using a compare editor you can enable quick diff support and see 
the changes within the text editor. <BR>This feature can be enabled via the 
<B>General &gt; Editors &gt; Text Editors &gt; Quick Diff</B> preference page: 
</P>
<P><A class="image" href="http://wiki.eclipse.org/File:04-QuickDiffPreferences.png"><IMG 
width="466" height="269" alt="04-QuickDiffPreferences.png" src="index.files/04-QuickDiffPreferences.png"></A> 
</P>
<P>The difference annotation will then be displayed on the left hand side of the 
editor: </P>
<P><A class="image" 
href="http://wiki.eclipse.org/File:05-QuickDiffInEditor.png"><IMG width="416" 
height="86" alt="05-QuickDiffInEditor.png" src="index.files/05-QuickDiffInEditor.png"></A> 
</P>
<P>If you move your mouse over the annotation you see the content of the version 
you are comparing to: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:06-QuickDiffInEditorPopup.png"><IMG 
width="291" height="56" alt="06-QuickDiffInEditorPopup.png" src="index.files/06-QuickDiffInEditorPopup.png"></A> 
</P>
<P>Per default, the comparison is against the HEAD. You can determine the 
version you are comparing to, the so-called quickdiff baseline, from the context 
menu of a commit in the history view (<B>Show in &gt; History</B>). There are 
three menu entries: </P>
<UL>
  <LI><B>Quick Diff -&gt; Reset baseline to first parent of HEAD</B> - Compare 
  against the first commit before HEAD.</LI>
  <LI><B>Quick Diff -&gt; Reset baseline to HEAD</B> - Compare against 
HEAD.</LI>
  <LI><B>Quick Diff -&gt; Set as baseline</B> - Compare against the selected 
  commit</LI></UL>
<P><BR></P>
<H3><SPAN class="mw-headline" id="Inspecting_Commits">Inspecting 
Commits</SPAN></H3>
<P>To inspect a given commit </P>
<UL>
  <LI>from the context menu in package explorer select <B>Team &gt; Show in 
  History</B></LI>
  <LI>select the commit you want to inspect</LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-ViewDiffInHistory.png"><IMG 
width="834" height="441" alt="Egit-3.1-ViewDiffInHistory.png" src="index.files/Egit-3.1-ViewDiffInHistory.png"></A> 
</P>
<H4><SPAN class="mw-headline" id="View_Diff_for_a_Commit">View Diff for a 
Commit</SPAN></H4>
<P>The history view displays the diff in the lower left pane. Selecting a file 
in the lower right pane shows the diff for this file. </P>
<H4><SPAN class="mw-headline" id="Showing_the_contents_of_a_Commit">Showing the 
contents of a Commit</SPAN></H4>
<P>The behavior of a double click on a file in the lower right pane depends on 
the state of the compare mode toggle button. If it's on, a compare editor will 
be opened which compares the file content in the current commit with the content 
in the ancestor commit; if it's off, an editor will be opened showing the file 
content in the current commit. </P>
<H2><SPAN class="mw-headline" id="Committing_Changes">Committing 
Changes</SPAN></H2>
<P>Modifications to a project under git version control are persisted in the git 
history through commits. Starting from the state checked out from the git 
repository modify your project until you have reached a state you are satisfied 
with and then commit all these changes into the repository as one single commit. 
Each commit represents a well defined snapshot of all the files stored in the 
repository. </P>
<H3><SPAN class="mw-headline" id="Modifying_the_content">Modifying the 
content</SPAN></H3>
<P>To modify a project which is already shared with Git modify or delete files 
either within Eclipse or directly in the file system. There is no need to tell 
Git in advance about these operations. New files which should be 
version-controlled have to be explicitly put under Git version control&nbsp;: 
</P>
<UL>
  <LI> click <B>Team &gt; Add</B> in the file's context menu</LI></UL>
<P>Alternatively you may display untracked files in the Commit dialog and check 
the <B>Show untracked Files</B> checkbox to select them for inclusion into the 
commit. </P>
<P>Label decorators, e.g. in the Package Explorer View, show&nbsp;: </P>
<UL>
  <LI> untracked files which are not yet under git version control (marked with 
  "?")</LI>
  <LI> files which have been added (marked with "+")</LI>
  <LI> modified files (marked with "&gt;" in front of the filename)</LI></UL>
<P>For details see <A href="http://wiki.eclipse.org/EGit/User_Guide#Label_Decorations">Label 
Decorations</A>. </P>
<P>Here is an example in the Package Explorer for&nbsp;: </P>
<UL>
  <LI> a committed file</LI>
  <LI> a file modified in the working tree but not yet staged for the next 
  commit</LI>
  <LI> a modified file which modifications have been staged for the next 
  commit</LI>
  <LI> a file which has been newly staged for first-time inclusion with the next 
  commit</LI>
  <LI> a file which is not under git version control</LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-label-decorators.png"><IMG 
width="268" height="144" alt="Egit-0.9-label-decorators.png" src="index.files/Egit-0.9-label-decorators.png"></A> 
</P>
<H3><SPAN class="mw-headline" id="Committing">Committing</SPAN></H3>
<H4><SPAN class="mw-headline" id="Committing_with_the_Staging_View">Committing 
with the Staging View</SPAN></H4>
<P>The preferred way to create commits with EGit is the <A href="http://wiki.eclipse.org/EGit/User_Guide#Git_Staging_View">Staging 
View</A> since it always shows the current git status for the selected 
repository and allows to stage (add to git index) and unstage (remove from git 
index) modified files. Double click a file in the <B>Unstaged Changes</B> pane 
to compare it against the git index, double click a file in the <B>Staged 
Changes</B> pane to compare it's index version against HEAD. In the Staging View 
you can edit the commit message incrementally since it's a view and not a modal 
editor. </P>
<P><A class="image" 
href="http://wiki.eclipse.org/File:Egit-3.1-StagingView.png"><IMG width="748" 
height="269" alt="Egit-3.1-StagingView.png" src="index.files/Egit-3.1-StagingView.png"></A> 
</P>
<H4><SPAN class="mw-headline" id="Committing_using_Commit_Dialog">Committing 
using Commit Dialog</SPAN></H4>
<P>To commit a change click <B>Team &gt; Commit...</B> in the context menu of a 
resource in the project. </P>
<P>Git tracks all changes made to the entire repository capturing the 
modifications of all version-controlled files in that repository not regarding 
if these files reside in the same Eclipse project or not. </P>
<P>Once you have triggered the commit the <B>Commit Dialog</B> will pop-up </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-commit-dialog.png"><IMG 
width="535" height="528" alt="Egit-0.9-commit-dialog.png" src="index.files/Egit-0.9-commit-dialog.png"></A> 
</P>
<P>Select the changes you want to commit, enter the commit message and to create 
the commit, press <B>Ctrl+Enter</B> (<B>Command+Enter</B> on Mac OS X) in the 
commit message text field, or click <B>Commit</B>. </P>
<P><BR></P>
<H4><SPAN class="mw-headline" id="Commit_Message">Commit Message</SPAN></H4>
<P>In the Staging View or Commit Dialog you specify the commit message 
describing the change. </P>
<P>It is good practice to start the message with a short first line summarizing 
the change followed by a blank line and then the message body. In order to 
ensure that also git command line tools can format these messages nicely the 
lines shouldn't be formatted too wide (this is indicated by a grey vertical 
line). </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-commit-dialog-spell-quickfix.png"><IMG 
width="320" height="127" alt="Egit-0.9-commit-dialog-spell-quickfix.png" src="index.files/Egit-0.9-commit-dialog-spell-quickfix.png"></A> 
</P>
<P>The commit message text is checked for errors by the Eclipse spell checker. 
The spell checker can be configured via the Eclipse <B>Preferences &gt; General 
&gt; Editors &gt; Text Editors &gt; Spelling</B>. Press <B>Ctrl+1</B> to open 
quick fixes which may help to fix the spelling errors. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-1.2-commit-dialog-path-assist.png"><IMG 
width="174" height="164" alt="Egit-1.2-commit-dialog-path-assist.png" src="index.files/Egit-1.2-commit-dialog-path-assist.png"></A> 
</P>
<P>The commit message editor supports content assist for file names shown in 
Files section of the commit dialog, which can be activated pressing Ctrl+Space. 
</P>
<DIV id="Footer_Tags"></DIV>
<P><B>Footer Tags</B> <BR>In the last paragraph of the commit message (i.e. 
after the last blank line), optional footer tags may follow: </P>
<PRE style="width: 40em;">Bug: 3176
Change-Id: I267b97ecccb5251cec54cec90207e075ab50503e
Reported-by: Joe Developer &lt;joe@dev.org&gt;
Signed-off-by: William Shakespeare &lt;will.from@the.past&gt;
</PRE>
<P>The semantics of these tags are project or tool specific </P>
<UL>
  <LI> If there is an entry in a bug tracking system for the change to be 
  committed it is a good idea to add it here as a bug tag</LI>
  <LI><A class="external text" href="http://code.google.com/p/gerrit/" rel="nofollow">Gerrit 
  Code Review</A> uses the <I>Change-Id:</I> footer to correlate different 
  patchsets of a change evolving during the review process towards the finally 
  accepted patch. To generate a Gerrit Change-Id click <B>Compute Change-Id for 
  Gerrit Code Review</B>; the ID will be generated on commit, until then a null 
  Change-Id is shown as a placeholder. With the EGit configuration parameter 
  <B>gerrit.createchangeid</B> set to true the corresponding checkbox in the 
  Commit Dialog is always preselected. This parameter can be set on repository 
  level, on system level or on user level. See <A class="external text" href="http://wiki.eclipse.org/EGit/User_Guide#Repository_Configuration" 
  rel="nofollow">Repository Configuration</A> for more information.</LI>
  <LI> The <I>Signed-off-by:</I> footer is used by many projects to create a 
  formal track record of declarations that the signing author contributed the 
  changes under the project's license and IP rules. This way the IP provenance 
  of a project's evolving code base can be captured on a technical level. See 
  e.g. the <A class="external text" href="http://elinux.org/Developer_Certificate_Of_Origin" 
  rel="nofollow">Developer Certificate Of Origin</A> used by the Linux kernel 
  project. If the EGit preference <B>Insert Signed-off-by</B> in <B>Team &gt; 
  Git &gt; Commit Dialog</B> is set the corresponding checkbox in the Commit 
  Dialog is always preselected.</LI></UL>
<P><B>Selecting changes to commit</B> </P>
<UL>
  <LI> When you click <B>Commit</B> in the <B>Staging View</B> only staged 
  changes will be committed. The native git command line works in the same way. 
  All unstaged changes will stay untouched and remain in your working directory. 
  This feature is often used to separate modifications done to a set of files 
  into different commits.</LI>
  <LI> When you click <B>Commit</B> in the <B>Commit Dialog</B> you can use the 
  checkbox in front of each file to decide if you want to include its changes 
  into the new commit. If you clear the checkbox in front of a file, the changes 
  to this file will not be included in the commit. The local file in your 
  eclipse workspace will still contain the modifications giving you the chance 
  to commit these changes with a subsequent commit. </LI></UL>
<P><B>One example:</B> Imagine since the last commit you have fixed a bug in 
A.java and you have added a new method to B.java. These two modifications are 
logically independent from each other hence you may want to commit them in two 
independent commits. In this case you initate the commit, deselect B.java from 
the set of committed files and specify a commit message describing only the 
bugfix in A.java. After a successful first commit you just call commit again and 
the upcoming dialog will present you the remaining changes in B.java. Now you 
specify a commit message describing the addition of the method and finish the 
second commit. </P>
<P>In the Commit Dialog new files you added to the project which have not been 
explicitly added to version control (see "Modifying the content") will be listed 
in the commit dialog if you select the checkbox "Show untracked Files". If you 
select the checkbox in front of these files in the list they will be added to 
the repository and committed once you press the commit button. Files which are 
excluded by a <TT>.gitignore</TT> file will not be shown here. If you have no 
other changes in your repository than such untracked files the checkbox <B>Show 
untracked Files</B> is selected by default. </P>
<H4><SPAN class="mw-headline" id="Amending_Commits">Amending Commits</SPAN></H4>
<P>If you recognize that you missed something when committing a change you may 
fix this: open the staging view or commit dialog again and specify that the 
current commit shall "amend" the previous commit in the current branch. The new 
commit will then replace the previous one. This feature is often used to correct 
incorrect commits before they are published to other repositories. </P>
<P><B>Note:</B> do not amend commits if they have already been published to a 
shared repository since this may disturb others if they already based their 
changes on the published change. </P>
<P><B>Amend example:</B> <BR>Imagine you have committed a change to a file 
containing a typo </P>
<P><A class="image" href="http://wiki.eclipse.org/File:EGit-Typo.png"><IMG 
width="568" height="284" alt="EGit-Typo.png" 
src="index.files/EGit-Typo.png"></A> </P>
<P>After committing the change you detect a typo. In order to correct this typo 
and the corresponding commit you just fix the typo in the source file </P>
<P><A class="image" href="http://wiki.eclipse.org/File:EGit-Corrected.png"><IMG 
width="569" height="280" alt="EGit-Corrected.png" src="index.files/EGit-Corrected.png"></A> 
</P>
<P>Then open the Staging View or Commit Dialog again and select the <B>Amend 
Previous Commit</B> icon in the toolbar. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:EGit_Amend_Commit_Button.png"><IMG 
width="507" height="323" alt="EGit Amend Commit Button.png" src="index.files/EGit_Amend_Commit_Button.png"></A> 
</P>
<P>The commit message of your previous commit (the one you want to replace) is 
then filled into the "Commit Message" field. This gives you the chance not only 
to correct errors in the content of the version-controlled files but to also 
correct errors (e.g. typos) in the commit message describing your change. </P>
<P>As an alternative to amending you could just commit the corrected version as 
a subsequent commit. But the first commit containing the typo is of no use to 
anybody and in order not to clutter the history of your project with unneeded 
commits you should amend the commit. </P>
<P>Be aware that amending commits which are already published to other 
repositories may cause trouble. Once you have pushed a commit to a remote 
repository or your local repository was cloned by somebody else, you should be 
very careful with amending commits. In this case publishing a second commit 
which corrects the first one is probably a better solution. Otherwise inform all 
others that you amended a published commit so that they can react accordingly. 
</P>
<H2><SPAN class="mw-headline" id="Reverting_Changes">Reverting 
Changes</SPAN></H2>
<H3><SPAN class="mw-headline" 
id="Reverting_changes_in_the_working_tree">Reverting changes in the working 
tree</SPAN></H3>
<H4><SPAN class="mw-headline" id="Replace_with_File_in_Git_Index">Replace with 
File in Git Index</SPAN></H4>
<P>Changes which are not yet committed and not yet staged can be reverted for a 
set of selected files. Select the file(s) in the Package Explorer or an 
analogous view and click <B>Replace With &gt; File in Git Index</B>. </P>
<H4><SPAN class="mw-headline" id="Replace_with_HEAD">Replace with 
HEAD</SPAN></H4>
<P>Click <B>Replace With &gt; HEAD</B> to replace the selected files with their 
HEAD version. You can also use <B>Reset to</B> with option <B>hard</B> to 
forcefully reset the entire working tree of your repository back to the state of 
the HEAD commit (See "Resetting your current HEAD" below). This operation will 
revert all changes in the working tree and the index. </P>
<H4><SPAN class="mw-headline" 
id="Replace_with_Branch.2C_Tag_or_Reference">Replace with Branch, Tag or 
Reference</SPAN></H4>
<P>Click <B>Replace With &gt; Branch, Tag or Reference</B> to replace the 
selected files with their version corresponding to a branch, tag or reference. 
</P>
<H4><SPAN class="mw-headline" id="Replace_with_Commit">Replace with 
Commit</SPAN></H4>
<P>Click <B>Replace With &gt; Commit</B> to replace the selected files with 
their version corresponding to a selected commit. </P>
<H4><SPAN class="mw-headline" id="Replace_with_Previous_Revision">Replace with 
Previous Revision</SPAN></H4>
<P>Changes that are already staged or even committed can be "reverted" by 
replacing them with a version from the previous commit. Select a single resource 
in the Package Explorer or an analogous view and click <B>Replace With &gt; 
Previous Revision</B>. The repository will determine the last commit that 
modified the selected resource and offer to replace the workspace resource with 
the contents of this commit. </P>
<P>This is mainly intended for "removing" single files from a commit (when 
committing the reverted workspace resources, they are effectively removed from 
the current commit). Even though this also works on folders and projects, the 
results of replacing a folder or project with a "previous revision" may be 
unexpected. </P>
<H3><SPAN class="mw-headline" id="Revert_using_quickdiff">Revert using 
quickdiff</SPAN></H3>
<P>The quickdiff feature can be used to revert individual changes to a file. You 
can revert by line, block (se range of changes lines) or selection. Select all 
text and then <B>Revert selection</B> to revert a whole file. </P>
<H3><SPAN class="mw-headline" id="Reverting_changes_introduced_by_a_specific_commit">Reverting 
changes introduced by a specific commit</SPAN></H3>
<P>Changes which are introduced by a given commit can be reverted by an 
automatically created new commit on top of the currently checked out commit. The 
commit which is to be reverted does not have to be checked out for that. </P>
<P>Select the commit in the History View, open the context menu and select 
<B>Revert Commit</B>. This reverts the changes that the selected commit 
introduces by creating a new commit on top of the currently checked out commit. 
</P>
<H3><SPAN class="mw-headline" id="Resetting_your_current_HEAD">Resetting your 
current HEAD</SPAN></H3>
<P>Git offers the possibility to reset the HEAD of the current branch to any 
other commit. It optionally resets the index and the working tree to match that 
commit. Note that this action affects all files and folders in the entire 
repository. </P>
<P>You have the option to do a hard reset, a mixed reset and a soft reset. </P>
<UL>
  <LI><B>soft</B> -  the HEAD points now to the new commit, the index and the 
  working tree are unchanged</LI>
  <LI><B>mixed</B> -  the HEAD points now to the new commit, the index is 
  updated, the working tree is unchanged</LI>
  <LI><B>hard</B> - the HEAD points now to the new commit, the index and the 
  working tree are updated</LI></UL>
<H4><SPAN class="mw-headline" id="Reset_to_specific_branch_or_tag">Reset to 
specific branch or tag</SPAN></H4>
<P>Select <B>Team -&gt; Reset...</B> on a project. This opens a dialog where you 
can select a branch or a tag. </P>
<H4><SPAN class="mw-headline" id="Reset_to_a_specific_commit">Reset to a 
specific commit</SPAN></H4>
<P>Select a commit in the History view and open the context menu.  Here you find 
the entries <B>Hard reset</B>, <B>Mixed reset</B> and <B>Soft reset</B>. </P>
<H4><SPAN class="mw-headline" id="Revert_all_local_and_staged_changes">Revert 
all local and staged changes</SPAN></H4>
<P>This can be done using a hard reset. If you reset to the current HEAD 
(normally the last commit on your branch) with the option <B>hard</B> you reset 
the currently checked out branch to this commit and overwrite the working tree 
and the index with the content of HEAD. You can do this in three ways: </P>
<UL>
  <LI> Select <B>Team &gt; Reset...</B> on a project. In the dialog select HEAD 
  or your current branch and switch the radio button to <B>hard</B>.</LI>
  <LI> Right click and select <B>Reset...</B> on any branch or tag in the 
  Repositories view. This opens a dialog which lets you decide on the reset 
  type. Choose <B>hard</B> here.</LI>
  <LI> Open the context menu on the HEAD commit in the history view and select 
  <B>Hard Reset</B>.</LI></UL>
<P><BR></P>
<H2><SPAN class="mw-headline" id="Branching">Branching</SPAN></H2>
<H3><SPAN class="mw-headline" id="General_remarks_about_branches">General 
remarks about branches</SPAN></H3>
<P>Committing changes to a local repository is impractical without using a local 
branch (see concepts section above). Furthermore, by using several different 
branches, it is possible to work on different changes in parallel by switching 
among these branches. </P>
<P>Thus, before starting to change the local repository, the first step is 
typically to create a local branch. Local branches are "based upon" either a 
commit or a remote tracking branch. </P>
<P>The second option is recommended when working with remote repositories, as it 
simplifies the task of synchronizing the local changes with the remote ones by 
adding so-called "upstream configuration" to the new local branch. </P>
<P>See <A 
href="http://wiki.eclipse.org/EGit/User_Guide#Branch_Creation_Dialog">Branch 
Creation dialog</A> for more details. </P>
<H4><SPAN class="mw-headline" id="Upstream_configuration">Upstream 
configuration</SPAN></H4>
<P>Each local branch which is based on a local tracking branch can have some 
additional configuration indicating the remote repository, the remote branch, 
and the so-called pull strategy. See <A href="http://wiki.eclipse.org/EGit/User_Guide#Branch_Creation_Dialog">Branch 
Creation dialog</A> for more details. </P>
<P>Typically, this configuration is created automatically when creating the 
local branch based on a remote tracking branch. However, it can be displayed and 
edited in the <A href="http://wiki.eclipse.org/EGit/User_Guide#Repository_Configuration">repository 
configuration</A> or by clicking <B>Show In &gt; Properties</B> on a branch in 
the Repositories View. </P>
<H3><SPAN class="mw-headline" id="Checking_out_an_existing_Branch">Checking out 
an existing Branch</SPAN></H3>
<H4><SPAN class="mw-headline" id="From_the_team_menu_on_a_project_node:">From 
the team menu on a project node:</SPAN></H4>
<UL>
  <LI>Select <B>Team &gt; Switch To...</B> and select a branch name from the 
  list</LI></UL>
<P>If there are too many branches the list does not show all of them. In this 
case </P>
<UL>
  <LI> Select <B>Team &gt; Switch To... &gt; Other...</B></LI>
  <LI>On the dialog, select a branch, a tag or a Reference</LI>
  <LI>Click <B>Ok</B></LI></UL>
<H4><SPAN class="mw-headline" id="From_the_Git_Repositories_View">From the Git 
Repositories View</SPAN></H4>
<UL>
  <LI>click <B>Checkout</B> on a branch node</LI>
  <LI>or double click a branch node</LI></UL>
<H4><SPAN class="mw-headline" id="From_the_History_View">From the History 
View</SPAN></H4>
<UL>
  <LI>Click <B>Checkout</B> on a commit which has a branch label</LI>
  <LI>If more than one branch point to the commit a dialog will let you decide 
  which branch to check out.</LI></UL>
<H3><SPAN class="mw-headline" id="Creating_a_New_Local_Branch">Creating a New 
Local Branch</SPAN></H3>
<P>This is always done with the <A href="http://wiki.eclipse.org/EGit/User_Guide#Branch_Creation_Dialog">Branch 
Creation dialog</A>. The newly created branch can optionally be checked out by 
selecting a check box on the dialog. </P>
<H4><SPAN class="mw-headline" id="From_the_team_menu">From the team 
menu</SPAN></H4>
<UL>
  <LI>Select <B>Team &gt; Switch To... &gt; New Branch...</B>.</LI>
  <LI>On the dialog, select a branch, a tag or a Reference.</LI>
  <LI>Click <B>Create Branch...</B>.</LI>
  <LI>The <A href="http://wiki.eclipse.org/EGit/User_Guide#Branch_Creation_Dialog">Branch 
  Creation dialog</A> will be opened.</LI></UL>
<H4><SPAN class="mw-headline" id="From_the_Repositories_View">From the 
Repositories View</SPAN></H4>
<UL>
  <LI>Select <B>Create Branch...</B> on the "Branches" node or on any "Branch", 
  "Tag" or "References" node.</LI>
  <LI>The <A href="http://wiki.eclipse.org/EGit/User_Guide#Branch_Creation_Dialog">Branch 
  Creation dialog</A> will be opened.</LI></UL>
<H4><SPAN class="mw-headline" id="From_the_History_View_2">From the History 
View</SPAN></H4>
<UL>
  <LI>Select <B>Create Branch...</B></LI>
  <LI>The <A href="http://wiki.eclipse.org/EGit/User_Guide#Branch_Creation_Dialog">Branch 
  Creation dialog</A> will be opened</LI></UL>
<H3><SPAN class="mw-headline" id="Renaming_an_Existing_Branch">Renaming an 
Existing Branch</SPAN></H3>
<H4><SPAN class="mw-headline" id="From_the_Team_menu_on_a_Project_node">From the 
Team menu on a Project node</SPAN></H4>
<UL>
  <LI> Select <B>Team &gt; Advanced &gt; Rename Branch...</B></LI>
  <LI> On the branch selection dialog, select the branch to rename</LI>
  <LI> Enter the new branch name and click <B>OK</B></LI></UL>
<H4><SPAN class="mw-headline" id="From_the_Repositories_View_2">From the 
Repositories View</SPAN></H4>
<UL>
  <LI>Open the Git Repositories View</LI>
  <LI>Select <B>Rename Branch...</B> or press F2 on the branch you want to 
  rename</LI>
  <LI>Enter the new branch name and click <B>OK</B></LI></UL>
<H4><SPAN class="mw-headline" id="From_the_History_View_3">From the History 
View</SPAN></H4>
<UL>
  <LI> Select <B>Rename Branch...</B> on a commit with a branch label</LI>
  <LI> Enter the new branch name and click <B>Ok</B></LI></UL>
<H3><SPAN class="mw-headline" id="Deleting_a_Branch">Deleting a 
Branch</SPAN></H3>
<P>All the actions below show the same behavior with respect to the following: 
</P>
<UL>
  <LI>The currently checked out branch can not be deleted</LI>
  <LI>If deletion of the branch may result in data loss, a warning is displayed 
  that must be confirmed 
  <UL>
    <LI> EGit assumes a potential data loss if the branch points to a commit 
    that is not reachable from the currently checked out commit</LI></UL></LI></UL>
<H4><SPAN class="mw-headline" id="From_the_Team_Menu_on_a_Project_node_2">From 
the Team Menu on a Project node</SPAN></H4>
<UL>
  <LI>Select <B>Team &gt; Advanced &gt; Delete Branch...</B></LI>
  <LI>Select the branch to delete from the dialog being displayed and press 
  <B>Ok</B></LI></UL>
<H4><SPAN class="mw-headline" id="From_the_Repositories_View_3">From the 
Repositories View</SPAN></H4>
<UL>
  <LI>Open the Git Repositories View</LI>
  <LI>Select <B>Delete Branch</B> on the branch you want to delete</LI></UL>
<H4><SPAN class="mw-headline" id="From_the_History_View_4">From the History 
View</SPAN></H4>
<UL>
  <LI>Select <B>Delete Branch</B> on a commit with a branch label</LI>
  <LI>If multiple branches point to the commit, a selection dialog will be shown 
  on which you can select the branches to delete</LI></UL>
<H3><SPAN class="mw-headline" id="Branch_Creation_Dialog">Branch Creation 
Dialog</SPAN></H3>
<P>There are several actions available to create a local branch. All these 
actions use the Branch Creation dialog: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.5-CreateBranchDialog.png"><IMG 
width="526" height="416" alt="Egit-3.5-CreateBranchDialog.png" src="index.files/Egit-3.5-CreateBranchDialog.png"></A> 
</P>
<P>Enter the name of the local branch you want to create. If a source branch is 
selected which is a remote tracking branch EGit will suggest to create the new 
local branch with the same name. </P>
<P>Click <B>Select...</B> to select the source branch the new branch shall be 
based on. Typically, this is a remote tracking branch, but it could be any 
branch or commit in the repository (selecting a local branch is not recommended 
if you are working with a remote repository). If you want to base the new branch 
on a commit no branch is referring to then click <B>Create Branch...</B> from 
the commit shown in the History View. </P>
<P>When a source branch is selected you can configure the "upstream 
configuration" of the new branch which is helpful when fetching and pushing, but 
particularly when pulling. Depending on the selected option the following 
configuration can be chosen: </P>
<UL>
  <LI>"Merge upstream commits into local branch": When pulling, the changes will 
  be fetched from upstream and the remote tracking branch will be updated. Then 
  the current local branch will be merged with the new changes. This is the 
  default if the new branch is based on a remote tracking branch (but this 
  default may be overridden by specific repository configuration)</LI>
  <LI>"Rebase commits of local branch onto upstream": When pulling, new changes 
  will be fetched from upstream and the remote tracking branch will be updated. 
  Then the current local branch will be rebased onto the updated remote tracking 
  branch</LI>
  <LI>if you uncheck the option "Configure upstream for push and pull"): When 
  pulling, no specific upstream configuration will be done for the new branch; 
  however, if a default remote exists (a remote with name "origin", pull will 
  try to use the configuration of this remote; this is the default if the new 
  branch is not based on a remote tracking branch</LI></UL>
<P>You may view and edit the upstream configuration in the <A href="http://wiki.eclipse.org/EGit/User_Guide#Repository_Configuration">repository 
configuration</A> or by selecting <B>Show In &gt; Properties</B> on a branch in 
the Repositories View. </P>
<P>EGit also supports the git configuration parameter 
<CODE>branch.autosetuprebase</CODE>, set it to <CODE>always</CODE> if you want 
to use the rebase pull strategy by default. If you set this in the repository 
configuration this is used for all local branches created based on a remote 
tracking branch in this repository, if you set it in your user configuration it 
will be used for all your repositories. </P>
<P>In the lower part, you can decide whether the new branch shall be checked out 
immediately. </P>
<H3><SPAN class="mw-headline" id="Configure_Branch_Dialog">Configure Branch 
Dialog</SPAN></H3>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.5-ConfigureBranchDialog.png"><IMG 
width="528" height="247" alt="Egit-3.5-ConfigureBranchDialog.png" src="index.files/Egit-3.5-ConfigureBranchDialog.png"></A> 
</P>
<P>Click <B>Configure Branch...</B> on a branch in the Repositories View in 
order to change the upstream configuration of a local branch. Select which 
remote ("." means the local repository) and branch the selected local branch 
should track. Check "Rebase" if you want pull to rebase the local branch onto 
new changes arriving for the tracked branch, otherwise pull will merge new 
changes arriving for the tracked branch. </P>
<H2><SPAN class="mw-headline" id="Merging">Merging</SPAN></H2>
<P>A merge incorporates changes from another branch or tag, since the time their 
histories diverged from the current branch, into the currently checked out 
branch. </P>
<H3><SPAN class="mw-headline" id="Merging_a_branch_or_a_tag_into_the_current_branch">Merging 
a branch or a tag into the current branch</SPAN></H3>
<P>You can trigger merge from: </P>
<UL>
  <LI> the History View</LI>
  <LI> the Team menu</LI>
  <LI> the Git Repositories View</LI></UL>
<H4><SPAN class="mw-headline" id="Starting_merge_from_the_History_View">Starting 
merge from the History View</SPAN></H4>
<P>This is the recommended view to start a merge since it shows you the history 
of your repository. Ensure that the toggle buttons <B>Show all changes in 
repository</B> and <B>Show all Branches and Tags</B> are selected in the History 
View's toolbar. This ensures that you see the complete history of your 
repository in order to decide which branch you want to merge. Select the commit 
with the branch or tag label you want to merge and click <B>Merge</B>. </P>
<H4><SPAN class="mw-headline" id="Starting_merge_from_the_Team_menu">Starting 
merge from the Team menu</SPAN></H4>
<P>In the Package Explorer or Navigator, open the context menu on a project 
node. Select <B>Team &gt; Merge...</B> </P>
<P>Now the merge dialog opens: </P>
<P><A class="image" 
href="http://wiki.eclipse.org/File:Egit-3.1-MergeDialog.png"><IMG width="472" 
height="431" alt="Egit-3.1-MergeDialog.png" src="index.files/Egit-3.1-MergeDialog.png"></A> 
</P>
<P>On the dialog, select a branch or a tag you want to merge with your current 
branch. This dialog also allows you to select merge squash and fast-forward 
options. </P>
<H4><SPAN class="mw-headline" 
id="Starting_merge_from_the_Git_Repositories_View">Starting merge from the Git 
Repositories View</SPAN></H4>
<P>You can trigger a merge from any branch and tag node and from the repository 
node if you have checked out a local branch. See <A href="http://wiki.eclipse.org/EGit/User_Guide#Merging_a_Branch_or_a_Tag">Merging 
a Branch or a Tag</A> for further details. </P>
<H4><SPAN class="mw-headline" id="Merge_options">Merge options</SPAN></H4>
<P>The following fast-forward configuration options for merge are recognized by 
EGit, which are used for all branches: </P>
<DIV class="mw-highlight mw-content-ltr" dir="ltr">
<PRE><SPAN class="k">[merge]</SPAN>
    <SPAN class="na">ff</SPAN> <SPAN class="o">=</SPAN> <SPAN class="s">true|false|only</SPAN>
</PRE></DIV>
<P>When you only want to configure it for a certain branch, use the following: 
</P>
<DIV class="mw-highlight mw-content-ltr" dir="ltr">
<PRE><SPAN class="k">[branch "name"]</SPAN>
    <SPAN class="na">mergeoptions</SPAN> <SPAN class="o">=</SPAN> <SPAN class="s">--ff|--no-ff|--ff-only</SPAN>
</PRE></DIV>
<P><BR></P>
<DL>
  <DT>fast-forward options</DT>
  <DT> ff = true or mergeoptions = --ff&nbsp;</DT>
  <DD> When the merge resolves as a fast-forward, only update the branch 
  pointer, without creating a merge commit. This is the default 
behavior.</DD></DL>
<DL>
  <DT> ff = false or mergeoptions = --no-ff&nbsp;</DT>
  <DD> Create a merge commit even when the merge resolves as a 
fast-forward.</DD></DL>
<DL>
  <DT> ff = only or mergeoptions = --ff-only&nbsp;</DT>
  <DD> Refuse to merge and abort the merge operation unless the current HEAD is 
  already up-to-date or the merge can be resolved as a fast-forward.</DD></DL>
<P>When you start merge from the Team menu "Team &gt; Merge..." you can set the 
fast-forward, squash or no-commit merge options in the merge dialog: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.4-merge-options.png"><IMG 
width="422" height="460" alt="Egit-3.4-merge-options.png" src="index.files/Egit-3.4-merge-options.png"></A> 
</P>
<H4><SPAN class="mw-headline" id="Possible_merge_results">Possible merge 
results</SPAN></H4>
<P>After pressing the Merge button, the following scenarios can occur: </P>
<UL>
  <LI><I>Already up to date</I>: Your current branch points to a commit that has 
  the selected branch or tag as predecessor. In this case nothing is 
  changed.</LI>
  <LI><I>Fast-forward</I>:  Your current branch points to a commit that is a 
  predecessor of the selected branch or tag.  In this case your branch is moved 
  and points to the selected branch or tag; this new HEAD is checked out to the 
  working tree. Fast-forward is very common when working with remote 
  repositories: When a remote tracking branch is updated, the merge with the 
  corresponding branch generally is a fast-forward. You can perform a pull by 
  fetching the remote branch (e.g. origin/master) and merging it into the 
  corresponding local branch (e.g. master).</LI>
  <LI><I>Real merge</I>: When neither of the conditions above apply egit 
  triggers a merge of the commits. There are two possible outcomes: If no 
  conflicts occur the current branch will point to a newly created merge commit; 
  if conflicts occur the conflicting files will be marked with label decorators 
  (see <A href="http://wiki.eclipse.org/EGit/User_Guide#Resolving_a_merge_conflict">Resolving 
  a merge conflict</A> for further actions in case of merge conflicts).</LI></UL>
<H5><SPAN class="mw-headline" id="Merge_Result_dialog">Merge Result 
dialog</SPAN></H5>
<P>The result of a merge is summarized in a dialog: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-MergeResultDialog.png"><IMG 
width="457" height="170" alt="Egit-3.1-MergeResultDialog.png" src="index.files/Egit-3.1-MergeResultDialog.png"></A> 
</P>
<P>On the first line you see the result of the merge. The possible results are 
"Already-up-to-date", "Fast-forward", "Merged", "Conflicting" or "Failed". A 
possible reason for "Failed" may be that there are conflicting changes in the 
working directory. </P>
<P>On the second line you see the new HEAD commit in case of a successful merge 
(Already-up-to-date, Fast-forward or Merged). </P>
<P>In the table you see the commits which were merged. </P>
<H3><SPAN class="mw-headline" id="Resolving_a_merge_conflict">Resolving a merge 
conflict</SPAN></H3>
<P>A merge can result in conflicts which require user action. This is the case 
when the content of files cannot be merged automatically. These conflicts are 
marked with a label decoration in the Staging View. Using the Staging View to 
find the files with conflicts in order to resolve them is handy since the 
Staging View shows only modified files so that you don't have to wade through 
all of your resources but only those which might need your attention for 
resolving the conflicts. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-StagingViewConflicts.png"><IMG 
width="551" height="290" alt="Egit-3.1-StagingViewConflicts.png" src="index.files/Egit-3.1-StagingViewConflicts.png"></A> 
</P>
<P>Also the conflicting resources are decorated in the navigation trees like 
Project Explorer or Package Explorer views  </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.10-merge-conflict.png"><IMG 
width="550" height="203" alt="Egit-0.10-merge-conflict.png" src="index.files/Egit-0.10-merge-conflict.png"></A> 
</P>
<P>The merge conflicts in the content of files are presented with textual 
conflict markers (see <A class="external free" href="http://www.kernel.org/pub/software/scm/git/docs/git-merge.html#_how_conflicts_are_presented" 
rel="nofollow">http://www.kernel.org/pub/software/scm/git/docs/git-merge.html#_how_conflicts_are_presented</A> 
for more details). </P>
<H4><SPAN class="mw-headline" id="Using_Merge_Tool">Using Merge Tool</SPAN></H4>
<UL>
  <LI> select the top level resource showing the red conflict label 
  decorator</LI>
  <LI> click <B>Team &gt; Merge Tool</B></LI>
  <LI> select the merge mode <I>Use HEAD (the last local version) of conflicting 
  files</I> and click <B>OK</B></LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.10-select-merge-mode.png"><IMG 
width="358" height="123" alt="Egit-0.10-select-merge-mode.png" src="index.files/Egit-0.10-select-merge-mode.png"></A> 
</P>
<UL>
  <LI> the merge editor opens showing the working tree version in the left pane 
  and the version to be merged in the right pane</LI></UL>
<P><A class="image" 
href="http://wiki.eclipse.org/File:Egit-0.10-merge-tool.png"><IMG width="529" 
height="319" alt="Egit-0.10-merge-tool.png" src="index.files/Egit-0.10-merge-tool.png"></A> 
</P>
<UL>
  <LI> edit the working tree version until you are happy with it</LI>
  <LI><B>Team &gt; Add</B> the merged resource to mark the conflict as 
  resolved</LI>
  <LI> commit the merge commit via <B>Team &gt; Commit</B></LI></UL>
<H4><SPAN class="mw-headline" id="Manual_conflict_resolution">Manual conflict 
resolution</SPAN></H4>
<P>To resolve a conflict you have to do the following steps: </P>
<UL>
  <LI> Navigate to the conflicting resource</LI>
  <LI> Edit the content of the conflicting resource</LI>
  <LI> Tell EGit that the conflict is resolved with <B>Team &gt; Add</B></LI>
  <LI> Commit the conflict resolution with <B>Team &gt; Commit</B></LI></UL>
<H4><SPAN class="mw-headline" id="Finding_conflicting_files">Finding conflicting 
files</SPAN></H4>
<P>A repository which contains conflicting files has the textual label decorator 
"|Conflicts" attached to the repository name. Conflicting resources and folders 
containing such conflicting resources get a conflict label decoration. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Conflicts.png"><IMG 
width="209" height="73" alt="Conflicts.png" src="index.files/Conflicts.png"></A> 
</P>
<P>Alternativley, it's easy to find a list of all conflicting files in the 
staging area.  Open the <B>Git Staging</B> view. The conflicting files with 
decorators will be seen  on the left. <A class="image" href="http://wiki.eclipse.org/File:Git_merge_conflict.png"><IMG 
width="846" height="323" alt="Git merge conflict.png" src="index.files/Git_merge_conflict.png"></A> 
</P>
<H4><SPAN class="mw-headline" id="Editing_conflicting_files">Editing conflicting 
files</SPAN></H4>
<P>In the file content, the area where a pair of conflicting changes happened is 
marked with markers &lt;&lt;&lt;&lt;&lt;&lt;&lt;, =======, and 
&gt;&gt;&gt;&gt;&gt;&gt;&gt;. The part before the ======= is typically your 
side, and the part afterwards is typically their side (see <A class="external free" 
href="http://www.kernel.org/pub/software/scm/git/docs/git-merge.html#_how_conflicts_are_presented" 
rel="nofollow">http://www.kernel.org/pub/software/scm/git/docs/git-merge.html#_how_conflicts_are_presented</A> 
for more details). </P>
<P>Open the file in an editor, edit the content and save the editor. </P>
<P>Note that this step is not mandatory. EGit does not check the content to 
decide if a conflict is resolved. The next step is the relevant one. </P>
<H4><SPAN class="mw-headline" 
id="Adding_conflict_resolution_to_the_git_index">Adding conflict resolution to 
the git index</SPAN></H4>
<P>Once you are finished with editing a file either click <B>Add to Index</B> in 
the Staging View or click <B>Team &gt; Add</B> to add the conflict resolution to 
the git index. This will also mark the corresponding conflict as resolved. </P>
<P>When you have resolved all conflicts the textual repository label decoration 
changes to "Merged". There are no conflict markers anymore. </P>
<P><A class="image" 
href="http://wiki.eclipse.org/File:ResolvedConflicts.png"><IMG width="192" 
height="72" alt="ResolvedConflicts.png" 
src="index.files/ResolvedConflicts.png"></A> </P>
<H4><SPAN class="mw-headline" id="Committing_a_merge">Committing a 
merge</SPAN></H4>
<P>When the repository is in state "Merged" (as is indicated with the textual 
label decorator "|Conflicts" attached to the repository name) the merge can 
finally be committed. </P>
<P>In the Staging View you may want to remove the conflict remarks from the 
standard merge commit message which is generated by the merge operation and 
update the commit message if necessary. Then click <B>Commit</B> in order to 
commit the conflict resolution. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-StagingViewConflictsResolved.png"><IMG 
width="547" height="289" alt="Egit-3.1-StagingViewConflictsResolved.png" src="index.files/Egit-3.1-StagingViewConflictsResolved.png"></A> 
</P>
<P>If you want to use the Commit Dialog to commit the conflict resolution click 
<B>Team &gt; Commit...</B> anywhere in the navigation tree. The commit dialog 
opens with a slightly different look compared to a normal commit: </P>
<UL>
  <LI> The Commit message area is prefilled with a standard merge commit 
  message.</LI>
  <LI> It is not possible to amend a previous commit.</LI>
  <LI> It is not possible to add untracked files.</LI>
  <LI> it is not possible to uncheck the checkboxes. This guarantees that all 
  resolved conflicts are committed.</LI></UL>
<P>After pressing the "Commit" Button the merge is completed. </P>
<H3><SPAN class="mw-headline" id="Aborting_Merge">Aborting Merge</SPAN></H3>
<P>If a merge resulted in conflicts you can abort the merge with a hard reset to 
the current branch. This can be done in state "Conflicts" and in state "Merged", 
i.e. before and after you have resolved the conflicts. </P>
<P>The hard reset can be done from the team menu, the Git Repositories View or 
the History View. See <A href="http://wiki.eclipse.org/EGit/User_Guide#Revert_all_local_and_staged_changes">Revert 
all local and staged changes</A> for more details. </P>
<P><BR></P>
<H2><SPAN class="mw-headline" id="Rebasing">Rebasing</SPAN></H2>
<H3><SPAN class="mw-headline" id="Rebase_Introduction">Rebase 
Introduction</SPAN></H3>
<P>Rebase applies a chain of commits onto a given commit. A typical scenario is 
the development of some feature on a "topic" branch which was created from a 
"master" branch at some point in time. When "master" is updated with changes 
e.g. from other developers while "topic" is still under development, it may 
become necessary to incorporate these changes into "topic".<BR></P>
<P>Let's assume we start development on "topic" by creating the "topic" branch 
from master. At this point, both "master" and "topic" point to commit "E". When 
the first commit ("A") is added to "topic", the commit history of the repository 
looks like this:<BR></P>
<PRE>          A topic
         /
    D---E master
</PRE>
<P>Now, let's assume that there were some more commits on "topic" and as well 
some more commits on "master" (for example, "master" may track some remote 
repository and there were some changes in that remote repository that have been 
pulled into "master"):<BR></P>
<PRE>          A---B---C topic
         /
    D---E---F---G master</PRE>
<P>Now, in order to incorporate the changes in "master" into "topic", a Rebase 
of "topic" onto "master" would produce<BR></P>
<PRE>                  A'--B'--C' topic
                 /
    D---E---F---G master</PRE>
<P><BR> Technically, the sequence of commits that are contained in "topic" but 
not in "master" are applied (that is, cherry-picked) on top of "master" one by 
one.<BR></P>
<P>Note that the commits A, B, C are neither lost nor changed, instead a new 
chain of commits A', B', C' with the same changes and commit messages as the 
original commits (but different commit IDs) will be created. The old commits A, 
B, C are still around in the object database but not visible anymore as they are 
no longer reachable from any branch. A', B', C' are different from the old ones 
as they now also contain changes F and G. </P>
<H3><SPAN class="mw-headline" id="Rebase.2C_A_Simple_Example">Rebase, A Simple 
Example</SPAN></H3>
<P>Let's have a look at some simple example: we have a text file 
"FamousWords.txt" which initially might have some content like </P>
<PRE>Chapter 1
Once upon a time...

Chapter 2
To be or not to be
</PRE>
<P>Now, in "topic", two commits are created, the first one adding a French 
translation to Chapter 2, and another one adding a German translation: </P>
<P>After first change in "topic":<BR></P>
<PRE>Chapter 1
Once upon a time...

Chapter 2
To be or not to be
Être ou ne pas être

</PRE>
<P>After second change in "topic":<BR></P>
<PRE>Chapter 1
Once upon a time...

Chapter 2
To be or not to be
Être ou ne pas être
Sein oder nicht sein
</PRE>
<P>At the same time, the file was changed in "master" by adding two commits 
adding French and German translations to Chapter 1:<BR></P>
<PRE>Chapter 1
Once upon a time...
Il était une fois
Es war einmal

Chapter 2
To be or not to be
</PRE>
<P>The commit history looks like this: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:EGit-0.10-MergeDemoHistory.png"><IMG 
width="728" height="450" alt="EGit-0.10-MergeDemoHistory.png" src="index.files/EGit-0.10-MergeDemoHistory.png"></A> 
</P>
<P>Now, if "topic" is rebased onto "master", the two changes in topic are 
applied in the same sequence as they were applied during the evolution of 
"topic". </P>
<P>The result is a merged version of "FamousWords.txt":<BR></P>
<PRE>Chapter 1
Once upon a time...
Il était une fois
Es war einmal

Chapter 2
To be or not to be
Être ou ne pas être
Sein oder nicht sein

</PRE>
<P>and a commit history with the commit history of "topic" on top of the current 
"master":<BR></P>
<P><A class="image" href="http://wiki.eclipse.org/File:EGit-0.10-MergeDemoHistoryAfterRebase.png"><IMG 
width="751" height="461" alt="EGit-0.10-MergeDemoHistoryAfterRebase.png" src="index.files/EGit-0.10-MergeDemoHistoryAfterRebase.png"></A> 
</P>
<H3><SPAN class="mw-headline" id="The_Real_World:_Rebase_Conflicts">The Real 
World: Rebase Conflicts</SPAN></H3>
<P>Up to now, we have assumed that the changes in "topic" can be auto-merged 
into "master". In the real world, however, it may happen that you encounter 
conflicts during rebase. Now, if a commit that is to be cherry-picked contains 
changes that conflict with changes in "master", the rebase operation is 
interrupted after applying the conflicting change; the conflicts are visualized 
in the usual way (with conflict markers) and the user gets a chance to decide 
whether to </P>
<UL>
  <LI>resolve these conflicts manually,</LI>
  <LI>skip the current commit, or</LI>
  <LI>abort the rebase completely</LI></UL>
<P><BR>If <B>Resolve Conflicts</B> is chosen, and the conflicts have been 
resolved manually, the changes must be "Added", and then rebase can be resumed, 
i.e. the next commit in the chain will be applied. </P>
<P>If <B>Skip</B> was chosen, the conflicting changes will be reverted and the 
next commit in the chain will be applied. </P>
<P>If <B>Abort</B> was chosen, the rebase operation will be completely rolled 
back, returning the Repository into its original state before the rebase was 
started. This process is repeated until the last commit was applied successfully 
or skipped. Finally, the "topic" branch will be changed to point to the last 
commit. </P>
<P>To understand "Skip" better, let's look back to the introduction above. If we 
assume that commit "B" causes some conflicts with the current "master", the user 
might decide to simply skip "B"; the new commit history after the rebase would 
then look like this: </P>
<PRE>                  A'--C' topic
                 /
    D---E---F---G master</PRE>
<H3><SPAN class="mw-headline" id="Starting_Rebase">Starting Rebase</SPAN></H3>
<P><B>In the History View:</B> </P>
<UL>
  <LI> Checkout the branch you want to rebase</LI>
  <LI> Select the commit onto which you want to rebase the checked out branch. 
  This commit will become the new base for all commits being rebased</LI>
  <LI> Click <B>Rebase</B></LI></UL>
<P><B>In the Git Repositories View:</B> On Repository nodes, <B>Rebase...</B> 
opens a dialog asking the user to select a branch that is not checked out; the 
currently checked out branch will then be rebased onto the selected branch. On 
"Branch" nodes (both Local and Remote Tracking branches, but not on the 
currently checked out branch), <B>Rebase</B> immediately rebases the currently 
checked out branch onto the selected branch: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:EGit-0.10-StartRebaseFromRepoView.png"><IMG 
width="498" height="585" alt="EGit-0.10-StartRebaseFromRepoView.png" src="index.files/EGit-0.10-StartRebaseFromRepoView.png"></A> 
</P>
<H3><SPAN class="mw-headline" id="Rebase_Confirmation_Dialog">Rebase 
Confirmation Dialog</SPAN></H3>
<P>If Rebase was successful, a confirmation dialog will be displayed; this 
dialog can be suppressed by ticking a checkbox; a preference on the Git 
preference page allows to make the dialogs appear again. If the dialog is 
suppressed, an "Information" message is written to the Eclipse log instead. </P>
<H3><SPAN class="mw-headline" id="Rebase_Conflicts">Rebase Conflicts</SPAN></H3>
<P>If a conflict occurs during rebase, a dialog is shown giving some information 
about the commit that caused the conflict. By selecting a radio button, you can 
decide whether to </P>
<UL>
  <LI>Start the Merge Tool to resolve the conflicts manually</LI>
  <LI>Skip the current commit</LI>
  <LI>Abort the rebase altogether</LI>
  <LI>Do nothing (return to the workbench), this is equivalent to hitting 
  "Escape":</LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-RebaseResultWizard.png"><IMG 
width="477" height="493" alt="Egit-3.1-RebaseResultWizard.png" src="index.files/Egit-3.1-RebaseResultWizard.png"></A> 
</P>
<P>Unless <B>Skip</B> or <B>Abort</B> was chosen in the dialog, the conflicts 
must be resolved manually by editing the conflicting files. When done with 
editing, the files must be declared as being resolved by adding them to the git 
index.  </P>
<P>If you canceled the rebase wizard the easiest way to find the files with 
conflicts is using the Staging View. Click <B>Merge Tool</B> on the file with 
conflicts to open the merge tool for this file.  The Merge Tool can also be 
started from the corresponding entry in the Team menu. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-StagingViewOpenMergeTool.png"><IMG 
width="608" height="268" alt="Egit-3.1-StagingViewOpenMergeTool.png" src="index.files/Egit-3.1-StagingViewOpenMergeTool.png"></A> 
</P>
<P>Edit the file until you are happy with the conflict resolution and click 
<B>Add to Index</B> on the corresponding entry in the Staging View. This stages 
the conflict resolution and marks the conflict resolved. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-StagingViewMarkResolved.png"><IMG 
width="297" height="185" alt="Egit-3.1-StagingViewMarkResolved.png" src="index.files/Egit-3.1-StagingViewMarkResolved.png"></A> 
</P>
<P>After all conflicts have been resolved, the <B>Continue</B> operation gets 
enabled. In order to continue the rebase operation which was stopped due to 
conflicts click the <B>Continue</B> button in the Staging View or click 
<B>Rebase &gt; Continue</B> on the repository node in the Repositories View. 
</P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-StagingViewRebaseButtons.png"><IMG 
width="313" height="44" alt="Egit-3.1-StagingViewRebaseButtons.png" src="index.files/Egit-3.1-StagingViewRebaseButtons.png"></A> 
</P>
<P>If instead of resolving conflicts you want to skip the commit which caused 
the conflicts click <B>Skip</B> instead. </P>
<P>If you want to abort the ongoing rebase operation click <B>Abort</B>. This 
reverts everything to the state before you started rebase. </P>
<H3><SPAN class="mw-headline" id="Aborting_Rebase">Aborting Rebase</SPAN></H3>
<P>As long as the Repository is in "Rebasing" state, the user can always abort 
the rebase in the Git Repositories View using the menu action "Rebase &gt; 
Abort" which is available on the Repository node. </P>
<H2><SPAN class="mw-headline" id="Interactive_Rebase">Interactive 
Rebase</SPAN></H2>
<H3><SPAN class="mw-headline" id="Synopsis">Synopsis</SPAN></H3>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.2-InteractiveRebaseView.png"><IMG 
width="456" height="328" alt="Egit-3.2-InteractiveRebaseView.png" src="index.files/Egit-3.2-InteractiveRebaseView.png"></A> 
</P>
<P>Interactive rebase allows to quickly edit a series of commits using the 
following actions defined in a rebase plan: </P>
<UL>
  <LI><B>pick</B> to define the order of commits, moving pick entries enables 
  reordering</LI>
  <LI><B>skip</B> to remove a commit</LI>
  <LI><B>edit</B> to amend a commit</LI>
  <LI><B>reword</B> to edit a commit's message</LI>
  <LI><B>squash</B> to squash a commit with its predecessor commit and including 
  their commit messages</LI>
  <LI><B>fixup</B> to squash a commit's diff into its predecessor discarding the 
  squashed commit's message</LI></UL>
<P><B>Warning:</B> don't rewrite commits you have already published on a remote 
repository, it's considered a bad practice for all but experimental or review 
branches since your colleagues may have already based their work on these 
published commits and you would force them to also rewrite their changes. Though 
it's a tool frequently used on review branches e.g. when using Gerrit to rework 
changes which have to be improved based on review feedback. </P>
<H3><SPAN class="mw-headline" id="Starting_interactive_rebase">Starting 
interactive rebase</SPAN></H3>
<P>First checkout the local branch (here branch <I>toRebase</I>) containing the 
commit series you want to edit. Then open the History View for this repository 
and click <B>Interactive Rebase</B> on the commit preceding the oldest commit 
you want to rewrite. Often this is the one origin/master points at. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.2-StartInteractiveRebase.png"><IMG 
width="518" height="375" alt="Egit-3.2-StartInteractiveRebase.png" src="index.files/Egit-3.2-StartInteractiveRebase.png"></A> 
</P>
<P>This opens the new view <B>Git Interactive Rebase</B> showing the rebase plan 
populated with the commits to be modified in topological order in the sequence 
they will be processed during the rebase operation. The initial action for all 
commits is <B>Pick</B> which would cherry-pick the corresponding commit. Note 
that EGit also rewinds HEAD to the commit preceding the first one in the edit 
list in order to prepare the repository for rebasing. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.2-StartedInteractiveRebase.png"><IMG 
width="640" height="304" alt="Egit-3.2-StartedInteractiveRebase.png" src="index.files/Egit-3.2-StartedInteractiveRebase.png"></A> 
</P>
<H3><SPAN class="mw-headline" id="Planning_rebase">Planning rebase</SPAN></H3>
<P>Here the initial rebase plan, the first commit to be applied on the rewound 
HEAD comes first and then all the other commits to be rebased in the order they 
will be applied when clicking "Start". </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.2-PlanInteractiveRebase.png"><IMG 
width="362" height="258" alt="Egit-3.2-PlanInteractiveRebase.png" src="index.files/Egit-3.2-PlanInteractiveRebase.png"></A> 
</P>
<P>Next we prepare the rebase plan, moving commits up and down using the arrow 
buttons to reorder commits and choosing the rebase action we want to apply on 
the commits we want to tweak. </P>
<P>In this example I first reordered the commits so that the implementation of 
new calculator operations immediately precedes the commit implementing tests for 
the respective operation. </P>
<P><B>Here what I want to modify in this series of commits:</B> </P>
<P>I want to skip commit "TODO list" since it contains a private todo list I 
used while implementing the operations and I don't need this anymore. I need to 
amend commit "Add divide operation" since it's buggy, this was revealed by the 
corresponding test which was implemented in a later change, hence I select 
action <B>Edit</B> here the commit "Add multiply opration" obviously has a typo 
in the commit message header so I choose <B>Reword</B>. I want to squash commit 
de7647b into its predecessor since it doesn't make sense to have the JavaDoc fix 
separate from the implementation of what it describes, hence I choose 
<B>Squash</B> to squash it with its predecessor. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.2-InteractiveRebaseView.png"><IMG 
width="456" height="328" alt="Egit-3.2-InteractiveRebaseView.png" src="index.files/Egit-3.2-InteractiveRebaseView.png"></A> 
</P>
<H3><SPAN class="mw-headline" id="Executing_interactive_rebase">Executing 
interactive rebase</SPAN></H3>
<P>When you're done planning the rebase click <B>Start</B> to start execution of 
the rebase command. EGit will process the plan and stop at the commits where you 
have selected actions which need your intervention to interactively edit the 
corresponding commit. </P>
<P>In our little example rebase stops the first time on commit "Add divide 
operation" since we signaled that we want to edit it. The last picked commit is 
highlighted in bold. At this time the first step skipping the commit "TODO list" 
was already processed and this commit is no longer in our commit series we are 
rewriting while executing rebase. Also the commit "Add divide operation" was 
already cherry-picked since we want to amend it. Note that EGit has already 
selected the "Amend" option in the Staging View in order to prepare amending 
this commit. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.2-InteractiveRebaseEdit.png"><IMG 
width="640" height="219" alt="Egit-3.2-InteractiveRebaseEdit.png" src="index.files/Egit-3.2-InteractiveRebaseEdit.png"></A> 
</P>
<P>Now we fix the bug in this commit, stage the changes needed to fix the bug, 
adjust the commit message if necessary and click <B>Commit</B> in order to amend 
the buggy commit. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.2-InteractiveRebaseAmend.png"><IMG 
width="560" height="310" alt="Egit-3.2-InteractiveRebaseAmend.png" src="index.files/Egit-3.2-InteractiveRebaseAmend.png"></A> 
</P>
<P>Let's have a look at the History View to see the resulting commit graph. HEAD 
now points at the rewritten fixed commit "Add divide operation", note that its 
SHA1 is different from its original version since we rewrote the commit to fix 
the bug. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.2-InteractiveRebaseHistoryAfterEdit.png"><IMG 
width="314" height="213" alt="Egit-3.2-InteractiveRebaseHistoryAfterEdit.png" 
src="index.files/Egit-3.2-InteractiveRebaseHistoryAfterEdit.png"></A> </P>
<P>Next we click <B>Continue</B> in order to resume processing the rebase plan. 
Rebase picks the commits "Divide test" and "Add multiply opration" and stops 
again raising a commit message editor so that we can fix the typo in the commit 
message of the latter commit. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.2-InteractiveRebaseReword.png"><IMG 
width="640" height="456" alt="Egit-3.2-InteractiveRebaseReword.png" src="index.files/Egit-3.2-InteractiveRebaseReword.png"></A> 
</P>
<P>Edit the commit message to fix the typo and click <B>OK</B> in order to amend 
the commit message and resume processing. </P>
<P>Rebase picks the next 3 commits, squashes the commits "add power" and "Fix 
javadoc for power operation" into one new commit and stops again so that we can 
prepare the commit message of the new commit. Its initialized with the 
concatenation of the messages of the commits being squashed. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.2-InteractiveRebaseSquash.png"><IMG 
width="640" height="464" alt="Egit-3.2-InteractiveRebaseSquash.png" src="index.files/Egit-3.2-InteractiveRebaseSquash.png"></A> 
</P>
<P>Edit the squashed commit's message and click <B>OK</B> to resume processing. 
</P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.2-InteractiveRebaseSquashMessage.png"><IMG 
width="452" height="294" alt="Egit-3.2-InteractiveRebaseSquashMessage.png" src="index.files/Egit-3.2-InteractiveRebaseSquashMessage.png"></A> 
</P>
<P>Rebase picks the final commit "Power test" and completes successfully. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.2-InteractiveRebaseFinished.png"><IMG 
width="413" height="126" alt="Egit-3.2-InteractiveRebaseFinished.png" src="index.files/Egit-3.2-InteractiveRebaseFinished.png"></A> 
</P>
<P>Finally lets have another look in the History View to examine the result of 
the interactive rebase command. Compare the rewritten series of commits now 
contained in branch "toRebase" with the old commit series still visible since I 
have placed another local branch "start" there in order to keep the old series 
visible. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.2-InteractiveRebaseHistoryAfterRebase.png"><IMG 
width="286" height="256" alt="Egit-3.2-InteractiveRebaseHistoryAfterRebase.png" 
src="index.files/Egit-3.2-InteractiveRebaseHistoryAfterRebase.png"></A> </P>
<H3><SPAN class="mw-headline" id="Safety_Instructions">Safety 
Instructions</SPAN></H3>
<P>If you happen to go wrong during this multi-step process you can always hit 
<B>Abort</B> in order to stop the rebase operation in progress and roll back to 
the starting point. </P>
<P>When you are starting to use this feature it's maybe a good idea to place a 
second local branch on the starting point (as I showed in this example) to make 
it more obvious what's going on until you are familiar with this powerful git 
command. </P>
<H3><SPAN class="mw-headline" id="Rebase_with_auto-stashing">Rebase with 
auto-stashing</SPAN></H3>
<P>EGit also supports the Git configuration option <B>rebase.autostash</B>. Set 
this option <B>rebase.autostash = true</B> to automatically create a temporary 
stash before a rebase operation begins, and apply it after the operation ends. 
This means that you can run rebase and also interactive rebase on a dirty 
worktree. However, <B>use with care:</B> the final stash application after a 
successful rebase might result in non-trivial conflicts. </P>
<H2><SPAN class="mw-headline" id="Cherry_Picking">Cherry Picking</SPAN></H2>
<H3><SPAN class="mw-headline" id="Cherry-pick_Introduction">Cherry-pick 
Introduction</SPAN></H3>
<P>A given commit <I>C</I> on branch <I>stable-1.0</I> contains a set of changes 
you would like to integrate in your current development on branch <I>master</I>. 
</P>
<PRE>                  A--B--C--D stable-1.0
                 /
    D---E---F---G master HEAD</PRE>
<P>Cherry-pick the commit <I>C</I> to create a new commit <I>C' </I> on top of 
the head commit of the currently checked out branch <I>master</I>. <I>C' </I> 
will then contain the changes performed in <I>C</I> applied onto the HEAD of the 
currently checked out branch <I>master</I>. </P>
<PRE>                  A--B--C--D stable-1.0
                 /
    D---E---F---G--C' master HEAD</PRE>
<H3><SPAN class="mw-headline" id="Cherry-pick_Example">Cherry-pick 
Example</SPAN></H3>
<P>You are currently working on branch "feature2" (HEAD). There is a commit 
"feature 1" in another branch.<BR>You want to integrate the changes performed by 
commit "feature 1" into your current development on branch "feature 2". </P>
<UL>
  <LI> In the History View select commit "feature 1" and click 
  <B>Cherry-pick</B>:</LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:CherryPick1.png"><IMG 
width="519" height="358" alt="CherryPick1.png" 
src="index.files/CherryPick1.png"></A> </P>
<UL>
  <LI>As result you get a new commit "feature 1" at the tip of your current 
  branch "feature" containing the changes of "feature 1":</LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:CherryPick2.png"><IMG 
width="496" height="154" alt="CherryPick2.png" 
src="index.files/CherryPick2.png"></A> </P>
<UL>
  <LI>Cherry-picking can encounter conflicts. In this case conflict markers are 
  rendered into the affected sources:</LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:CherryPick3.png"><IMG 
width="395" height="263" alt="CherryPick3.png" 
src="index.files/CherryPick3.png"></A> </P>
<UL>
  <LI> Open the Staging View to quickly find the conflicting files.</LI>
  <LI> Click <B>Merge Tool</B> on a file with conflicts to open the merge tool 
  for this file</LI>
  <LI> Resolve the conflicts by editing the corresponding sources in the same 
  way as described in <A href="http://wiki.eclipse.org/EGit/User_Guide#Resolving_a_merge_conflict">Resolving 
  a merge conflict</A></LI>
  <LI><B>Add</B> the files you edited to mark the conflicts resolved</LI>
  <LI><B>Commit</B> the conflict resolution</LI></UL>
<P><BR></P>
<H2><SPAN class="mw-headline" id="Tagging">Tagging</SPAN></H2>
<H3><SPAN class="mw-headline" id="Creating_a_Tag">Creating a Tag</SPAN></H3>
<UL>
  <LI> Open the History View and click <B>Create Tag...</B> on the commit you 
  want to tag</LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-CreateTagDialog.png"><IMG 
width="490" height="284" alt="Egit-3.1-CreateTagDialog.png" src="index.files/Egit-3.1-CreateTagDialog.png"></A> 
</P>
<UL>
  <LI> Enter the tag name</LI>
  <LI> Enter the tag message</LI>
  <LI> Click <B>OK</B> to create the annotated tag</LI></UL>
<P>Tags can also be created from the team menu, click <B>Team &gt; Advanced &gt; 
Tag...</B>, enter the tag name and message, select the commit you want to tag 
(default is HEAD) and click <B>OK</B>. </P>
<H3><SPAN class="mw-headline" id="Replacing_an_Existing_Tag">Replacing an 
Existing Tag</SPAN></H3>
<P>What to do if you tagged the wrong commit or ended up with some sort of 
typo&nbsp;? </P>
<UL>
  <LI> If you didn't yet push this out just replace the tag and you are 
  done.</LI>
  <LI><B>If it's already published you shouldn't replace the tag</B> but use a 
  new name since otherwise you have to tell everybody who got the old tag to 
  replace it manually with your updated one. This is because, Git does not (and 
  it should not) change tags behind users back. So if somebody already got the 
  old tag, doing a git pull on your tree shouldn't just make them overwrite the 
  old one.</LI></UL>
<P>So if your old tag wasn't yet pushed you may correct it in the following 
way&nbsp;: </P>
<UL>
  <LI> In the History View click <B>Tag...</B> on the commit you want to place 
  the tag on</LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-ReplaceExistingTag.png"><IMG 
width="487" height="300" alt="Egit-3.1-ReplaceExistingTag.png" src="index.files/Egit-3.1-ReplaceExistingTag.png"></A> 
</P>
<UL>
  <LI> Select the tag you want to replace from the list of existing tags</LI>
  <LI> or start typing any part of the tag you look for into the Tag Name field, 
  this will filter the list of existing tags to those tags which contain the 
  string you are typing, then select the tag you want to replace</LI>
  <LI> Mark the checkbox <B>Force replace existing tag</B></LI>
  <LI> Change the tag and press <B>OK</B></LI></UL>
<H3><SPAN class="mw-headline" id="Deletion_of_tags">Deletion of tags</SPAN></H3>
<P>In order to delete a tag, select the tag to be deleted and click <B>Delete 
Tag</B>. </P>
<P><B>Note:</B> it's a bad practice to delete tags which have already been 
published on a public server, some Git servers even disallow tag deletion to 
ensure traceability for releases which are usually tagged. Also see the <A 
class="external text" href="http://schacon.github.com/git/git-tag.html" rel="nofollow">section 
"On re-tagging"</A> in the Git reference documentation of the tag command. </P>
<H3><SPAN class="mw-headline" id="Light-weight_and_Signed_Tags">Light-weight and 
Signed Tags</SPAN></H3>
<P>Light-weight tags are shown in the Repositories View as well as in the Create 
Tag dialog, but can not be edited. Tags are shown with a blue icon in the 
Repositories View, annotated tags are decorated with a yellow person. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-1.1-tags.png"><IMG 
width="137" height="60" alt="Egit-1.1-tags.png" src="index.files/Egit-1.1-tags.png"></A> 
</P>
<P>In the History View, tags are shown as yellow labels. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-1.1-tags-history.png"><IMG 
width="335" height="97" alt="Egit-1.1-tags-history.png" src="index.files/Egit-1.1-tags-history.png"></A> 
</P>
<P>Signed tags are not yet supported by EGit, use command line <TT><B>git tag 
-s</B></TT> instead. </P>
<P><BR></P>
<H2><SPAN class="mw-headline" id="Patches">Patches</SPAN></H2>
<H3><SPAN class="mw-headline" id="Creating_Patches">Creating Patches</SPAN></H3>
<P>"A patch is a piece of software designed to fix problems with, or update a 
computer program or its supporting data" (<A class="external text" href="http://en.wikipedia.org/wiki/Patch_(software)" 
rel="nofollow">wikipedia</A>). A patch file contains a description of changes of 
a set of resources which can be automatically applied to another eclipse 
workspace or git repository. </P>
<P>The patch formats used by eclipse (<B>Team &gt; Apply Patch</B>) and by git 
(<TT><B>git apply</B></TT> or <TT><B>git am</B></TT> on the command line) are 
different. It is possible to create both types of a patch in EGit. </P>
<H4><SPAN class="mw-headline" id="Create_a_Patch_from_a_Commit">Create a Patch 
from a Commit</SPAN></H4>
<P>This is the most common use case for a distributed versioning system. A 
developer commits a change on a local feature or bugfix branch and wants to 
export this change into a patch file. </P>
<P>It can be done from the history view: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.0-create-patch-menu.png"><IMG 
width="690" height="307" alt="Egit-0.0-create-patch-menu.png" src="index.files/Egit-0.0-create-patch-menu.png"></A> 
</P>
<P>The patch file will contain the difference between the commit and its parent 
in the history view. Note that the filter of the history view applies also for 
patch creation. </P>
<H4><SPAN class="mw-headline" id="Patch_Wizard">Patch Wizard</SPAN></H4>
<P>The Wizard consists of two pages. Page one lets you select the location of 
the patch: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.0-create-patch-dialog.png"><IMG 
width="495" height="251" alt="Egit-0.0-create-patch-dialog.png" src="index.files/Egit-0.0-create-patch-dialog.png"></A> 
</P>
<P>The name of the patch file is created from the first line of the commit 
message. </P>
<P>On the second page you can change the patch format. </P>
<P>Currently there is one check box: <B>Export in git patch format</B>. </P>
<UL>
  <LI>If you do not check it (this is the default) the patch can be applied with 
  the eclipse <B>Apply Patch...</B> wizard. The paths are relative to the 
  eclipse projects and do not contain prefixes (like <TT><B>git format-patch 
  --no-prefix</B></TT> on the git command line).</LI>
  <LI>If you check it the patch will look like the result of <TT><B>git 
  format-patch --no-stat</B></TT> on the git command line.</LI></UL>
<P>Binary diffs are currently not produced. </P>
<H3><SPAN class="mw-headline" id="Applying_Patches">Applying Patches</SPAN></H3>
<P>Currently EGit isn't able to apply patches in git format. It is possible to 
apply patches using the standard Eclipse (unified diff) format using <B>Team 
&gt; Apply Patch...</B>. Git patches may contain non-standard extensions for 
rename and binary diffs. The current version of EGit does not generate these 
extensions. </P>
<P><BR></P>
<H2><SPAN class="mw-headline" id="Managing_Repositories">Managing 
Repositories</SPAN></H2>
<P>The "Git Repositories View" is the primary UI element to facilitate working 
with multiple Repositories simultaneously (i.e. within one Eclipse Workspace). 
</P>
<P>This view can be opened using the menu path <BR><B>Windows &gt; Show View 
&gt; Other... &gt; Git &gt; Git Repositories</B> </P>
<P>It is also part of the "Git Repository Exploring" perspective available using 
menu path <BR><B>Window &gt; Open Perspective &gt; Other... &gt; Git Repository 
Exploring</B> </P>
<P>If you already have projects in your workspace which are shared with a Git 
Repository, you can use <BR><B>Team &gt; Show in Repositories View</B> </P>
<P>on any resource to open the view. </P>
<H3><SPAN class="mw-headline" id="Adding_Repositories_to_the_Git_Repositories_View">Adding 
Repositories to the Git Repositories View</SPAN></H3>
<P>Initially, the Git Repositories View is empty. In order to add Repositories 
to it, there are several options: </P>
<OL>
  <LI>Adding a Repository from the Local File System manually</LI>
  <LI>Cloning a Repository and having the cloned Repository added to the view 
  automatically</LI>
  <LI>Creating a Repository on the Local File System</LI>
  <LI>Adding a Repository by pasting a Git Repository path to the view</LI></OL>
<H4><SPAN class="mw-headline" id="Adding_a_Repository_manually">Adding a 
Repository manually</SPAN></H4>
<P>You can add a Repository from your local file system to the Git Repositories 
View without cloning it. This can be helpful if you are setting up a new Eclipse 
workspace and want to re-use your Git Repositories. Use the <B>Add an existing 
Git Repository</B> button from the view's toolbar: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:RepoMgrAddRepositoryIcon.png"><IMG 
width="450" height="27" alt="RepoMgrAddRepositoryIcon.png" src="index.files/RepoMgrAddRepositoryIcon.png"></A> 
</P>
<P>A dialog will appear prompting you for a directory of your local file system. 
After selecting the correct directory, you can hit the <B>Search</B> button to 
see a list of Git Repositories in this directory. You can then select some or 
all found Repositories and add them to the view using <B>OK</B>: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.11-import-projects-add-dialog.png"><IMG 
width="525" height="439" alt="Egit-0.11-import-projects-add-dialog.png" src="index.files/Egit-0.11-import-projects-add-dialog.png"></A> 
</P>
<H4><SPAN class="mw-headline" id="Cloning_a_Repository_2">Cloning a 
Repository</SPAN></H4>
<P>In order to clone a Repository, refer to <A href="http://wiki.eclipse.org/EGit/User_Guide#Cloning_a_Repository">Cloning 
remote Repositories</A>. After a successful clone operation, the newly cloned 
Repository should appear in the Git Repositories View automatically. </P>
<P>You can also use the <B>Clone a Git Repository</B> button from the view's 
toolbar to start the Clone wizard: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:RepoMgrCloneRepositoryIcon.png"><IMG 
width="450" height="27" alt="RepoMgrCloneRepositoryIcon.png" src="index.files/RepoMgrCloneRepositoryIcon.png"></A> 
</P>
<P>Please refer to <A href="http://wiki.eclipse.org/EGit/User_Guide#Cloning_a_Repository">Cloning 
remote Repositories</A> about how to use the wizard. </P>
<H4><SPAN class="mw-headline" id="Creating_a_Repository">Creating a 
Repository</SPAN></H4>
<P>You can create a new, empty repository on the local file system. This is 
useful if you later on want to create one or more new projects below this 
repository. Another usecase is to create a new bare repository where you can 
push to. Use the <B>Create a new Git Repository</B> button from the view's 
toolbar: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:RepoMgrCreateRepositoryIcon.png"><IMG 
width="450" height="27" alt="RepoMgrCreateRepositoryIcon.png" src="index.files/RepoMgrCreateRepositoryIcon.png"></A> 
</P>
<P>A dialog will appear which lets you choose a directory: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:RepoMgrCreateRepositoryDialog.png"><IMG 
width="567" height="346" alt="RepoMgrCreateRepositoryDialog.png" src="index.files/RepoMgrCreateRepositoryDialog.png"></A> 
</P>
<P>If you select the checkbox <B>Create as Bare Repository</B> the new 
repository will not have a working directory. You then can only add content by 
pushing changes from another repository. </P>
<H4><SPAN class="mw-headline" 
id="Adding_a_Repository_using_Copy_and_Paste">Adding a Repository using Copy and 
Paste</SPAN></H4>
<P>As a shortcut, it is also possible to paste the local file system path of a 
Git repository from the clipboard into this view. In order to do so, copy the 
path of a Git repository (the full path of its <CODE>.git</CODE> folder) to the 
clipboard, then open the context menu on the view panel: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:RepoMgrPasteRepositoryPath.png"><IMG 
width="391" height="375" alt="RepoMgrPasteRepositoryPath.png" src="index.files/RepoMgrPasteRepositoryPath.png"></A> 
</P>
<P>or click <B>Edit &gt; Paste</B> from the main menu (or the corresponding 
keyboard shortcut). If the clipboard content is not suitable, an error popup 
will be displayed, otherwise the added Repository should appear automatically. 
</P>
<P>After the view has been populated with some repositories, it should look like 
this: </P>
<P><A class="image" 
href="http://wiki.eclipse.org/File:RepoMgrViewWithRepos.png"><IMG width="373" 
height="115" alt="RepoMgrViewWithRepos.png" src="index.files/RepoMgrViewWithRepos.png"></A> 
</P>
<H3><SPAN class="mw-headline" id="Removing_Repositories">Removing 
Repositories</SPAN></H3>
<H4><SPAN class="mw-headline" id="Removing_a_Repository_from_the_Repositories_View">Removing 
a Repository from the Repositories View</SPAN></H4>
<P>In order to remove a repository from the Repositories View select a 
repository and click "Remove Repository" </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.10-RemoveRepository.png"><IMG 
width="443" height="202" alt="Egit-0.10-RemoveRepository.png" src="index.files/Egit-0.10-RemoveRepository.png"></A> 
</P>
<H4><SPAN class="mw-headline" id="Deleting_a_Repository">Deleting a 
Repository</SPAN></H4>
<P>In order to delete a repository, select it in the Repositories View and click 
"Delete Repository". </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.10-DeleteRepository.png"><IMG 
width="452" height="198" alt="Egit-0.10-DeleteRepository.png" src="index.files/Egit-0.10-DeleteRepository.png"></A> 
</P>
<P>Then confirm that you want to delete the repository and decide if you want to 
delete the repository's working directory with the projects contained in the 
repository from the Eclipse workspace. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-DeleteRepository.png"><IMG 
width="491" height="241" alt="Egit-3.1-DeleteRepository.png" src="index.files/Egit-3.1-DeleteRepository.png"></A> 
</P>
<P><BR></P>
<H3><SPAN class="mw-headline" 
id="Structure_of_the_Git_Repositories_View">Structure of the Git Repositories 
View</SPAN></H3>
<P>The following screenshot shows the topmost two levels of the Git Repositories 
View: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.11-RepoViewTopLevel.png"><IMG 
width="234" height="108" alt="Egit-0.11-RepoViewTopLevel.png" src="index.files/Egit-0.11-RepoViewTopLevel.png"></A> 
</P>
<P>The root node represents the Repository itself. The node text indicates the 
name of the Repository and its location in the local file system. The "Branches" 
and "Tags" nodes allow browsing and manipulation of tags and branches. The 
"References" node lists other references which are not branches or tags, most 
notably the "HEAD" and "FETCH_HEAD" symbolic references (see <A href="http://wiki.eclipse.org/EGit/User_Guide#Git_References"> 
Git References</A>). </P>
<P>The "Working Directory" node displays the location and structure of the 
working directory on the local file system (only in case of a development, or 
non-bare Repository, for bare Repositories, this node is always a leaf). </P>
<P>Finally, the "Remotes" node allows browsing and manipulating the remote 
configurations used for Fetch and Push. </P>
<H3><SPAN class="mw-headline" 
id="Functions_of_the_Git_Repositories_View">Functions of the Git Repositories 
View</SPAN></H3>
<H4><SPAN class="mw-headline" id="Project_Import">Project Import</SPAN></H4>
<P>In order to work with the contents of a Git Repository, its files and folders 
must be imported into the Eclipse workspace in the form of projects. While the 
Git Clone wizard allows to do such imports directly after cloning, the Git 
Repositories View allows to trigger project imports independently of the clone 
operation. </P>
<P>The "Import Projects..." context menu is available on the "Repository" node 
as well as on any "Folder" node within the "Working Directory" node and the 
"Working Directory" node itself: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.11-ImportProjectsFromRepoView.png"><IMG 
width="681" height="516" alt="Egit-0.11-ImportProjectsFromRepoView.png" src="index.files/Egit-0.11-ImportProjectsFromRepoView.png"></A> 
</P>
<P>The rationale for offering the <B>Import Projects...</B> action on several 
nodes is that some of the wizards used for importing projects can take the file 
system directory into account, for example the <B>Import Existing Projects</B> 
wizard. If the import is started from the "Repository" or the "Working 
Directory" node, the working directory of the repository is set as context, 
otherwise the directory corresponding to the currently selected "Folder" node. 
</P>
<P>The details of project import are discussed in <A href="http://wiki.eclipse.org/EGit/User_Guide#Use_the_New_Projects_Wizard">Use 
the New Projects Wizard</A>. </P>
<H4><SPAN class="mw-headline" id="Branch_and_Tag_Support">Branch and Tag 
Support</SPAN></H4>
<P>The "Branches" node allows to create, browse, checkout and delete local and 
remote branches. The "Tags" node allows to browse and check out tags. Both the 
"Branches" node and the "Tags" node allow to merge the branch or tag into the 
currently checked out branch and also to synchronize with the currently checked 
out branch. </P>
<P>For better readability, branches are organized in two sub-nodes for local and 
remote branches, respectively, and only the shortened names are displayed, e.g. 
instead of <TT>"refs/heads/master"</TT> you would find an entry 
<TT>"master"</TT> under the "Local Branches" node, instead of 
<TT>"refs/remotes/origin/master"</TT> the shortened name 
<TT>"origin/master"</TT> is displayed under the "Remote Branches" node. 
Similarly, tag names are shortened by omitting the <TT>"refs/tags/"</TT> prefix: 
</P>
<P><A class="image" href="http://wiki.eclipse.org/File:RepoMgrBranchesAndTags.png"><IMG 
width="251" height="208" alt="RepoMgrBranchesAndTags.png" src="index.files/RepoMgrBranchesAndTags.png"></A> 
</P>
<H5><SPAN class="mw-headline" id="Check-out_of_Branches_and_Tags">Check-out of 
Branches and Tags</SPAN></H5>
<P>Branches and tags can be checked out by either double-clicking on the 
respective node or by selecting the corresponding context menu entry. </P>
<H5><SPAN class="mw-headline" id="Creation_and_Deletion_of_Branches">Creation 
and Deletion of Branches</SPAN></H5>
<P>Local branches can be created using the <A href="http://wiki.eclipse.org/EGit/User_Guide#Branch_Creation_Dialog">Branch 
Creation Dialog</A>. The wizard is opened by right-clicking on the "Branches", 
the "Local Branches" on any "Branch" and "Tag" node). </P>
<P>Branch deletion is done using the corresponding context menu entry. </P>
<H5><SPAN class="mw-headline" id="Rebasing_2">Rebasing</SPAN></H5>
<P>You can trigger rebasing of the currently checked-out branch onto another 
branch by right-clicking <B>Rebase</B> on any (local or remote tracking) branch 
node. </P>
<H5><SPAN class="mw-headline" id="Merging_a_Branch_or_a_Tag">Merging a Branch or 
a Tag</SPAN></H5>
<P>You can trigger a merge from any branch and tag node and from the repository 
node if you have checked out a local branch. See <A href="http://wiki.eclipse.org/EGit/User_Guide#Merging">Merging</A> 
for further details of the merging features. </P>
<UL>
  <LI>When you select any branch node other than the currently checked out 
  branch or any tag node, use <B>Merge</B> to directly trigger a merge into the 
  currently checked out branch.</LI></UL>
<UL>
  <LI>When you select the repository node or the currently checked out branch, 
  use <B>Merge...</B> to open the merge dialog. The merge dialog is described at 
  <A href="http://wiki.eclipse.org/EGit/User_Guide#Merging_a_branch_or_a_tag_into_the_current_branch">Merging 
  a branch or a tag into the current branch</A>.</LI></UL>
<H5><SPAN class="mw-headline" 
id="Synchronizing_with_a_Branch_or_a_Tag">Synchronizing with a Branch or a 
Tag</SPAN></H5>
<P>You can perform a comparison of the changes in your HEAD with the changes 
done in any other branch or tag. Right click and select <B>Synchronize...</B> on 
any branch or tag. Then the eclipse synchronize view opens which contains a 
representation of the changes that are contained in your HEAD but not on the 
other branch or tag (outgoing change) or vice versa (incoming change). Please 
refer to the documentation of the synchronize feature for further details. </P>
<H5><SPAN class="mw-headline" 
id="Determining_the_Checked-out_Branch">Determining the Checked-out 
Branch</SPAN></H5>
<P>There are two ways to determine which branch or tag is currently checked out: 
the checked out branch/tag node is decorated with a little check mark and the 
"HEAD" entry under the "Symbolic References" node shows the (full) name of the 
checked out branch: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:RepoMgrCheckedOutBranch.png"><IMG 
width="311" height="174" alt="RepoMgrCheckedOutBranch.png" src="index.files/RepoMgrCheckedOutBranch.png"></A> 
</P>
<H5><SPAN class="mw-headline" id="Resetting_to_a_Branch_or_a_Tag">Resetting to a 
Branch or a Tag</SPAN></H5>
<P>Right click and select <B>Reset...</B> on any branch or tag. This opens a 
dialog which lets you decide on the reset type. See <A href="http://wiki.eclipse.org/EGit/User_Guide#Resetting_your_current_HEAD">Resetting 
you current HEAD</A> for further details. </P>
<H5><SPAN class="mw-headline" id=".22Detached.22_HEAD">"Detached" 
HEAD</SPAN></H5>
<P>If HEAD is "detached", i.e. is not pointing to the tip of a local branch but 
to a commit or tag, then none or several "checked-out" markers may appear in the 
tree, since any number of remote branch or tags may point to the currently 
checked out commit. The state you are in while your HEAD is detached is not 
recorded by any branch (which is natural --- you are not on any branch). </P>
<H4><SPAN class="mw-headline" id="Inspecting_References">Inspecting 
References</SPAN></H4>
<P>The References node displays some References other than branches and tags 
(the list is dynamic and depends on the current state of the Repository): </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.11-RepoViewReferencesNode.png"><IMG 
width="521" height="183" alt="Egit-0.11-RepoViewReferencesNode.png" src="index.files/Egit-0.11-RepoViewReferencesNode.png"></A> 
</P>
<P>If the Reference is symbolic, i.e. points to another Reference, the name of 
the target reference is shown, followed by the object ID of the reference's 
target. If the Reference is not symbolic, only the object ID is shown. </P>
<P>In the example above, HEAD is a symbolic Reference pointing to branch 
"refs/heads/master" (i.e. branch "master" is checked out", while FETCH_HEAD 
points directly to commit 226a7f... . </P>
<P>The following actions are available on right-clicking on a Reference: 
<B>Checkout </B>(unless the Reference is already checked out) and <B>Create 
Branch'</B><I>...'</I> . </P>
<H4><SPAN class="mw-headline" id="Browsing_the_Working_Directory">Browsing the 
Working Directory</SPAN></H4>
<P>The "Working Directory" node visualizes the local file system structure of 
the Git Repository. It is also possible to open a text editor on the files: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:RepoMgrOpenTextEditor.png"><IMG 
width="798" height="307" alt="RepoMgrOpenTextEditor.png" src="index.files/RepoMgrOpenTextEditor.png"></A> 
</P>
<P>Alternatively, files can be opened by dragging them from the Working 
Directory to the Editor Area. </P>
<P>Also, on all file and folder nodes as well as on the "Repository" node, an 
option is offered to copy the (file-system specific) path to the clipboard. This 
is sometimes useful when the path is needed, for example to open a directory 
using a file browser or to copy and paste Repositories between view instances 
(see above about how to add Repositories to the view). The <B>Copy to 
Clipboard</B> action is also available using <B>Edit &gt; Copy</B> (or the 
corresponding keyboard shortcut). </P>
<H4><SPAN class="mw-headline" id="Repository_Configuration">Repository 
Configuration</SPAN></H4>
<P>Integration with the generic "Properties" view in Eclipse allows to view and 
edit the Git Configuration (global and repository-specific configuration). If 
the "Properties" view is open, it is updated automatically when a "Repository" 
node is selected. With a drop down box (left red box in the screen shot) you can 
switch between the display of the Repository Configuration, the Global 
Configuration and a view which aggregates both. If the view displays the 
Repository Configuration or the Global Configuration you can open an editor 
dialog with the <B>Edit</B> button (right red box in the screen shot). The 
editor dialog has the same functionality as the preference page <B>Team &gt; Git 
&gt; Configuration</B>. </P>
<P>In the Git Repositories view, there is a <B>Properties</B> action in the 
context menu, which will open a configuration dialog allowing to edit the 
Repository Configuration. Here, key value pairs can be added, changed or 
deleted. The <B>Open</B> button allows to open the Repository Configuration file 
in a text editor. </P>
<H4><SPAN class="mw-headline" id="Remote_Repositories">Remote 
Repositories</SPAN></H4>
<P>The "Remotes" node allows for browsing and editing Remote configurations. 
Each Remote configuration has a name and either a Push Specification, a Fetch 
Specification, or both. If a "Remote Configuration" node or any of its children 
is selected, the <B>Properties</B> view will show a summary of the Remote 
configuration. In this example: there is a Remote configuration named "origin" 
which only has a Fetch Specification, but no Push Specification: </P>
<P><A class="image" 
href="http://wiki.eclipse.org/File:RepoMgrRemoteConfig.png"><IMG width="837" 
height="228" alt="RepoMgrRemoteConfig.png" src="index.files/RepoMgrRemoteConfig.png"></A> 
</P>
<P>Menu actions are provided to add, configure, and remove Remote configurations 
and Fetch and Push Specifications. </P>
<H5><SPAN class="mw-headline" id="Direct_Fetch_and_Push_Support">Direct Fetch 
and Push Support</SPAN></H5>
<P>It is possible to execute fetch and push directly (i.e. without a wizard) on 
the remote node as well as on the respective "Fetch" and "Push" nodes: </P>
<P><A class="image" 
href="http://wiki.eclipse.org/File:RepoMgrSimpleFetch.png"><IMG width="822" 
height="241" alt="RepoMgrSimpleFetch.png" src="index.files/RepoMgrSimpleFetch.png"></A> 
</P>
<P>Note that the fetch or push operation will be executed immediately in an 
asynchronous job; on completion you will get a confirmation pop-up displaying 
the fetch result. </P>
<P>The "Fetch" node contains a so called fetch specification and the "Push" node 
contains a so called push specification. </P>
<P>A default fetch specification is created when the repository is cloned. You 
can edit the fetch specification with the menu entry <B>Configure Fetch...</B>. 
This opens a wizard. On the first page you can edit the Fetch URI. Ob the second 
page you can determine the fetch ref specifications, see <A href="http://wiki.eclipse.org/EGit/User_Guide#Fetch_Ref_Specifications">Fetch 
Ref Specifications</A>. </P>
<P>You can create or edit a push specification with the menu entry <B>Configure 
Push...</B>. This opens a wizard. On the first page you can edit the Push URIs. 
If a fetch is specified the fetch URI is automatically included into the push 
specification and no additional Push URI is needed. On the second page you can 
determine the push ref specifications, see <A href="http://wiki.eclipse.org/EGit/User_Guide#Push_Ref_Specifications">Push 
Ref Specifications</A>. </P>
<H5><SPAN class="mw-headline" id="Adding_a_Remote_Configuration">Adding a Remote 
Configuration</SPAN></H5>
<P>This is done using a context menu action on the "Remotes" node. A wizard is 
started asking for the name of the new configuration and whether to configure 
Fetch, Push, or both: </P>
<P><A class="image" 
href="http://wiki.eclipse.org/File:RepoMgrNewRemote.png"><IMG width="678" 
height="292" alt="RepoMgrNewRemote.png" 
src="index.files/RepoMgrNewRemote.png"></A> </P>
<P>If the <B>Configure Fetch</B> checkbox was selected, the next wizard page 
will ask for the URI of the Repository to fetch from: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-repo-view-createRemoteWizardFetch.png"><IMG 
width="900" height="674" alt="Egit-0.9-repo-view-createRemoteWizardFetch.png" 
src="index.files/Egit-0.9-repo-view-createRemoteWizardFetch.png"></A> </P>
<P>Click <B>Change...</B> to open a dialog that allows you to select a URI. The 
next step is to define the Remote Specification for the fetch URI. See <A href="http://wiki.eclipse.org/EGit/User_Guide#Fetch_Ref_Specifications">Fetch 
Ref Specifications</A> about the details. </P>
<P>If the <B>Configure Push</B> checkbox was selected, the next wizard page will 
ask for the URIs of the repositories to push to. This is actually a list, as you 
can push to multiple repositories at once. Click <B>Add....</B> to add URIs to 
the list using the same dialog as above. You can remove URIs by marking them in 
the list and hitting <B>Remove</B>. This step is completely optional if there is 
already a fetch URI defined. In this case, the fetch URI will also be used for 
push. If at least one push URI is defined in this steps, it will override the 
fetch URI. In this example, there is already a fetch URI, so the <B>Next</B> 
button is enabled, even though there is no Push URI in the list: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-repo-view-createRemoteWizardPush.png"><IMG 
width="622" height="449" alt="Egit-0.9-repo-view-createRemoteWizardPush.png" 
src="index.files/Egit-0.9-repo-view-createRemoteWizardPush.png"></A> </P>
<P>The next step is to define the Remote Specification for the push URIs. See <A 
href="http://wiki.eclipse.org/EGit/User_Guide#Push_Ref_Specifications">Push Ref 
Specifications</A> about the details. </P>
<P>Upon completion, the new Remote configuration will be visible: </P>
<P><A class="image" 
href="http://wiki.eclipse.org/File:RepoMgrRemoteCreated.png"><IMG width="352" 
height="180" alt="RepoMgrRemoteCreated.png" src="index.files/RepoMgrRemoteCreated.png"></A> 
</P>
<H5><SPAN class="mw-headline" id="Changing_Remote_Configurations">Changing 
Remote Configurations</SPAN></H5>
<P>It is also possible to add, remove, or change Fetch/Push Specifications for 
an existing Remote configuration using the context menu. </P>
<H5><SPAN class="mw-headline" id="Gerrit_Configuration">Gerrit 
Configuration</SPAN></H5>
<P>If you work with <A class="external text" href="http://code.google.com/p/gerrit/" 
rel="nofollow">Gerrit Code Review</A> as remote repository server you can </P>
<UL>
  <LI> specify the push configuration used to push changes to code review</LI>
  <LI> specify the fetch configuration to fetch the review notes from 
Gerrit</LI>
  <LI> configure your repository to select the <B>Compute Change-Id for Gerrit 
  Code Review</B> option in the Commit dialog by default</LI></UL>
<P>Select <B>Gerrit Configuration...</B> from the context menu of a Remote. This 
opens a wizard with one page: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-2.1-clone-wizard-gerrit-page.png"><IMG 
width="525" height="433" alt="Egit-2.1-clone-wizard-gerrit-page.png" src="index.files/Egit-2.1-clone-wizard-gerrit-page.png"></A> 
</P>
<UL>
  <LI> When you click <B>Finish</B> the wizard sets the repository configuration 
  parameter <B>gerrit.createchangeid</B> to <I>true</I>. This ensures that the 
  checkbox <B>Compute Change-Id for Gerrit Code Review</B> in the Commit dialog 
  is selected by default. See <A class="external text" href="http://wiki.eclipse.org/EGit/User_Guide#Commit_Message" 
  rel="nofollow">Commit Message</A> for details.</LI></UL>
<UL>
  <LI> If you want to configure automatic Change-Id insertion at a later point 
  in time you may use the repository configuration editor (<B>Preferences &gt; 
  Team &gt; Git &gt; Configuration</B>) to set the configuration parameter 
  <B>gerrit.createchangeid</B> to true. If you want this configuration for all 
  your repositories you may put it into ~/.gitconfig then you don't need to 
  repeat this configuration for every new repository you happen to work 
on.</LI></UL>
<UL>
  <LI> Additionally the wizard adds a refspec "refs/notes/*:refs/notes/*" to 
  your fetch specification. Gerrit stores data about the review in git notes. 
  With this refspec these review data will be fetched automatically when you 
  fetch from this remote and they will be displayed in the commit 
viewer.</LI></UL>
<UL>
  <LI> In the section <B>Push URI</B> you can configure the URI which is used 
  for the default push configuration. It is pre-filled depending on the URI you 
  are cloning from. If you clone with the git protocol, the protocol is 
  automatically changed to ssh, and the default Gerrit ssh port 29418 is 
  automatically added. For protocols which require a user there is a user field 
  for convenience.</LI></UL>
<UL>
  <LI> The section <B>Push Configuration</B> has one field, <B>Destination 
  Branch</B>. Here you should enter the name of the target branch where changes 
  accepted in the Gerrit code review workflow will be submitted to. This yields 
  an entry <TT>HEAD:refs/for/&lt;branchname&gt;</TT> in the push configuration 
  of the remote you specified in the clone wizard.</LI></UL>
<UL>
  <LI> Repositories which have been configured for Gerrit are displayed with the 
  green Gerrit decorator</LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-RepositoryGerritDeco.png"><IMG 
width="197" height="74" alt="Egit-3.1-RepositoryGerritDeco.png" src="index.files/Egit-3.1-RepositoryGerritDeco.png"></A> 
</P>
<H3><SPAN class="mw-headline" id="Refresh">Refresh</SPAN></H3>
<P>The view is auto-refreshed periodically. The <B>Refresh</B> button in the 
toolbar allows to trigger an immediate refresh: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:RepoMgrRefresh.png"><IMG 
width="450" height="27" alt="RepoMgrRefresh.png" src="index.files/RepoMgrRefresh.png"></A> 
</P>
<H3><SPAN class="mw-headline" id="Link_with_Selection">Link with 
Selection</SPAN></H3>
<P>If the <B>Link with selection</B> toggle is enabled, the file or folder 
corresponding to the current workbench selection will be displayed 
automatically: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:RepoMgrLinkWithSelection.png"><IMG 
width="674" height="431" alt="RepoMgrLinkWithSelection.png" src="index.files/RepoMgrLinkWithSelection.png"></A> 
</P>
<H3><SPAN class="mw-headline" id="Link_with_Editor">Link with Editor</SPAN></H3>
<P>If the <B>Link with editor</B> toggle is enabled, the file or folder 
corresponding to the currently active editor will be displayed automatically: 
</P>
<P><A class="image" href="http://wiki.eclipse.org/File:RepoMgrLinkWithEditor.png"><IMG 
width="428" height="25" alt="RepoMgrLinkWithEditor.png" src="index.files/RepoMgrLinkWithEditor.png"></A> 
</P>
<H3><SPAN class="mw-headline" id="Hierarchical_Branch_Layout">Hierarchical 
Branch Layout</SPAN></H3>
<P>If the <B>Hierarchical Branch Layout</B> toggle is enabled, branches will be 
shown in a hierarchical layout using slash (/) as hierarchy separator: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:RepoMgrHierarchicalBranchLayout.png"><IMG 
width="937" height="297" alt="RepoMgrHierarchicalBranchLayout.png" src="index.files/RepoMgrHierarchicalBranchLayout.png"></A> 
</P>
<P>This can be helpful for organizing large numbers of branches. </P>
<H3><SPAN class="mw-headline" id="Bare_Repositories">Bare 
Repositories</SPAN></H3>
<P>"Bare" Git Repositories (as opposed to "development" or "standard" 
Repositories) have no working directory by definition, so all actions related to 
the working directory (check-out, project import, browsing the working 
directory) are not available for such Repositories. The "Bare-ness" of a 
Repository is visualized on the "Working Directory" node, which is always a 
leaf: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:RepoMgrBareRepository.png"><IMG 
width="412" height="107" alt="RepoMgrBareRepository.png" src="index.files/RepoMgrBareRepository.png"></A> 
</P>
<P>Bare repositories are only changed by pushing changes to them. </P>
<H3><SPAN class="mw-headline" id="Removing_Repositories_from_the_Git_Repositories_View">Removing 
Repositories from the Git Repositories View</SPAN></H3>
<P>This is offered as a menu action on the "Repository" node. Note that this 
does not delete the Repository, but just removes the node from the view. If 
there are projects in the workspace which are located in the working directory 
of the Repository, the user will be prompted to confirm deletion of these 
projects from the Eclipse workspace. </P>
<H3><SPAN class="mw-headline" id="Showing_Repository_in_Related_Views">Showing 
Repository in Related Views</SPAN></H3>
<H4><SPAN class="mw-headline" id="Show_in_History">Show in History</SPAN></H4>
<P>The command <B>Show in &gt; History</B> will open the <A href="http://wiki.eclipse.org/EGit/User_Guide#History_View">History 
View</A> showing all changes in the selected repository. </P>
<H4><SPAN class="mw-headline" id="Show_in_Reflog">Show in Reflog</SPAN></H4>
<P>The command <B>Show in &gt; Reflog</B> will open the <A href="http://wiki.eclipse.org/EGit/User_Guide#Git_Reflog_View">Git 
Reflog view</A> showing the Git reflog of the selected repository. </P>
<H4><SPAN class="mw-headline" id="Show_in_Properties">Show in 
Properties</SPAN></H4>
<P>The command <B>Show in &gt; Properties</B> will open the <A href="http://wiki.eclipse.org/EGit/User_Guide#Repository_Configuration">Properties 
view</A> showing the properties of the selected repository. </P>
<P><BR></P>
<H2><SPAN class="mw-headline" id="Working_with_Tasks">Working with 
Tasks</SPAN></H2>
<P>Since EGit 0.11 a first integration with Mylyn is available to support 
working with task repositories. </P>
<H3><SPAN class="mw-headline" id="Installation">Installation</SPAN></H3>
<P>You need to install the feature "EGit Mylyn" to use the EGit Mylyn 
integration. This requires also Mylyn to be installed. </P>
<H3><SPAN class="mw-headline" id="Commit_Message_Template">Commit Message 
Template</SPAN></H3>
<UL>
  <LI>Configure the Mylyn commit message template under <B>Preferences &gt; 
  Tasks &gt; Team</B> and edit <B>Commit Comment Template</B>.</LI>
  <LI>Use the following variables as well as any text to alter the commit 
  message. 
  <UL>
    <LI>connector.task.prefix, repository.kind, repository.url, task.assignee, 
    task.cc, task.description, task.id, task.key, task.keywords, 
    task.lastmodified, task.notes, task.priority, task.product, task.reporter, 
    task.resolution, task.status, task.summary, task.type, task.url, 
    task.completiondate, task.creationdate, task.reminderdate</LI></UL></LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.11-configure-commit-template.png"><IMG 
width="615" height="349" alt="Egit-0.11-configure-commit-template.png" src="index.files/Egit-0.11-configure-commit-template.png"></A> 
</P>
<UL>
  <LI>Before committing your change activate the corresponding Task using the 
  Mylyn UI.</LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.11-activate-task.png"><IMG 
width="329" height="93" alt="Egit-0.11-activate-task.png" src="index.files/Egit-0.11-activate-task.png"></A> 
</P>
<UL>
  <LI>When launching the commit dialog EGit will pre-populate the commit message 
  using the commit message template.</LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.11-commit-using-template.png"><IMG 
width="629" height="329" alt="Egit-0.11-commit-using-template.png" src="index.files/Egit-0.11-commit-using-template.png"></A> 
</P>
<P>See the <A class="external text" href="http://wiki.eclipse.org/index.php/Mylyn/User_Guide" 
rel="nofollow">Mylyn User Guide</A> for more information how to work with tasks. 
</P>
<H2><SPAN class="mw-headline" id="Viewing_Commits">Viewing Commits</SPAN></H2>
<P>The Egit commit viewer allows commits to be opened in the Eclipse editor 
area. </P>
<P>The EGit commit viewer displays the following commit information: </P>
<UL>
  <LI> Commit tab 
  <UL>
    <LI> Links to open parent commits</LI>
    <LI> Author</LI>
    <LI> Committer</LI>
    <LI> Message</LI>
    <LI> List of tags pointing to this commits</LI>
    <LI> List of branches that the commit exists on</LI></UL></LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Commit-editor-commit-page.png"><IMG 
width="723" height="440" alt="Commit-editor-commit-page.png" src="index.files/Commit-editor-commit-page.png"></A> 
</P>
<UL>
  <LI> Diff tab 
  <UL>
    <LI> Text viewer with the output of the file differences</LI>
    <LI> The colors used in the viewer can be configured from the 
    <B>Preferences</B> &gt; <B>General</B> &gt; <B>Appearance</B> &gt; <B>Colors 
    and Fonts</B> &gt; <I>Git</I> folder</LI></UL></LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Commit-editor-diff-page.png"><IMG 
width="721" height="437" alt="Commit-editor-diff-page.png" src="index.files/Commit-editor-diff-page.png"></A> 
</P>
<UL>
  <LI> Notes tab 
  <UL>
    <LI> All Git notes for the commit</LI></UL></LI></UL>
<P><A class="image" href="http://wiki.eclipse.org/File:Commit-editor-notes-page.png"><IMG 
width="722" height="440" alt="Commit-editor-notes-page.png" src="index.files/Commit-editor-notes-page.png"></A> 
</P>
<H3><SPAN class="mw-headline" id="Tagging_a_commit">Tagging a commit</SPAN></H3>
<UL>
  <LI> Select the Create Tag icon from the commit viewer toolbar 
  <UL>
    <LI> The Tag dialog will open allowing you to create a tag from the 
    commit.</LI></UL></LI></UL>
<H3><SPAN class="mw-headline" id="Creating_a_branch_from_a_commit">Creating a 
branch from a commit</SPAN></H3>
<UL>
  <LI> Select the Create Branch icon from the commit viewer toolbar. 
  <UL>
    <LI> The Branch dialog will open allowing you to create a new branch from 
    the commit</LI></UL></LI></UL>
<H3><SPAN class="mw-headline" id="Checking_out_a_commit">Checking out a 
commit</SPAN></H3>
<P>This checks out the commit displayed in the commit viewer. The commit will be 
checked out and <A href="http://wiki.eclipse.org/EGit/User_Guide#.22Detached.22_HEAD">HEAD 
will become detached</A>. </P>
<H3><SPAN class="mw-headline" id="Cherry_picking_a_commit">Cherry picking a 
commit</SPAN></H3>
<P>Applies the change introduced by the commit displayed in the commit viewer on 
top of the currently checked out commit or branch. </P>
<H3><SPAN class="mw-headline" id="Opening_the_commit_viewer">Opening the commit 
viewer</SPAN></H3>
<P>The commit viewer can be opened from the following places: </P>
<UL>
  <LI> History view table context menu</LI>
  <LI> Double-clicking commits in the Pull/Fetch dialog results table</LI>
  <LI><A href="http://wiki.eclipse.org/EGit/User_Guide#Open_commit_dialog">Open 
  commit dialog</A></LI>
  <LI><A href="http://wiki.eclipse.org/EGit/User_Guide#Finding_the_author_of_each_line_in_a_file">Blame 
  annotation popup</A></LI>
  <LI><A href="http://wiki.eclipse.org/EGit/User_Guide#Reflog_View">Reflog 
  View</A></LI></UL>
<H2><SPAN class="mw-headline" id="Searching_for_commits">Searching for 
commits</SPAN></H2>
<P>EGit supports searching for commits. </P>
<H3><SPAN class="mw-headline" id="Git_Search_page">Git Search page</SPAN></H3>
<P>Commits can be searched from the <B>Git Search</B> tab in the standard 
Eclipse Search dialog. </P>
<P>This dialog supports searching for text or patterns present in the different 
fields of a Git commit such as the message, author line, committer line, and the 
SHA-1 ids of the commit, its parent(s), and the tree associated with it. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Git-search-page.png"><IMG 
width="735" height="469" alt="Git-search-page.png" src="index.files/Git-search-page.png"></A> 
</P>
<H3><SPAN class="mw-headline" id="Browsing_Search_Results">Browsing Search 
Results</SPAN></H3>
<P>Commit search results are displayed in the standard Eclipse Search view. 
Results are grouped by repository when in Tree mode. Double-clicking a commit 
from the Search view will open it in the <A href="http://wiki.eclipse.org/EGit/User_Guide#Viewing_Commits">commit 
viewer</A>. </P>
<P><A class="image" 
href="http://wiki.eclipse.org/File:Git-search-results.png"><IMG width="837" 
height="315" alt="Git-search-results.png" src="index.files/Git-search-results.png"></A> 
</P>
<H3><SPAN class="mw-headline" id="Launching_Git_Search">Launching Git 
Search</SPAN></H3>
<P>The Git Search page can be opened by selecting the Git Search option from the 
Search drop-down on the Eclipse toolbar. </P>
<P><A class="image" 
href="http://wiki.eclipse.org/File:Git-search-dropdown.png"><IMG width="441" 
height="220" alt="Git-search-dropdown.png" src="index.files/Git-search-dropdown.png"></A> 
</P>
<H3><SPAN class="mw-headline" id="Open_commit_dialog">Open commit 
dialog</SPAN></H3>
<P>EGit has an <B>Open Git Commit</B> dialog similar to the Mylyn <B>Open 
Task</B> and core<B> Open Resource</B> dialogs. The dialog searches every 
configured Git repository for the branch, tag, or commit SHA-1 entered into the 
filter box and displays the matching commits. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Git-open-commit.png"><IMG 
width="608" height="448" alt="Git-open-commit.png" src="index.files/Git-open-commit.png"></A> 
</P>
<P>The dialog can be opened by selecting the <B>Open Git Commit</B> button on 
the Eclipse navigation toolbar. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Git-open-commit-toolbar.png"><IMG 
width="476" height="184" alt="Git-open-commit-toolbar.png" src="index.files/Git-open-commit-toolbar.png"></A> 
</P>
<H2><SPAN class="mw-headline" 
id="Finding_the_author_of_each_line_in_a_file">Finding the author of each line 
in a file</SPAN></H2>
<P>EGit supports showing <I>git blame</I> information inside the editor ruler. 
</P>
<P>Selecting the <B>Team</B> &gt; <B>Show Annotations</B> action on file 
selections will open the editor and display an annotation ruler with commit and 
author information for each line in a file.  Hovering over the ruler will 
display a pop-up showing the commit id, author, committer, commit message and 
the diff applied by this commit on the selected hunk. </P>
<P>The look and feel of the blame annotation editor ruler can be configured from 
the <B>Revisions</B> sub-menu available from the ruler context-menu. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.2-BlameImprovements.png"><IMG 
width="714" height="596" alt="Egit-3.2-BlameImprovements.png" src="index.files/Egit-3.2-BlameImprovements.png"></A> 
</P>
<P>Click <B>open commit</B> to open the commit in the <A href="http://wiki.eclipse.org/EGit/User_Guide#Viewing_Commits">commit 
viewer</A>, click <B>show in history</B> to show the commit in the History View. 
Click <B>show annotations</B> to show annotations of the parent commit of the 
commit shown in the hover. </P>
<H2><SPAN class="mw-headline" id="Working_with_Submodules">Working with 
Submodules</SPAN></H2>
<P>You can read more about what Git submodules are and how they work in this <A 
class="external text" href="http://book.git-scm.com/5_submodules.html" rel="nofollow">Git 
Community Book chapter</A>. </P>
<H3><SPAN class="mw-headline" id="Cloning_Repositories_with_Submodules">Cloning 
Repositories with Submodules</SPAN></H3>
<P>Submodules are repositories nested inside a parent repository.  Therefore 
when doing a clone of a parent repository it is necessary to clone the submodule 
repositories so that the files/folders are available in the parent repository's 
working directory. </P>
<P>Checking the <I>Clone Submodules</I> button from the <B>Git Clone</B> wizard 
will clone all submodule repositories after the clone of the parent repository 
finishes. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-13-clone-submodules-wizard.png"><IMG 
width="535" height="572" alt="Egit-13-clone-submodules-wizard.png" src="index.files/Egit-13-clone-submodules-wizard.png"></A> 
</P>
<P><BR></P>
<H3><SPAN class="mw-headline" id="Browsing_Submodules">Browsing 
Submodules</SPAN></H3>
<P>There is a <I>Submodules</I> node displayed in the <B>Git Repositories</B> 
view for repository's that contain submodules. </P>
<P>All submodules in the given parent repository are displayed under this node 
as well as information about what commit is currently checked out. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-13-submodules-node.png"><IMG 
width="604" height="509" alt="Egit-13-submodules-node.png" src="index.files/Egit-13-submodules-node.png"></A> 
</P>
<H3><SPAN class="mw-headline" id="Adding_a_Submodule">Adding a 
Submodule</SPAN></H3>
<P>You can add a new submodule to a repository by selecting a repository in the 
<B>Git Repositories</B> view and selecting the <I>Add Submodule</I> context menu 
option. </P>
<P>The wizard will prompt for the path and URL of the submodule being added.  
The path entered will be relative to the parent repository's working directory 
and the URL will be used to clone the repository locally. </P>
<P>Once the wizard is completed the submodule will be cloned, added to the 
index, and the submodule will be registered in the <I>.gitmodules</I> file as 
well as in the parent repository's <I>.git/config</I> file. </P>
<H3><SPAN class="mw-headline" id="Updating_Submodules">Updating 
Submodules</SPAN></H3>
<P>There are two actions that can be used to update submodules, <I>Update 
Submodule</I> and <I>Sync Submodule</I>. </P>
<P>Selecting the <I>Update Submodule</I> action on a submodule will check out 
the commit referenced in the parent repository's index for that submodule.  This 
command will also perform a merge or rebase if that has been configured in the 
<I>update</I> field for the selected submodule's configuration section in the 
parent repository's <I>.git/config</I> file. </P>
<P>Selecting the <I>Sync Submodule</I> action on a submodule will update the 
remote URL used by the submodule from the current value in the 
<I>.gitmodules</I> file at the root of the working directory of the parent 
repository. </P>
<H2><SPAN class="mw-headline" id="Team_Project_Sets">Team Project 
Sets</SPAN></H2>
<P>Team project sets (<TT>.psf</TT> files) are supported by the Git team 
provider. </P>
<H3><SPAN class="mw-headline" id="Import">Import</SPAN></H3>
<P>To import an existing project set, use the <I>Import...</I> wizard and then 
select <I>Team Project Set</I> from <I>Team</I>. </P>
<P>You can then select a file which contains the import definitions and 
optionally choose to add imported projects to a working set. </P>
<P>In the next step, the repositories are cloned, the projects imported and 
connected. This can take a while depending on the size of the repositories. </P>
<H3><SPAN class="mw-headline" id="Export">Export</SPAN></H3>
<P>To create a project set file for existing Git projects, select the 
projects/working sets which are already connected to the Git team provider. </P>
<P>Then open the <I>Export...</I> wizard and select <I>Team Project Set</I> from 
<I>Team</I>. There you can choose to export working sets or projects only and 
can refine your selection. In the next step, select an output path and finish 
the wizard. </P>
<H3><SPAN class="mw-headline" id="Format">Format</SPAN></H3>
<P>You can also manually edit a <TT>.psf</TT> file. Each project has an entry 
which looks like this: </P>
<PRE>&lt;project reference="1.0,git://egit.eclipse.org/egit.git,master,org.eclipse.egit"/&gt;
</PRE>
<P>The values are separated by commas and have the following meaning: </P>
<OL>
  <LI> Format version</LI>
  <LI> Git repository URL</LI>
  <LI> Name of branch to initially check out</LI>
  <LI> Path to the project to import (folder which contains <TT>.project</TT>), 
  relative to the repository</LI></OL>
<P>Each project has one entry. So for multiple projects in the same repository, 
create such an entry for each project with the same repository URL. The import 
is smart enough to only clone each repository once. </P>
<P>If the repository contains a project at the root, use <TT>.</TT> as the 
project path. </P>
<H1><SPAN class="mw-headline" id="Reference">Reference</SPAN></H1>
<H2><SPAN class="mw-headline" id="Menus">Menus</SPAN></H2>
<H3><SPAN class="mw-headline" id="Project_Context_Menu">Project Context 
Menu</SPAN></H3>
<P>On project nodes in navigation views (Navigator, Package Explorer etc.) the 
following Git actions are available for projects shared with the Git team 
provider: </P>
<P><BR></P>
<P><I>main project menu</I> </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-ProjectMenu-Main.png"><IMG 
width="209" height="426" alt="Egit-3.1-ProjectMenu-Main.png" src="index.files/Egit-3.1-ProjectMenu-Main.png"></A> 
</P>
<P><I>"Remote" sub-menu</I> </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-ProjectMenu-Remote.png"><IMG 
width="235" height="84" alt="Egit-3.1-ProjectMenu-Remote.png" src="index.files/Egit-3.1-ProjectMenu-Remote.png"></A> 
</P>
<P><I>"Switch To" sub-menu</I> </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-1.2-project-menu-switchto.png"><IMG 
width="179" height="304" alt="Egit-1.2-project-menu-switchto.png" src="index.files/Egit-1.2-project-menu-switchto.png"></A> 
</P>
<P><I>"Advanced" sub-menu</I> </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-ProjectMenuAdvanced2.png"><IMG 
width="402" height="253" alt="Egit-3.1-ProjectMenuAdvanced2.png" src="index.files/Egit-3.1-ProjectMenuAdvanced2.png"></A> 
</P>
<P><BR></P>
<H3><SPAN class="mw-headline" id="Resource_Context_Menu">Resource Context 
Menu</SPAN></H3>
<P>On resource nodes (files and folders) in navigation views the following Git 
actions are available for projects shared with the Git team provider: <BR><A 
class="image" href="http://wiki.eclipse.org/File:Egit-3.1-ResourceMenu.png"><IMG 
width="352" height="455" alt="Egit-3.1-ResourceMenu.png" src="index.files/Egit-3.1-ResourceMenu.png"></A> 
</P>
<H3><SPAN class="mw-headline" id="Repositories_View_Menus">Repositories View 
Menus</SPAN></H3>
<P>In the Repositories View the menu depends on the node type which is selected 
<BR><A class="image" 
href="http://wiki.eclipse.org/File:Egit-0.10-repoview.png"><IMG width="450" 
height="467" alt="Egit-0.10-repoview.png" src="index.files/Egit-0.10-repoview.png"></A> 
</P>
<P>Menu on repository nodes:<BR><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-ResourceMenu.png"><IMG 
width="352" height="455" alt="Egit-3.1-ResourceMenu.png" src="index.files/Egit-3.1-ResourceMenu.png"></A> 
</P>
<P>Menu on branch nodes:<BR><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-RepoViewBranch.png"><IMG 
width="221" height="245" alt="Egit-3.1-RepoViewBranch.png" src="index.files/Egit-3.1-RepoViewBranch.png"></A> 
</P>
<P>Menu on tag nodes:<BR><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-RepoViewTag.png"><IMG 
width="359" height="240" alt="Egit-3.1-RepoViewTag.png" src="index.files/Egit-3.1-RepoViewTag.png"></A> 
</P>
<P>Menu on Reference nodes:<BR><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-RepoViewReference.png"><IMG 
width="218" height="67" alt="Egit-3.1-RepoViewReference.png" src="index.files/Egit-3.1-RepoViewReference.png"></A> 
</P>
<P>Menu on Remote nodes:<BR><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-RepoViewRemote.png"><IMG 
width="220" height="153" alt="Egit-3.1-RepoViewRemote.png" src="index.files/Egit-3.1-RepoViewRemote.png"></A> 
</P>
<P>Menu on Fetch Configuration nodes:<BR><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-RepoViewFetchConfig.png"><IMG 
width="362" height="190" alt="Egit-3.1-RepoViewFetchConfig.png" src="index.files/Egit-3.1-RepoViewFetchConfig.png"></A> 
</P>
<P>Menu on Push Configuration nodes:<BR><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-RepoViewPushConfig.png"><IMG 
width="362" height="193" alt="Egit-3.1-RepoViewPushConfig.png" src="index.files/Egit-3.1-RepoViewPushConfig.png"></A> 
</P>
<P>Menu on Working Tree nodes:<BR><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-RepoViewWorkingDir.png"><IMG 
width="363" height="153" alt="Egit-3.1-RepoViewWorkingDir.png" src="index.files/Egit-3.1-RepoViewWorkingDir.png"></A> 
</P>
<H3><SPAN class="mw-headline" id="History_View_Menus">History View 
Menus</SPAN></H3>
<P>Menu on entries in the History View's commit list </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-HistoryViewMain.png"><IMG 
width="473" height="357" alt="Egit-3.1-HistoryViewMain.png" src="index.files/Egit-3.1-HistoryViewMain.png"></A> 
</P>
<P>Menu entries in the History View's Quickdiff sub menu </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-HistoryViewQuickDiff.png"><IMG 
width="274" height="53" alt="Egit-3.1-HistoryViewQuickDiff.png" src="index.files/Egit-3.1-HistoryViewQuickDiff.png"></A> 
</P>
<H3><SPAN class="mw-headline" 
id="Git_Workbench_Toolbar_and_Git_Workbench_Menu">Git Workbench Toolbar and Git 
Workbench Menu</SPAN></H3>
<P>In order to ease use of the most frequently used Git actions the <B>Git 
Command Group</B> can be activated to show a Git Workbench Toolbar and/or Menu 
</P>
<UL>
  <LI>Click <B>Window &gt; Customize perspective...</B></LI>
  <LI> in the tab <B>Command Groups Availability</B> click <B>Git</B>, this will 
  enable both the Git workbench toolbar and menu</LI>
  <LI> in the tabs <B>Toolbar Visibility</B> and <B>Menu Visibility</B> you may 
  configure which actions should appear in the Git Workbench toolbar and 
  menu</LI></UL>
<P><A class="image" 
href="http://wiki.eclipse.org/File:Egit-3.1-GitToolbar.png"><IMG width="307" 
height="77" alt="Egit-3.1-GitToolbar.png" src="index.files/Egit-3.1-GitToolbar.png"></A> 
<BR><BR></P>
<P><A class="image" 
href="http://wiki.eclipse.org/File:Egit-3.1-GitMenu.png"><IMG width="178" 
height="186" alt="Egit-3.1-GitMenu.png" 
src="index.files/Egit-3.1-GitMenu.png"></A> <BR><BR></P>
<H3><SPAN class="mw-headline" id="Menu_Actions">Menu Actions</SPAN></H3>
<UL>
  <LI><A href="http://wiki.eclipse.org/EGit/User_Guide#Track_Changes">Add</A> 
  <UL>
    <LI>Add changes present in the working tree to the git index, also known as 
    staging changes.</LI>
    <LI>Put newly created resources under git version control (Git does not 
    automatically start tracking resources).</LI>
    <LI><A href="http://wiki.eclipse.org/EGit/User_Guide#Adding_conflict_resolution_to_the_git_index">Resolve 
    conflicts</A>.</LI></UL></LI>
  <LI><A href="http://wiki.eclipse.org/EGit/User_Guide#Applying_Patches">Apply 
  Patch</A> - Apply a patch.</LI>
  <LI><B>Assume unchanged</B> - Resources can be flagged "assume unchanged". 
  This means that Git stops checking the working tree files for possible 
  modifications, so you need to manually unset the bit to tell Git when you 
  change the working tree file. This setting can be switched on with the menu 
  action <B>Team &gt; Assume unchanged</B> and switched back with the menu 
  action <B>Team &gt; No Assume unchanged</B>.</LI>
  <LI><A href="http://wiki.eclipse.org/EGit/User_Guide#Branching">Branch</A>, <A 
  href="http://wiki.eclipse.org/EGit/User_Guide#Create_Branch...">Create 
  Branch</A> - Checkout a branch or create a branch.</LI>
  <LI><B>Change Credentials</B> - Change logon credentials of a Fetch or Push 
  Specification, credentials are stored per URL in the Eclipse Secure 
Store.</LI>
  <LI><B>Checkout</B> - Checkout a <A href="http://wiki.eclipse.org/EGit/User_Guide#Check-out_of_Branches_and_Tags">Branch, 
  Tag</A>, <A href="http://wiki.eclipse.org/EGit/User_Guide#Checkout">Commit</A> 
  or Reference.</LI>
  <LI><A 
  href="http://wiki.eclipse.org/EGit/User_Guide#Cherry_Picking">Cherry-pick</A> 
  - Cherry-pick a single commit onto the tip of the currently checked out 
  branch.</LI>
  <LI><B>Clear Credentials</B> - Clear logon credentials of a Fetch or Push 
  Specification, credentials are stored per URL in the Eclipse Secure 
Store.</LI>
  <LI><A 
  href="http://wiki.eclipse.org/EGit/User_Guide#Committing_Changes">Commit</A> - 
  Commit changes.</LI>
  <LI><B>Delete Fetch</B> - Delete a Fetch Specification.</LI>
  <LI><B>Delete Push</B> - Delete a Push Specification.</LI>
  <LI><A href="http://wiki.eclipse.org/EGit/User_Guide#Direct_Fetch_and_Push_Support">Configure 
  Fetch</A> - Configure a Fetch Specification.</LI>
  <LI><A href="http://wiki.eclipse.org/EGit/User_Guide#Direct_Fetch_and_Push_Support">Configure 
  Push</A> - Configure a Push Specification.</LI>
  <LI><A href="http://wiki.eclipse.org/EGit/User_Guide#Creation_and_Deletion_of_Branches">Delete 
  Branch</A> - Delete a branch.</LI>
  <LI><A 
  href="http://wiki.eclipse.org/EGit/User_Guide#Deleting_a_Repository">Delete 
  Repository</A> - Delete a repository.</LI>
  <LI><B>Disconnect</B> - Disconnect the attached Git Team Provider from this 
  project. The git repository still exists but is no longer integrated with 
  Eclipse.</LI>
  <LI><A href="http://wiki.eclipse.org/EGit/User_Guide#Git_Ignore">Ignore</A> - 
  Add files to .gitignore so that git ignores them.</LI>
  <LI><A href="http://wiki.eclipse.org/EGit/User_Guide#Method_for_importing_Projects">Import 
  Projects</A> - Import projects into the Eclipse workbench.</LI>
  <LI><A href="http://wiki.eclipse.org/EGit/User_Guide#Merging">Merge</A> - 
  Merge branches.</LI>
  <LI><A href="http://wiki.eclipse.org/EGit/User_Guide#Using_Merge_Tool">Merge 
  Tool</A> - Resolve conflicts using the Merge Tool.</LI>
  <LI><A 
  href="http://wiki.eclipse.org/EGit/User_Guide#Repository_Configuration">Open 
  Properties View</A> - View and edit the repository configuration.</LI>
  <LI><A href="http://wiki.eclipse.org/EGit/User_Guide#Pulling_New_Changes_from_Upstream_Repositories">Pull</A> 
  - Pull changes from remote branch tracked by currently checked out local 
  branch.</LI>
  <LI><B>Remote &gt; </B><A href="http://wiki.eclipse.org/EGit/User_Guide#Fetching_from_other_Repositories">Fetch 
  From</A> - Fetch changes from a remote repository</LI>
  <LI><B>Remote &gt;</B> <A href="http://wiki.eclipse.org/EGit/User_Guide#Fetching_a_change_from_a_Gerrit_Code_Review_Server">Fetch 
  from Gerrit</A> - Fetch changed from a Gerrit Code Review Server</LI>
  <LI><B>Remote &gt;</B> <A href="http://wiki.eclipse.org/EGit/User_Guide#Pushing_to_other_Repositories">Push</A> 
  - Push changes to other repositories<BR></LI>
  <LI><B>Remote &gt;</B> <A href="http://wiki.eclipse.org/EGit/User_Guide#Configuring_upstream_fetch">Configure 
  Fetch from Upstream</A> - Configure Upstream for automated fetch</LI>
  <LI><B>Remote &gt;</B> <A href="http://wiki.eclipse.org/EGit/User_Guide#Configuring_upstream_push">Configure 
  Push to Upstream</A> - Configure upstream for automated push<BR></LI>
  <LI><A href="http://wiki.eclipse.org/EGit/User_Guide#Rebasing">Rebase</A> - 
  Rebase a branch onto another one.</LI>
  <LI><A href="http://wiki.eclipse.org/EGit/User_Guide#Removing_a_Repository_from_the_Repositories_View">Remove 
  Repository</A> - Remove a repository from the Repositories View.</LI>
  <LI><A href="http://wiki.eclipse.org/EGit/User_Guide#Renaming_an_Existing_Branch">Rename 
  Branch</A> - Rename a branch.</LI>
  <LI><A href="http://wiki.eclipse.org/EGit/User_Guide#Resetting_your_current_HEAD">Reset</A> 
  - Reset the current HEAD, Index or Working Tree.</LI>
  <LI><A href="http://wiki.eclipse.org/EGit/User_Guide#History_View">Show in 
  History</A> - Show the selected resource in the History View.</LI>
  <LI><A 
  href="http://wiki.eclipse.org/EGit/User_Guide#Managing_Repositories">Show in 
  Repositories View</A> - Show the selected resource in the Repositories 
  View.</LI>
  <LI><A href="http://wiki.eclipse.org/EGit/User_Guide#Checking_out_an_existing_Branch">Switch 
  to...</A> - Switch to (also known as checkout) another branch or tag.</LI>
  <LI><A href="http://wiki.eclipse.org/EGit/User_Guide#Comparing_with_Branches_.28Synchronize.29">Synchronize</A> 
  - Synchronize local and remote branches with each other.</LI>
  <LI><A href="http://wiki.eclipse.org/EGit/User_Guide#Tagging">Tag</A> - 
  Create, delete tags.</LI>
  <LI><B>Untrack</B> - Remove resources from git version control. If you want to 
  delete the resource from the working tree click also <B>Delete</B> in the 
  resource's context menu.</LI></UL>
<P><BR></P>
<H2><SPAN class="mw-headline" id="Git_Perspective_and_Views">Git Perspective and 
Views</SPAN></H2>
<H3><SPAN class="mw-headline" id="Git_Perspective">Git Perspective</SPAN></H3>
<P><B>Window &gt; Open Perspective &gt; Git Repository Exploring</B> opens the 
Git Repository Exploring perspective </P>
<H3><SPAN class="mw-headline" id="Git_Repositories_View">Git Repositories 
View</SPAN></H3>
<P><B>Window &gt; Open View &gt; Git &gt; Git Repositories</B> opens the Git 
Repositories view which is explained in detail <A href="http://wiki.eclipse.org/EGit/User_Guide#Managing_Repositories">here</A>. 
</P>
<H3><SPAN class="mw-headline" id="History_View">History View</SPAN></H3>
<H4><SPAN class="mw-headline" id="Overview_2">Overview</SPAN></H4>
<P>The History View for Resources under Git version control is a commit-centric 
view of the resources in a given Repository. It can be used to perform the 
following tasks: </P>
<UL>
  <LI> Inspecting the change history of a given File under Git version control 
  (viewing and comparing the versions of such a File in the Repository)</LI>
  <LI> Search for a certain commit using different search criteria</LI>
  <LI> Check-out of a certain commit</LI>
  <LI> Creation of branches and tags based on a certain commit</LI>
  <LI> Creation of patches based on the changes in a certain commit</LI>
  <LI> Resetting the complete Repository to a certain commit</LI>
  <LI> Setting and resetting of the quickdiff baseline to a certain 
commit</LI></UL>
<H4><SPAN class="mw-headline" id="Opening_the_History_View">Opening the History 
View</SPAN></H4>
<P>The History view can be opened by </P>
<UL>
  <LI> Right-clicking <B>Show In &gt; History View</B> on any resource under Git 
  version control in the explorer (not available in all Perspectives)</LI>
  <LI> Right-clicking <B>Team &gt; Show in History</B> on any resource under Git 
  version control in the explorer</LI>
  <LI> Clicking <B>Window &gt; Show View &gt; Other...</B>, then <B>Team &gt; 
  History</B></LI></UL>
<P>Once the view is open, you can activate the <B>Link with Selection</B> button 
to keep the input of the view in sync with the selection in the explorer 
automatically. </P>
<H4><SPAN class="mw-headline" id="Organization_of_the_History_View">Organization 
of the History View</SPAN></H4>
<P>The History view is organized in several panes: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-history-view.png"><IMG 
width="784" height="398" alt="Egit-0.9-history-view.png" src="index.files/Egit-0.9-history-view.png"></A> 
</P>
<P>The upper pane is the Commit Graph displaying the commit log (or commit 
history) in reverse chronological order (newest commit on top). Below the commit 
graph, there are by default two panes: on the left side, the Revision Comment 
area, which shows the commit message and a textual Diff of the file or files in 
the commit, and on the right side, the Revision Detail area, which shows a table 
of the files that were changed by the commit. </P>
<P>The first column of this table describes the nature of the change for each 
file: </P>
<DL>
  <DD><B>ADD</B> &nbsp;the file was added by the commit</DD>
  <DD><B>MODIFY</B> &nbsp;the file was modified by the commit</DD>
  <DD><B>DELETE</B> &nbsp;the file was deleted by the commit</DD></DL>
<P>The content of the lower panes depends on the selection in the upper pane and 
is updated automatically when this selection changes. </P>
<P>Both lower panes can be switched on and off separately by right-clicking 
anywhere in the upper pane and selecting <B>Show Revision Comment</B> and 
<B>Show Revision Details</B>, respectively. </P>
<P>Above the Commit Graph, the current input is visualized. The input is always 
a workspace resource, either a project, a folder, or a file. After the type of 
the input, the path is shown, followed by the name of the Repository containing 
the resource in square brackets. </P>
<H4><SPAN class="mw-headline" id="Using_the_History_View">Using the History 
View</SPAN></H4>
<H5><SPAN class="mw-headline" id="Inspecting_the_Commit_Graph">Inspecting the 
Commit Graph</SPAN></H5>
<P>The Commit Graph area is the main part of the History View. By default, it 
shows the currently checked out commit and all its ancestors, i.e. the first 
entry in the list is the checked out commit. The following picture is used to 
explain some of the features of the History View: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-history-view-branchAndMerge.png"><IMG 
width="818" height="445" alt="Egit-0.9-history-view-branchAndMerge.png" src="index.files/Egit-0.9-history-view-branchAndMerge.png"></A> 
</P>
<P>Each line in the Commit Graph corresponds to a commit. Branches, tags and 
HEAD are visualized as follows: </P>
<UL>
  <LI>The tips of local branches are shown as green rectangles</LI>
  <LI>The tips of remote branches are shown as grey rectangles</LI>
  <LI>The local HEAD is shown as a white rectangle</LI>
  <LI>Tags are shown as yellow rectangles</LI></UL>
<P>(our example doesn't have remote branches). </P>
<P>The line on the left side is the actual commit graph, which shows the 
parent-child relation of the commits in the list (each commit has at least one 
parent, except for the very first commit in a Repository). There can be forks, 
which correspond to a branch operation, and joins, which correspond to a merge 
operation. In our example, there was a branch "experimental" created after the 
commit with branch "beforeSplit", and the same file was changed both in the 
"master" and in the "experimental" branch. The last commit is a merge commit 
where the content of the "experimental" branch was merged with the "master" 
branch. </P>
<P>The exact change can be inspected by marking a commit and looking at the 
Revision Comment area. When scrolling down in the Revision Comment area, a 
textual diff for the changes will be visible, in our example it says that the 
content of Project1/f1/file1.txt was changed from "modified" to "modified in 
master". When selecting the next commit (which corresponds to the "experimental" 
branch), a similar diff would be displayed, saying that the content of that file 
was changed from "modified" to "modified in experimental". The newest commit is 
the result of merging "experimental" into "master". Accordingly, the new commit 
has two ancestors and the "master" and "experimental" lines are joined again. 
</P>
<H5><SPAN class="mw-headline" 
id="Displaying_and_Comparing_versions_of_a_File">Displaying and Comparing 
versions of a File</SPAN></H5>
<P>If the current input is already a file, right-clicking <B>Open</B> on a 
commit will open an editor with the file content corresponding to the currently 
selected commit. If the file does not exist in the selected commit, an error 
message will be displayed. Clicking <B>Compare with working tree</B> will open a 
compare editor comparing the file content of the currently selected commit with 
the file content in the workspace. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-history-view-openAndCompare.png"><IMG 
width="1355" height="420" alt="Egit-0.9-history-view-openAndCompare.png" src="index.files/Egit-0.9-history-view-openAndCompare.png"></A> 
</P>
<P>The <B>Open</B> and <B>Compare with working tree</B> actions can also be 
executed by double-clicking on a commit: if the "Compare Mode" toolbar button 
(see below) is down, <B>Compare with working tree</B> will be executed, 
otherwise <B>Open</B>. </P>
<P>It is possible to compare the contents of two commits filtered by the current 
input by selecting the two commits and right-clicking on <B>Compare with each 
other</B>. If the current input is not a file, there is an additional menu 
action <B>Compare with each other in Tree</B>. The first action opens an Eclipse 
compare editor, the second opens the <A href="http://wiki.eclipse.org/EGit/User_Guide#Git_Tree_Compare_View">Git 
Tree Compare View</A>. </P>
<P>Furthermore, it is possible to select any number of commits and right-click 
<B>Open</B> to see all versions of the file corresponding to the selected 
commits (one editor will be opened per version). </P>
<P>If the current input is not a file, then there won't be menu actions for 
<B>Open</B>. However, it is possible to double-click on an entry the Revision 
Detail area. If compare mode is active, a compare editor will be opened showing 
the changes for the file being double-clicked in the currently selected commit 
(i.e. a diff of the file content in the currently selected commit against the 
file content of this commit's ancestor). If compare mode is not active, an 
editor with the file content corresponding to the currently selected commit is 
shown. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-history-view-openAndCompareFromDetails.png"><IMG 
width="1600" height="341" alt="Egit-0.9-history-view-openAndCompareFromDetails.png" 
src="index.files/Egit-0.9-history-view-openAndCompareFromDetails.png"></A> </P>
<H5><SPAN class="mw-headline" id="Working_with_the_Filter_Settings">Working with 
the Filter Settings</SPAN></H5>
<P>The filter settings can be changed using the corresponding toolbar actions 
(see below). By default, the "Resource" setting is active, i.e. only those 
commits are shown in the list that contain changes for the current input. If the 
current input is not a file, all commits are shown that contain changes for any 
child of the current input. </P>
<P>If the filter setting is "Resource" and the current input is a file, then the 
list of commits contains only those commits that contain changes for that file. 
This is useful when analyzing the history of that file. In some cases, however, 
it is helpful to also see other commits which do not change the actual file. For 
example, it may be interesting to see whether a given change in the file was 
before or after some other commit which does not change that file itself. In our 
example, we might want to know whether a given change was "before" or "after" 
the commit tagged as "Project1". By changing the filter setting from "Resource" 
to "Repository", this is easily done: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-history-view-filtersettings.png"><IMG 
width="965" height="214" alt="Egit-0.9-history-view-filtersettings.png" src="index.files/Egit-0.9-history-view-filtersettings.png"></A> 
</P>
<P>The behavior of the other two settings ("Folder" and "Project") is similar in 
that they include the commits that change any resource in the parent folder of 
the current input or any resource in the project of the current input, 
respectively. In our example above, if filter setting "Project" would be used, 
the commit "Add Project2 to Repository" would not be shown, is it doesn't change 
anything in the project of the current input (Project1/f1/file1.txt). </P>
<P>Alternatively, in order to see all commits pertaining to a specific project, 
one could change the history view input to that project. However, the 
file-specific menu actions would then not be available. </P>
<H4><SPAN class="mw-headline" id="Toolbar_actions">Toolbar actions</SPAN></H4>
<P>The first four buttons in the History View's toolbar are the standard buttons 
for Refresh, Link with Selection, Pinning and Navigation History. </P>
<H5><SPAN class="mw-headline" id="Find">Find</SPAN></H5>
<P>If the "Find" toolbar button is down, a search bar is displayed in the lower 
part of the view which allows to search for commits in the commit log. Depending 
on the setting in the drop-down list in the search bar the commit's title, 
comment, author or committer are searched. </P>
<P>The found search hits are high-lighted in bold and the "Next" and "Previous" 
buttons allow to jump to the next or previous commit matching the search 
criteria: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-history-view-search.png"><IMG 
width="900" height="661" alt="Egit-0.9-history-view-search.png" src="index.files/Egit-0.9-history-view-search.png"></A> 
</P>
<H5><SPAN class="mw-headline" id="Filter_settings">Filter settings</SPAN></H5>
<P>The next four toggle buttons in the view toolbar control how the displayed 
commits are filtered with respect to the current input:<BR><A class="image" 
href="http://wiki.eclipse.org/File:Egit-0.9-history-view-config.png"><IMG width="267" 
height="138" alt="Egit-0.9-history-view-config.png" src="index.files/Egit-0.9-history-view-config.png"></A><BR>
The buttons are working as radio buttons, i.e. one of the four buttons must 
always be down. </P>
<UL>
  <LI> If the "Repository" button is down, the commit log is not filtered and 
  shows all commits reachable from the currently checked out branch (or all 
  commits, see below about the "All Branches" action)</LI></UL>
<UL>
  <LI> If the "Project" button is down, the commit log is filtered to show all 
  commits which affected any of the resources in the project containing the 
  current input</LI></UL>
<UL>
  <LI> If the "Folder" toggle is down, the commit log is filtered to show all 
  commits which affected any of the resources in the parent folder of the 
  current input</LI></UL>
<UL>
  <LI> If the "Resource" button is down, the commit log is filtered to show only 
  commits which affected the current input; the view menu item <B>Show &gt; 
  Follow Renames</B> allows to toggle whether renames of the selected resource 
  should be followed by this filter</LI></UL>
<P>Note that not all combinations of filter setting and current input are 
meaningful; for example, if the current input is a project, the "Project" option 
is in fact the same as the "Resource" option. </P>
<H5><SPAN class="mw-headline" id="Compare_Mode">Compare Mode</SPAN></H5>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-history-view-comparemode.png"><IMG 
width="28" height="31" alt="Egit-0.9-history-view-comparemode.png" src="index.files/Egit-0.9-history-view-comparemode.png"></A> 
</P>
<P>The next button is again a toggle, activating "Compare Mode". If  it is down, 
certain double-click actions (see above) will open a compare editor instead of a 
normal editor. </P>
<H5><SPAN class="mw-headline" id="All_Branches">All Branches</SPAN></H5>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-history-view-allbranches.png"><IMG 
width="24" height="32" alt="Egit-0.9-history-view-allbranches.png" src="index.files/Egit-0.9-history-view-allbranches.png"></A> 
</P>
<P>This toggle activates the "All Branches" mode. By default, only those commits 
are shown in the commit log that can be reached from the currently checked out 
commit, i.e. the Commit Graph ends with the currently checked out commit and 
newer commits are not shown. If this button is down, all commits will be shown 
in the commit log. This is illustrated in the following picture from our 
example. The branch "beforeSplit" is currently checked out; by activating the 
toggle, the newer branches will become visible: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-history-view-allbranchesToggle.png"><IMG 
width="1004" height="227" alt="Egit-0.9-history-view-allbranchesToggle.png" src="index.files/Egit-0.9-history-view-allbranchesToggle.png"></A> 
</P>
<H4><SPAN class="mw-headline" id="View_Menu_actions">View Menu 
actions</SPAN></H4>
<H5><SPAN class="mw-headline" id="Configuring_the_View">Configuring the 
View</SPAN></H5>
<P>Most of the toolbar actions are available in the View Menu, too. In addition, 
the following toggles are available: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-HistoryViewSettings.png"><IMG 
width="462" height="256" alt="Egit-3.1-HistoryViewSettings.png" src="index.files/Egit-3.1-HistoryViewSettings.png"></A> 
</P>
<P>and the Filter submenu allows to configure filter settings </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-HistoryViewSettingsFilter.png"><IMG 
width="207" height="76" alt="Egit-3.1-HistoryViewSettingsFilter.png" src="index.files/Egit-3.1-HistoryViewSettingsFilter.png"></A> 
</P>
<P>"Additional Refs" toggles the visibility of certain Refs created during 
actions like fetch, rebase, merge, for example FETCH_HEAD, ORIGIN_HEAD... This 
can be helpful to remove clutter from the history view. </P>
<P>"Notes History" toggles the displaying of Gerrit's review notes branch/ref in 
the History view </P>
<P>"Follow Renames" toggles whether renames of a selected resource should be 
followed in the History View, if the  "Resource" filter is used. This preference 
can also be configured in the preference wizard <B>Preferences &gt; Team &gt; 
Git &gt; History &gt; Follow Renames</B>. </P>
<P>"Revision Comment" toggles the visiblity of the Revision Comment area. </P>
<P>"Revision Details" toggles the visibility of the Revision Detail area. </P>
<P>If "Relative Dates" is checked, the commit dates are shown as relative dates 
instead of absolute dates. </P>
<P>"E-mail Adresses" toggles the display of committer e-mails. </P>
<P>The sub-menu "In Revision Comment" opens a sub-menu with some more toggles 
that govern the appearance of the Revision Comment area: </P>
<P>"Tag sequence" allows to show/hide a couple of lines indicating the last tag 
in the list of ancestors of the given commit and the next tag in the list of 
successors of the given commit, i.e. the tags preceding/following the given 
commit. </P>
<P>The "Wrap Comments" and "Fill paragraphs" toggles govern the formatting 
within the Revision Comment area. </P>
<P>"Revision Details" and "Revision Comments" are also available by 
right-clicking anywhere in the Commit Graph area. </P>
<P>"Tag sequence", "Wrap Comments" and "Fill paragraphs" are also available by 
right-clicking anywhere in the Revision Comment area. </P>
<H4><SPAN class="mw-headline" id="Context_Menu_actions">Context Menu 
actions</SPAN></H4>
<P>The context menu in the Commit Graph area is slightly different, depending on 
whether the current is a File or a Folder/Project, respectively. The following 
menu entries are always available: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-1.2-historyview-menu.png"><IMG 
width="271" height="350" alt="Egit-1.2-historyview-menu.png" src="index.files/Egit-1.2-historyview-menu.png"></A> 
</P>
<P>If the current input is a File, there are some other actions available; if 
exactly one commit is selected, there are three additional options: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-1.2-historyview-file-menu.png"><IMG 
width="205" height="59" alt="Egit-1.2-historyview-file-menu.png" src="index.files/Egit-1.2-historyview-file-menu.png"></A> 
</P>
<P>and if exactly two commits are selected, the menu will appear like this: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-1.2-historyview-2files-menu.png"><IMG 
width="445" height="203" alt="Egit-1.2-historyview-2files-menu.png" src="index.files/Egit-1.2-historyview-2files-menu.png"></A> 
</P>
<P>If more than two commits are selected, only the "Open" action and the 
"Quickdiff" menu will be available. </P>
<H5><SPAN class="mw-headline" id="Compare_with_working_tree">Compare with 
working tree</SPAN></H5>
<P>This action is only available if the current input is a file and a single 
commit is selected. It will open a compare editor comparing the file content of 
the selected commit with the file content in the working tree. </P>
<H5><SPAN class="mw-headline" id="Compare_with_each_other">Compare with each 
other</SPAN></H5>
<P>This action is only available if the current input is a file and exactly two 
commits are selected. It will open a compare editor comparing the file content 
of the selected commits with each other. </P>
<H5><SPAN class="mw-headline" id="Open">Open</SPAN></H5>
<P>This action is only available if the current input is a file. It will open an 
editor for each selected commit displaying the content of the file for the given 
commit. </P>
<H5><SPAN class="mw-headline" id="Checkout">Checkout</SPAN></H5>
<P>This checks out the currently selected commit. If a branch exists for this 
commit, the branch is checked out, if more than one branch exists for this 
commit, a dialog will be shown asking which branch should be checked out. If no 
branches exist for the commit, the commit will be checked out and <A href="http://wiki.eclipse.org/EGit/User_Guide#.22Detached.22_HEAD">HEAD 
will become detached</A>. </P>
<H5><SPAN class="mw-headline" id="Create_Branch...">Create Branch...</SPAN></H5>
<P>Creates a branch on the currently selected commit. A dialog will be shown 
asking for a branch name and whether the newly created branch should be checked 
out. </P>
<H5><SPAN class="mw-headline" id="Delete_Branch">Delete Branch</SPAN></H5>
<P>This action will be enabled if a branch exists for the currently selected 
commit, which is not checked out. If there is a single branch on this commit, 
which is not checked out, this action will delete this branch immediately. If 
multiple such branches exist, a dialog will be shown asking which branches 
should be deleted. If commits become unreachable on "Delete Branch" a 
confirmation dialog will be shown to prevent accidental unreachability of 
commits. </P>
<H5><SPAN class="mw-headline" id="Create_Tag...">Create Tag...</SPAN></H5>
<P>Creates a tag on the currently selected commit. A dialog will be shown asking 
for a tag name and a tag message. </P>
<H5><SPAN class="mw-headline" id="Create_Patch...">Create Patch...</SPAN></H5>
<P>This action is not available on the very first commit of a Repository. It 
will create a patch containing the changes of the currently selected commit 
compared to that commit's predecessor. A dialog will be shown asking whether the 
patch should be created as file or in the clipboard and whether to use the Git 
patch format of the generic patch format. </P>
<H5><SPAN class="mw-headline" id="Cherry_Pick">Cherry Pick</SPAN></H5>
<P>Applies the change introduced by the selected commit on top of the currently 
checked out commit. </P>
<H5><SPAN class="mw-headline" id="Revert_Commit">Revert Commit</SPAN></H5>
<P>Reverts the changes that the selected commit introduces by creating a new 
commit on top of the currently checked out commit. </P>
<H5><SPAN class="mw-headline" id="Merge">Merge</SPAN></H5>
<P>Merges the selected commit into the currently checked out branch. </P>
<H5><SPAN class="mw-headline" id="Rebase_on_top_of">Rebase on top of</SPAN></H5>
<P>Rebases the currently checked out branch on top of the selected commit. </P>
<H5><SPAN class="mw-headline" id="Reset_.3E_Soft.2FMixed.2FHard">Reset &gt; 
Soft/Mixed/Hard</SPAN></H5>
<P>This action resets the Repository containing the current input to the 
currently selected commit. Depending on the choice of the sub-menu, a soft, 
mixed, or hard reset will be performed. </P>
<H5><SPAN class="mw-headline" 
id="Quickdiff_.3E_Reset_Quickdiff_Basline_to_HEAD">Quickdiff &gt; Reset 
Quickdiff Basline to HEAD</SPAN></H5>
<H5><SPAN class="mw-headline" id="Quickdiff_.3E_Reset_Quickdiff_Basline_to_first_parent_of_HEAD">Quickdiff 
&gt; Reset Quickdiff Basline to first parent of HEAD</SPAN></H5>
<P>These two actions set the quickdiff basline for the repository to HEAD or to 
the parent of HEAD. These actions are always available, even if more than one 
commit is selected. </P>
<H5><SPAN class="mw-headline" id="Quickdiff_.3E_Set_as_Baseline">Quickdiff &gt; 
Set as Baseline</SPAN></H5>
<P>This action is only available if a single commit is selected; it will st the 
quickdiff baseline for the repository to the selected commit. </P>
<H5><SPAN class="mw-headline" id="Copy">Copy</SPAN></H5>
<P>Copies the IDs of the currently selected commit or commits into the 
clipboard. </P>
<H5><SPAN class="mw-headline" id="Show_Revision_Comment">Show Revision 
Comment</SPAN></H5>
<P>Toggles the visibility of the Revision Comment area. </P>
<H5><SPAN class="mw-headline" id="Show_Revision_Details">Show Revision 
Details</SPAN></H5>
<P>Toggles the visibility of the Revision Details area. </P>
<H5><SPAN class="mw-headline" id="Wrap_Comments">Wrap Comments</SPAN></H5>
<P>Only available when right-clicking on the Revision Comment area. If active, 
the comments will be auto-wrapped to fill the display area, otherwise the 
wrapping of the commit message will be used. </P>
<H5><SPAN class="mw-headline" id="Fill_Paragraphs">Fill Paragraphs</SPAN></H5>
<P>Only available when right-clicking on the Revision Comment area. If active, 
the commit message will be displayed without unnecessary line breaks. <BR></P>
<H4><SPAN class="mw-headline" id="Drag_and_Drop_Support">Drag and Drop 
Support</SPAN></H4>
<P>You may drag and drop commits from the commit graph either onto a <A class="external text" 
href="http://wiki.eclipse.org/index.php/Mylyn/User_Guide" 
rel="nofollow">Mylyn</A> Task or into a folder on your harddisk. In both cases, 
EGit will automatically create a patch you may attach to a bug or store on disk. 
</P>
<H4><SPAN class="mw-headline" 
id="Working_with_the_Revision_Details_Area">Working with the Revision Details 
Area</SPAN></H4>
<P>The Revision Details Area shows a table of the files that were changed by the 
selected commit. Selecting the context menu action <B>Show Annotations</B> on 
selected files will open the file in a (read-only) editor and display an 
annotation ruler with commit and author information for each line in a file. See 
<A href="http://wiki.eclipse.org/EGit/User_Guide#Finding_the_author_of_each_line_in_a_file">this 
section</A>. </P>
<H3><SPAN class="mw-headline" id="Synchronize_View">Synchronize View</SPAN></H3>
<P>The menu command <B>Team &gt; Synchronize Workspace</B> will launch the 
Synchronize View. This view allows you to inspect the differences between the 
resources in the local workspace and a local or remote tracking branch. 
Alternatively you may compare a local and a remote tracking branch. Comparison 
of two remote tracking branches as well as menu commands on the Synchronize View 
are not yet available in this EGit version and will be provided in a future 
release. </P>
<P>Here is what the Git Synchronize View looks like: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-synchronize-overview.png"><IMG 
width="640" height="324" alt="Egit-0.9-synchronize-overview.png" src="index.files/Egit-0.9-synchronize-overview.png"></A> 
</P>
<H4><SPAN class="mw-headline" id="Synchronization_State">Synchronization 
State</SPAN></H4>
<P>The Synchronize View shows the synchronization state of resources in your 
workspace or a local branch compared to those in another local or remote 
tracking branch representing the state of a branch from a remote repository. 
This state is shown by using icons and can also be configured to show the state 
as text appended to the resource name. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-synchronize-overview-labels.png"><IMG 
width="639" height="324" alt="Egit-0.9-synchronize-overview-labels.png" src="index.files/Egit-0.9-synchronize-overview-labels.png"></A> 
</P>
<P>A description of the icons is shown in the table below: </P>
<TABLE class="wikitable">
  <TBODY>
  <TR>
    <TH> Icon </TH>
    <TH> Description </TH></TR>
  <TR>
    <TD><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-synchronize-incoming-add.png"><IMG 
      width="20" height="20" alt="Egit-0.9-synchronize-incoming-add.png" src="index.files/Egit-0.9-synchronize-incoming-add.png"></A> 
    </TD>
    <TD> An incoming addition means that a resource has been added to the 
      target branch. </TD></TR>
  <TR>
    <TD><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-synchronize-incoming-change.png"><IMG 
      width="20" height="20" alt="Egit-0.9-synchronize-incoming-change.png" src="index.files/Egit-0.9-synchronize-incoming-change.png"></A> 
    </TD>
    <TD> An incoming change means that the file has changed in the target 
      branch. </TD></TR>
  <TR>
    <TD><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-synchronize-incoming-deletion.png"><IMG 
      width="20" height="20" alt="Egit-0.9-synchronize-incoming-deletion.png" 
      src="index.files/Egit-0.9-synchronize-incoming-deletion.png"></A> </TD>
    <TD> An incoming deletion means that a resource was deleted from the 
      target branch. </TD></TR>
  <TR>
    <TD><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-synchronize-outgoing-add.png"><IMG 
      width="20" height="20" alt="Egit-0.9-synchronize-outgoing-add.png" src="index.files/Egit-0.9-synchronize-outgoing-add.png"></A> 
    </TD>
    <TD> An outgoing addition means that the file was added to your workspace 
      or source branch and is not yet in the target branch. </TD></TR>
  <TR>
    <TD><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-synchronize-outgoing-change.png"><IMG 
      width="20" height="20" alt="Egit-0.9-synchronize-outgoing-change.png" src="index.files/Egit-0.9-synchronize-outgoing-change.png"></A> 
    </TD>
    <TD> An outgoing change means that the file was changed in your workspace 
      or source branch. </TD></TR>
  <TR>
    <TD><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-synchronize-outgoing-delete.png"><IMG 
      width="20" height="20" alt="Egit-0.9-synchronize-outgoing-delete.png" src="index.files/Egit-0.9-synchronize-outgoing-delete.png"></A> 
    </TD>
    <TD> An outgoing deletion is a resource that has been deleted in your 
      workspace or source branch. </TD></TR>
  <TR>
    <TD><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-synchronize-conflict-add.png"><IMG 
      width="20" height="20" alt="Egit-0.9-synchronize-conflict-add.png" src="index.files/Egit-0.9-synchronize-conflict-add.png"></A> 
    </TD>
    <TD> A conflicting addition means that the resource has been added in your 
      workspace or source branch and in the target branch. </TD></TR>
  <TR>
    <TD><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-synchronize-conflict-modify.png"><IMG 
      width="20" height="20" alt="Egit-0.9-synchronize-conflict-modify.png" src="index.files/Egit-0.9-synchronize-conflict-modify.png"></A> 
    </TD>
    <TD> A conflicting change means that the file has been changed in your 
      workspace or local branch and in the target branch. A manual or automatic 
      merge will be required. Also, any entries in the view that contain 
      children that are conflicts will also be decorated with the conflict icon. 
      This is done to make conflicts easy to find. </TD></TR>
  <TR>
    <TD><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-synchronize-conflict-delete.png"><IMG 
      width="20" height="20" alt="Egit-0.9-synchronize-conflict-delete.png" src="index.files/Egit-0.9-synchronize-conflict-delete.png"></A> 
    </TD>
    <TD> A conflicting deletion means that the resource was deleted in your 
      workspace or source branch and in the target branch. </TD></TR></TBODY></TABLE>
<H4><SPAN class="mw-headline" id="Mode">Mode</SPAN></H4>
<P>The Synchronize View can be filtered using modes using either the toolbar 
actions or the menu items in the view's drop down menu. Modes can be used to 
show only incoming, outgoing or conflicting changes. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-synchronize-mode.png"><IMG 
width="441" height="93" alt="Egit-0.9-synchronize-mode.png" src="index.files/Egit-0.9-synchronize-mode.png"></A> 
</P>
<H4><SPAN class="mw-headline" id="Models">Models</SPAN></H4>
<P>The Synchronize View is capable of displaying different model representations 
of the resources. Each product may contain its own product specific 
representations. The Eclipse SDK comes with three models: </P>
<DL>
  <DT>Workspace Model</DT>
  <DD> displays a resource based model. Layout options for this model can be 
  controlled from the Preferences dialog in the drop down menu. The layout 
  options for the Workspace model are</DD></DL>
<UL>
  <LI>
  <DL>
    <DT>Flat layout</DT>
    <DD> shows all the out-of-sync resources as direct children of their 
    project.</DD>
    <DT>Tree layout</DT>
    <DD> shows the resource hierarchy as it is shown in the Project 
    Explorer.</DD>
    <DT>Compress Folders</DT>
    <DD> shows changes grouped by project and then by folder. This results in a 
    hierarchy that is at most three levels deep with folder paths being 
    compressed into a single level (similar to a Java package).</DD></DL></LI></UL>
<DL>
  <DT>Java Model</DT>
  <DD> displays a Java based model (similar to what appears in the Package 
  Explorer).</DD>
  <DT>Git Commits</DT>
  <DD> displays a Git Commit based model. This model shows incoming changes 
  grouped by commit which is handy for seeing who released what and why. For 
  outgoing changes, you can create commits by <A href="http://wiki.eclipse.org/EGit/User_Guide#Committing_Changes">creating 
  commits</A>. The display format of the Git commit description can be 
  configured in the preferences under <B>Team &gt; Git &gt; Label 
  Decorations</B> in the tab <B>Other</B>.</DD></DL>
<P>In addition to to the models, there is also a <B>Flat Presentation</B> which 
displays all the out-of-sync elements as top level elements. </P>
<H4><SPAN class="mw-headline" id="Navigation">Navigation</SPAN></H4>
<P>The Synchronize view provides toolbar actions for navigating through the 
changes in the view. These actions not only navigate between files but also go 
from change to change within a file. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-synchronize-navigation.png"><IMG 
width="331" height="25" alt="Egit-0.9-synchronize-navigation.png" src="index.files/Egit-0.9-synchronize-navigation.png"></A> 
</P>
<P>The tree in the Synchronize View can easily be expanded and collapsed from 
the tool bar. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.9-synchronize-expand-collapse.png"><IMG 
width="331" height="25" alt="Egit-0.9-synchronize-expand-collapse.png" src="index.files/Egit-0.9-synchronize-expand-collapse.png"></A> 
</P>
<P><BR></P>
<H3><SPAN class="mw-headline" id="Git_Tree_Compare_View">Git Tree Compare 
View</SPAN></H3>
<P>This view will be opened by some of the <B>Compare With</B> actions (see <A 
href="http://wiki.eclipse.org/EGit/User_Guide#Comparing_Content">Comparing 
Content</A>). When started from a resource (e.g. a project or folder), it will 
look similar to the resources in the workspace. However, the usual icons on the 
files will be replaced with icons showing the change state (added, deleted, 
changed, or unchanged). </P>
<P>The changes can be browsed and a double-click on a file will open a compare 
editor for this file (this only makes sense on "changed" files, in case of added 
or deleted files, one side of the compare editor will be empty, whereas 
unchanged files will show the same content on both sides of the editor): </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.11-GitTreeCompareView.png"><IMG 
width="787" height="1113" alt="Egit-0.11-GitTreeCompareView.png" src="index.files/Egit-0.11-GitTreeCompareView.png"></A> 
</P>
<P>It is possible to hide unchanged files by clicking the "Hide files with equal 
content" button in the toolbar. </P>
<P>The Git Tree Compare View can also be started without having workspace 
resources as starting point (for example by comparing two commits in the history 
view when the input of the history view is a Repository and not a workspace 
resource). In this case, the complete content of the Repository is shown and 
both projects and folders appear as simple "folder" icons: </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-0.11-GitTreeCompareViewRepo.png"><IMG 
width="788" height="452" alt="Egit-0.11-GitTreeCompareViewRepo.png" src="index.files/Egit-0.11-GitTreeCompareViewRepo.png"></A> 
</P>
<H3><SPAN class="mw-headline" id="Git_Staging_View">Git Staging View</SPAN></H3>
<P><A class="image" 
href="http://wiki.eclipse.org/File:Egit-3.1-StagingView.png"><IMG width="748" 
height="269" alt="Egit-3.1-StagingView.png" src="index.files/Egit-3.1-StagingView.png"></A> 
</P>
<P>This view provides an equivalent for <CODE>git status</CODE> showing changes 
made in the working tree. Unstaged changes which have not yet been transferred 
to the git index are displayed in the <B>Unstaged Changes</B> pane, changes 
which have already been "added" (staged) to the Git index are shown in the 
<B>Staged Changes</B> pane. By default these panes are displayed in a row 
layout, which can be changed to a column layout by the <B>Column Layout</B> 
option. The Staged- and Unstaged Changes panes by default show the full path of 
the files. They can be configured by the <B>Show File Names First</B> option to 
show the file names first, followed by the directory that the files are located 
in. </P>
<P>Double-click modified files to open a compare view. If fired from the 
"unstaged" pane the compare view will show the not-yet staged changes. When 
fired from the "staged" pane it will display the already staged changes. To open 
a file in the editor, use the <B>Open Workspace Version</B> action on the file's 
context menu. </P>
<P>To stage a file, drag it from the <B>Unstaged Changes</B> pane to the 
<B>Staged Pages</B> pane. Alternatively, use the <B>Add to Git Index</B> action 
on the file's context menu in the <B>Unstaged Changes</B> pane. The <B>Replace 
with File in Git Index</B> action will replace the selected file in the working 
tree. If the file is unstaged, it will be reset. If it is staged, the working 
tree version will be replaced with the staged version from the Git index. </P>
<P>To unstage a file, drag it from the <B>Staged Changes</B> pane to the 
<B>Unstaged Changes</B> pane. Alternatively, use the <B>Remove from Git 
Index</B> action on the file's context menu. </P>
<P>The commit action will commit the staged changes only -- similar to what 
<CODE>git commit</CODE> does in native git. An integrated commit message editor 
allows to edit the commit message for the commit. In contrast to the commit 
dialog, the staging view can be kept open while doing changes. This allows for 
incrementally writing the commit message along with the changes. The commit 
message being edited is associated with the repository, the staging view is 
linked with. It is not stored persistently and will get lost if the staging view 
or Eclipse are closed. </P>
<P>To commit, press <B>Ctrl+Enter</B> ('<I>Command+Enter<B> on Mac OS X) in the 
commit message text field, or click on the </B>Commit</I> or <B>Commit and 
Push</B> button. </P>
<P>The Staging View's view menu allows to configure the Staging View </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-StagingViewSettings.png"><IMG 
width="285" height="93" alt="Egit-3.1-StagingViewSettings.png" src="index.files/Egit-3.1-StagingViewSettings.png"></A> 
</P>
<P>If you are working on a large change and many files are displayed in the 
Staging View you may use the "Filter Files" filter field which will filter the 
content of the Staging View to only show the files matching the filter you 
entered. </P>
<P><A class="image" href="http://wiki.eclipse.org/File:Egit-3.1-StagingViewFilterFiles.png"><IMG 
width="488" height="303" alt="Egit-3.1-StagingViewFilterFiles.png" src="index.files/Egit-3.1-StagingViewFilterFiles.png"></A> 
</P>
<H4><SPAN class="mw-headline" id="Partial_Staging">Partial Staging</SPAN></H4>
<P>Sometimes it's useful to commit only some changes of a file. An example is 
when working on a feature and noticing a typo or small bug, which is unrelated 
to the feature. </P>
<P>To commit only certain changes, these changes have to be staged first. To do 
this, double-click on the file in the <B>Unstaged Changes</B> pane. This will 
open the compare editor. On the left side is the workspace version, on the right 
is the index (staged) version. </P>
<P>Both sides of the compare editor are editable. When changing something in the 
right side (index) and saving, the file will turn up in the <B>Staged 
Changes</B> pane and when committing, exactly that content will be committed. 
</P>
<P>To stage a group of changed lines, the <B>Copy Current Change from Left to 
Right</B> toolbar button (arrow icon) can be used. </P>
<H3><SPAN class="mw-headline" id="Git_Reflog_View">Git Reflog View</SPAN></H3>
<P><A class="image" 
href="http://wiki.eclipse.org/File:Egit-1.2-reflog-view.png"><IMG width="685" 
height="267" alt="Egit-1.2-reflog-view.png" src="index.files/Egit-1.2-reflog-view.png"></A> 
</P>
<P>The Reflog View shows the Git reflog for a selected repository. It supports 
showing the reflog for a specific branch by selecting the hyperlink ref name in 
the top right of the view. Double-clicking or selecting the context menu action 
<B>Open in Commit Viewer</B> on a reflog entry opens the corresponding commit in 
the commit viewer. The context menu action <B>Checkout</B> will checkout the 
selected commit and the <A href="http://wiki.eclipse.org/EGit/User_Guide#.22Detached.22_HEAD">HEAD 
will become detached</A>. </P>
<H2><SPAN class="mw-headline" id="Git_URLs">Git URLs</SPAN></H2>
<P>Git URLs in general consist of transport protocol scheme, address of the 
remote server and the repository path within the remote server and for some 
authenticating protocols also the user ID. </P>
<P>EGit supports the following protocols </P>
<UL>
  <LI><B>file</B> - Direct file system access to the repository.</LI>
  <LI><B>git</B> - The most efficient built-in git protocol (default port 9418). 
  This protocol doesn't provide authentication. Typically used for anonymous 
  read access to the repository.</LI>
  <LI><B>ssh</B> - Git over <A class="external text" href="http://tools.ietf.org/html/rfc4251" 
  rel="nofollow">secure shell (SSH)</A> protocol. Typically used for 
  authenticated write access to the repository.</LI>
  <LI><B>http</B> - <A class="external text" href="http://tools.ietf.org/html/rfc2616" 
  rel="nofollow">Hypertext Transfer Protocol</A> can be tunneled through 
  firewalls.</LI>
  <LI><B>https</B> - <A class="external text" href="http://tools.ietf.org/html/rfc2818" 
  rel="nofollow">Hypertext Transfer Protocol Secure</A> can be tunneled through 
  firewalls.</LI>
  <LI><B>ftp</B> - <A class="external text" href="http://tools.ietf.org/html/rfc959" 
  rel="nofollow">File Transfer Protocol</A></LI>
  <LI><B>sftp</B> - <A class="external text" href="http://en.wikipedia.org/wiki/SSH_File_Transfer_Protocol" 
  rel="nofollow">SSH File Transfer Protocol</A></LI></UL>
<P>Git URLs are used when </P>
<UL>
  <LI><A href="http://wiki.eclipse.org/EGit/User_Guide#Cloning_Remote_Repositories"> 
  cloning repositories</A></LI>
  <LI><A href="http://wiki.eclipse.org/EGit/User_Guide#Fetching_from_other_Repositories"> 
  fetching</A> changes from another repository</LI>
  <LI><A href="http://wiki.eclipse.org/EGit/User_Guide#Pushing_to_other_Repositories"> 
  pushing</A> changes to another repository</LI></UL>
<P><BR></P>
<H2><SPAN class="mw-headline" id="Git_References">Git References</SPAN></H2>
<P>Git References are also known shortly as <B>Refs</B>. <BR>They comprise </P>
<UL>
  <LI>branches</LI>
  <LI>remote-tracking branches</LI>
  <LI>tags</LI></UL>
<P>They all are named with a path using '/' as path separator and are starting 
with "refs". </P>
<UL>
  <LI>Local branches start with "refs/heads/"</LI>
  <LI>Remote tracking branches start with "refs/remotes/". Remote tracking 
  branches proxy branches located in a remote repository so that their state at 
  the time of the last transport operation can be queried also when no 
  connection to the repository is available (offline).</LI>
  <LI>Tags start with "refs/tags/"</LI></UL>
<P>Ref names can be abbreviated as long as the abbreviated form is unique. 
<BR>E.g. </P>
<UL>
  <LI>"master" is short for "refs/heads/master"</LI>
  <LI>"origin/master" is short for "refs/remotes/origin/master"</LI>
  <LI>"v1.0.1" is short for "refs/tags/v1.0.1"</LI></UL>
<P>There is also a number of "reserved" names for Refs that are useful for 
certain scenarios: </P>
<TABLE style="width: 538px; height: 63px;" border="1" cellspacing="1" 
cellpadding="1">
  <TBODY>
  <TR>
    <TD><B>Ref Name</B> </TD>
    <TD><B>Remark</B> </TD></TR>
  <TR>
    <TD> HEAD </TD>
    <TD> Points to the currently checkout out commit </TD></TR>
  <TR>
    <TD> FETCH_HEAD </TD>
    <TD> Points to the result of the last fetch operation </TD></TR>
  <TR>
    <TD> ORIG_HEAD </TD>
    <TD> Points to the commit that was checked out before a merge or rebase 
      operation was started </TD></TR></TBODY></TABLE>
<P>For a complete list for Ref names and the order of precedence if multiple 
references have the same shorthand form see the section "Specifying Revisions" 
section of <A class="external text" href="http://www.kernel.org/pub/software/scm/git/docs/git-rev-parse.html" 
rel="nofollow">git rev-parse</A>. </P>
<H2><SPAN class="mw-headline" id="Refspecs">Refspecs</SPAN></H2>
<P>A "refspec" is used by fetch and push operations to describe the mapping 
between remote <A 
href="http://wiki.eclipse.org/EGit/User_Guide#Git_References">Ref</A> and local 
<A href="http://wiki.eclipse.org/EGit/User_Guide#Git_References">Ref</A>. 
Semantically they define how local branches or tags are mapped to branches or 
tags in a remote repository. In native git they are combined with a colon in the 
format &lt;src&gt;:&lt;dst&gt;, preceded by an optional plus sign, + to denote 
forced update. In EGit they can be displayed and also edited in tabular form in 
the <A 
href="http://wiki.eclipse.org/EGit/User_Guide#Push_Ref_Specifications">Push Ref 
Specification</A> and the <A href="http://wiki.eclipse.org/EGit/User_Guide#Fetch_Ref_Specifications">Fetch 
Ref Specification</A> and other dialogs. </P>
<P>The "left-hand" side of a RefSpec is called source and the "right-hand" side 
is called destination. Depending on whether the RefSpec is used for fetch or for 
push, the semantics of source and destination differ: for a Push RefSpec, the 
source denotes a Ref in the source Repository and the destination denotes a Ref 
in the target Repository. </P>
<H3><SPAN class="mw-headline" id="Push_Refspecs">Push Refspecs</SPAN></H3>
<P>A typical example for a Push RefSpec could be </P>
<PRE>HEAD:refs/heads/master
</PRE>
<P>This means that the currently checked out branch (as signified by the HEAD 
Reference, see <A 
href="http://wiki.eclipse.org/EGit/User_Guide#Git_References">Git 
References</A>) will be pushed into the master branch of the remote repository. 
</P>
<H3><SPAN class="mw-headline" id="Fetch_Refspecs">Fetch Refspecs</SPAN></H3>
<P>A typical example for a Fetch RefSpec could be </P>
<PRE>refs/heads/*:refs/remotes/origin/*
</PRE>
<P>This means that all branches from the remote repository will be fetched into 
the corresponding remote tracking branches of the local repository. </P>
<H2><SPAN class="mw-headline" id="Remotes">Remotes</SPAN></H2>
<P>Remotes are used to manage the repositories ("remotes") whose branches you 
track from your repository. </P>
<P>In EGit Remotes are defined when </P>
<UL>
  <LI><A href="http://wiki.eclipse.org/EGit/User_Guide#Cloning_Remote_Repositories"> 
  Cloning a repository</A> from another repository, by convention this 
  repository the newly cloned one has been created from is named "origin". If 
  you prefer a different name the clone wizard allows to specify that.</LI>
  <LI><A href="http://wiki.eclipse.org/EGit/User_Guide#Remote_Repositories"> 
  Defining Remotes in the Repositories View</A></LI></UL>
<P>A Remote first of all defines a <B>name</B> for the repository whose branches 
you track, this is important since you may want to track branches from different 
repositories so the name helps to understand what repository a certain operation 
is dealing with. In addition <A href="http://wiki.eclipse.org/EGit/User_Guide#Refspecs"> 
Refspecs</A> specified for a given Remote define a <B>mapping of branches and 
tags</B> in your local repository to branches and tags in the remote repository. 
You may want to use different mappings for inbound or outbound transport 
operations hence there are <A href="http://wiki.eclipse.org/EGit/User_Guide#Cloning_Remote_Repositories"> 
editors</A> to define Fetch and Push Configurations available in EGit. </P>
<H2><SPAN class="mw-headline" id="Git_Ignore">Git Ignore</SPAN></H2>
<P><CODE>.gitignore</CODE> files located in the working tree specify files that 
intentionally should not be tracked by git. They only concern files that are not 
yet tracked by git. In order to ignore uncommitted changes in already tracked 
files refer to the <A href="http://wiki.eclipse.org/EGit/User_Guide#Menu_Actions"> 
assume unchanged action</A>. </P>
<P>Each line in <CODE>.gitignore</CODE> files defines a pattern. Git checks 
ignore patterns following the hierarchy of the working tree from highest to 
lowest. Patterns defined in higher level <CODE>.gitignore</CODE> files are 
overridden by those defined in lower levels. Files which shall be ignored for 
all working on a given project are usually included in the project's repository 
to easily share them in the team. </P>
<P>Pattern format definition: </P>
<UL>
  <LI> blank lines are ignored</LI>
  <LI> lines starting with <B>#</B> serve as comments</LI>
  <LI> the optional prefix <B>!</B> negates the pattern. Files excluded by a 
  matching previous pattern become included again. Patterns ending with a slash 
  only match directories but not files or symbolic links.</LI>
  <LI> patterns not containing a slash are treated as shell glob patterns 
  matched against the path relative to the location of the .gitignore file</LI>
  <LI> git treats patterns as shell globs as defined in <A class="external text" 
  href="http://www.kernel.org/doc/man-pages/online/pages/man3/fnmatch.3.html" 
  rel="nofollow">fnmatch(3)</A></LI>
  <LI> wildcards in patterns do not match <B>/</B> in path names</LI>
  <LI> a leading slash matches the beginning of a pathname</LI></UL>
<P>The EGit <B>Ignore</B> <A href="http://wiki.eclipse.org/EGit/User_Guide#Menu_Actions"> 
menu action</A> adds the selected resource to the <CODE>.gitignore</CODE> file 
in the resource's parent directory. To enter other ignore patterns use a text 
editor. </P>
<H2><SPAN class="mw-headline" id="Git_Fetch_Factory_for_PDE_Build">Git Fetch 
Factory for PDE Build</SPAN></H2>
<P>As part of EGit's PDE Tools, there's a PDE Build fetch factory for Git 
included in the <B>org.eclipse.egit.fetchfactory</B> plug-in. </P>
<P>The map file's file format: <B>type@id,[version]=GIT,args</B> </P>
<P>Where <B>args</B> is a comma-separated list of key-value pairs. </P>
<P>Accepted <B>args</B> include: </P>
<UL>
  <LI><B>tag*</B> - mandatory Git tag</LI>
  <LI><B>repo*</B> - mandatory repo location</LI>
  <LI> path - optional path relative to repo which points to the element 
  (otherwise it's assumed that the element is at the repository root)</LI>
  <LI> prebuilt - optional boolean value indicating that the path points to a 
  pre-built bundle in the repository</LI></UL>
<P>Fetching is implemented as a three-step process: </P>
<UL>
  <LI> The repository is cloned to local disc. If it already exists, it is 
  assumed that it was previously cloned and just new commits will be 
fetched</LI>
  <LI> The specified tag will be checked out in the local clone</LI>
  <LI> The content of the path will be copied to the final build 
location</LI></UL><!-- 
NewPP limit report
Cached time: 20160519150152
Cache expiry: 86400
Dynamic content: false
CPU time usage: 2.696 seconds
Real time usage: 4.407 seconds
Preprocessor visited node count: 1424/1000000
Preprocessor generated node count: 1654/1000000
Post‐expand include size: 120/2097152 bytes
Template argument size: 32/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
--> <!-- 
Transclusion expansion time report (%,ms,calls,template)
100.00%    5.225      1 - -total
 85.45%    4.465      2 - Template:Code
--> <!-- Saved in parser cache with key my_wiki:pcache:idhash:20966-0!*!0!!en!5!* and timestamp 20160519150148 and revision id 392614
 --> 
</DIV><!-- catlinks -->                     
<DIV class="catlinks catlinks-allhidden" id="catlinks"></DIV><!-- /catlinks -->  
                                 </DIV></DIV></DIV></DIV><!-- /maincontent -->   
              <!-- printfooter -->         
<DIV class="printfooter">        Retrieved from "<A dir="ltr" href="http://wiki.eclipse.org/index.php?title=EGit/User_Guide&amp;oldid=392614">http://wiki.eclipse.org/index.php?title=EGit/User_Guide&amp;oldid=392614</A>" 
       </DIV><!-- /printfooter -->                         <!-- debughtml -->    
             <!-- /debughtml -->       </DIV><!-- /bodyContent -->     
</SECTION><!-- /content -->     <!-- footer -->     </DIV><SECTION class="footer-offset background-white margin-top-25" 
id="footer-contribution-info" style="border-top-color: rgb(204, 204, 204); border-top-width: 1px; border-top-style: solid;">
<DIV class="container text-center padding-top-10 padding-bottom-10">
<P id="footercredit">This page was last modified 07:51, 19 October 2015 by <A 
title="User:Markus keller.ch.ibm.com" href="http://wiki.eclipse.org/User:Markus_keller.ch.ibm.com">Markus 
Keller</A>. Based on work by <A title="User:Cly.leapfrog.com (page does not exist)" 
class="new" href="http://wiki.eclipse.org/index.php?title=User:Cly.leapfrog.com&amp;action=edit&amp;redlink=1">cyndi 
ly</A>, <A title="User:Dale.preston.conocophillips.com (page does not exist)" 
class="new" href="http://wiki.eclipse.org/index.php?title=User:Dale.preston.conocophillips.com&amp;action=edit&amp;redlink=1">Dale 
Preston</A> and <A title="User:Eclipse.hohenegger.eu (page does not exist)" 
class="new" href="http://wiki.eclipse.org/index.php?title=User:Eclipse.hohenegger.eu&amp;action=edit&amp;redlink=1">Max 
Hohenegger</A> and <A title="EGit/User Guide" href="http://wiki.eclipse.org/index.php?title=EGit/User_Guide&amp;action=credits">others</A>.</P>
<P id="footerviews"></P></DIV></SECTION></main><!-- /#main-content-container-row --> 
<P class="noprint hidden-print" id="back-to-top"><A class="visible-xs" href="http://wiki.eclipse.org/EGit/User_Guide#top">Back 
to the top</A></P><FOOTER class="noprint hidden-print" id="solstice-footer" 
role="contentinfo">
<DIV class="container">
<DIV class="row"><SECTION class="col-sm-offset-1 col-xs-11 col-sm-7 col-md-6 col-md-offset-0 hidden-print" 
id="footer-eclipse-foundation">
<H2 class="section-title">Eclipse Foundation</H2>
<UL class="nav">
  <LI><A href="https://www.eclipse.org/org/">About us</A></LI>
  <LI><A href="https://www.eclipse.org/org/foundation/contact.php">Contact 
  Us</A></LI>
  <LI><A href="https://www.eclipse.org/donate">Donate</A></LI>
  <LI><A href="https://www.eclipse.org/org/documents/">Governance</A></LI>
  <LI><A href="https://www.eclipse.org/artwork/">Logo and Artwork</A></LI>
  <LI><A href="https://www.eclipse.org/org/foundation/directors.php">Board of 
  Directors</A></LI></UL></SECTION><SECTION class="col-sm-offset-1 col-xs-11 col-sm-7 col-md-6 col-md-offset-0 hidden-print" 
id="footer-legal">
<H2 class="section-title">Legal</H2>
<UL class="nav">
  <LI><A href="https://www.eclipse.org/legal/privacy.php">Privacy 
Policy</A></LI>
  <LI><A href="https://www.eclipse.org/legal/termsofuse.php">Terms of 
  Use</A></LI>
  <LI><A href="https://www.eclipse.org/legal/copyright.php">Copyright 
  Agent</A></LI>
  <LI><A href="https://www.eclipse.org/org/documents/epl-v10.php">Eclipse Public 
  License </A></LI>
  <LI><A href="https://www.eclipse.org/legal/">Legal Resources 
</A></LI></UL></SECTION><SECTION class="col-sm-offset-1 col-xs-11 col-sm-7 col-md-6 col-md-offset-0 hidden-print" 
id="footer-useful-links">
<H2 class="section-title">Useful Links</H2>
<UL class="nav">
  <LI><A href="https://bugs.eclipse.org/bugs/">Report a Bug</A></LI>
  <LI><A href="http://help.eclipse.org/">Documentation</A></LI>
  <LI><A href="https://www.eclipse.org/contribute/">How to Contribute</A></LI>
  <LI><A href="https://www.eclipse.org/mail/">Mailing Lists</A></LI>
  <LI><A href="https://www.eclipse.org/forums/">Forums</A></LI>
  <LI><A 
href="http://marketplace.eclipse.org/">Marketplace</A></LI></UL></SECTION><SECTION 
class="col-sm-offset-1 col-xs-11 col-sm-7 col-md-6 col-md-offset-0 hidden-print" 
id="footer-other">
<H2 class="section-title">Other</H2>
<UL class="nav">
  <LI><A href="https://www.eclipse.org/ide/">IDE and Tools</A></LI>
  <LI><A href="https://www.eclipse.org/projects">Community of Projects</A></LI>
  <LI><A href="https://www.eclipse.org/org/workinggroups/">Working 
  Groups</A></LI></UL>
<UL class="list-inline social-media">
  <LI><A href="https://twitter.com/EclipseFdn"><I 
  class="fa fa-twitter-square"></I></A></LI>
  <LI><A href="https://plus.google.com/+Eclipse"><I class="fa fa-google-plus-square"></I></A></LI>
  <LI><A href="https://www.facebook.com/eclipse.org"><I class="fa fa-facebook-square"></I> 
  </A></LI>
  <LI><A href="https://www.youtube.com/user/EclipseFdn"><I class="fa fa-youtube-square"></I></A></LI></UL></SECTION>
<DIV class="col-sm-offset-1 col-sm-14 col-md-24 col-md-offset-0" 
id="copyright"><SPAN class="hidden-print">
<DIV class="wrapper-logo-eclipse-white"><A href="https://www.eclipse.org/"><IMG 
class="logo-eclipse-white img-responsive" alt="logo" src="index.files/eclipse-logo-bw-332x78.png"></A></DIV></SPAN> 
        
<P id="copyright-text">Copyright © 2016 The Eclipse Foundation. All Rights 
Reserved.</P></DIV><A class="scrollup" href="http://wiki.eclipse.org/EGit/User_Guide#">Back 
to the top</A>     </DIV></DIV></FOOTER><!-- Placed at the end of the document so the pages load faster --> 
<SCRIPT type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-910670-4']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</SCRIPT>
     <!-- /footer -->     
<SCRIPT>window.RLQ = window.RLQ || []; window.RLQ.push( function () {
mw.loader.state({"skins.solstice":"loading","user":"ready","user.groups":"ready"});mw.loader.load("/load.php?debug=false\u0026lang=en\u0026modules=skins.solstice\u0026only=scripts\u0026skin=solstice");mw.loader.load(["mediawiki.toc","mediawiki.action.view.postEdit","site","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.searchSuggest"]);
} );</SCRIPT>

<SCRIPT>window.RLQ = window.RLQ || []; window.RLQ.push( function () {
mw.config.set({"wgBackendResponseTime":509});
} );</SCRIPT>
  </BODY></HTML>
